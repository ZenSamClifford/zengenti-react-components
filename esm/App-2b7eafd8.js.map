{"version":3,"file":"App-2b7eafd8.js","sources":["../src/redux/store/history.js","../src/util/ContensisDeliveryApi.js","../src/redux/sagas/navigation.js","../src/schema.js","../src/routing/util/expressions.js","../src/routing/util/queries.js","../src/routing/redux/sagas.js","../src/user/redux/sagas/register.js","../src/user/redux/sagas/index.js","../src/redux/sagas/index.js","../src/util/pickProject.js","../src/app/App.js"],"sourcesContent":["import { createBrowserHistory, createMemoryHistory } from 'history';\n\n// Create a history depending on the environment\nconst selectedHistory =\n  typeof window !== 'undefined' ? createBrowserHistory : createMemoryHistory;\n\nexport const history = (options = {}) => selectedHistory(options);\nexport const browserHistory = selectedHistory();\n","import { Client } from 'contensis-delivery-api';\nimport { setSurrogateKeys } from '../routing/redux/actions';\nimport { reduxStore } from '~/redux/store/store';\n\nconst storeSurrogateKeys = response => {\n  const keys = response.headers.get\n    ? response.headers.get('surrogate-key')\n    : response.headers.map['surrogate-key'];\n  if (keys) reduxStore.dispatch(setSurrogateKeys(keys));\n};\n\nconst getClientConfig = project => {\n  let config = DELIVERY_API_CONFIG; /* global DELIVERY_API_CONFIG */\n  config.responseHandler = {};\n\n  if (project) {\n    config.projectId = project;\n  }\n\n  // // we only want the surrogate key header in a server context\n  if (typeof window === 'undefined') {\n    config.defaultHeaders = {\n      'x-require-surrogate-key': true,\n    };\n    config.responseHandler[200] = storeSurrogateKeys;\n  }\n\n  if (\n    typeof window !== 'undefined' &&\n    PROXY_DELIVERY_API /* global PROXY_DELIVERY_API */\n  ) {\n    // ensure a relative url is used to bypass the need for CORS (separate OPTIONS calls)\n    config.rootUrl = '';\n    config.responseHandler[404] = () => null;\n  }\n  return config;\n};\n\nexport * from 'contensis-delivery-api';\n\nclass DeliveryApi {\n  getClientSideVersionStatus = () => {\n    if (typeof window != 'undefined') {\n      const currentHostname = window.location.hostname;\n      return this.getVersionStatusFromHostname(currentHostname);\n    }\n    return null;\n  };\n  getVersionStatusFromHostname = currentHostname => {\n    if (currentHostname.indexOf('localhost') > -1) return 'latest';\n\n    if (currentHostname.endsWith('contensis.cloud')) {\n      if (currentHostname.indexOf('preview.') > -1) {\n        return 'latest';\n      } else {\n        return 'published';\n      }\n    }\n\n    if (currentHostname.endsWith('cloud.contensis.com')) {\n      if (currentHostname.indexOf('preview-') > -1) {\n        return 'latest';\n      } else {\n        return 'published';\n      }\n    }\n\n    return 'published';\n  };\n  search = (query, linkDepth, project, env) => {\n    const client = Client.create(getClientConfig(project, env));\n    return client.entries.search(\n      query,\n      typeof linkDepth !== 'undefined' ? linkDepth : 1\n    );\n  };\n  getClient = (deliveryApiStatus = 'published', project, env) => {\n    const baseConfig = getClientConfig(project, env);\n    baseConfig.versionStatus = deliveryApiStatus;\n    return Client.create(baseConfig);\n  };\n  getEntry = (\n    id,\n    linkDepth = 0,\n    deliveryApiStatus = 'published',\n    project,\n    env\n  ) => {\n    const baseConfig = getClientConfig(project, env);\n    baseConfig.versionStatus = deliveryApiStatus;\n    const client = Client.create(baseConfig);\n    // return client.entries.get(id, linkDepth);\n    return client.entries.get({ id, linkDepth });\n  };\n}\n\nexport const deliveryApi = new DeliveryApi();\n\nclass CacheNode {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n    this.next = null;\n    this.prev = null;\n  }\n}\n\nclass LruCache {\n  constructor(limit = 100) {\n    this.map = {};\n    this.head = null;\n    this.tail = null;\n    this.limit = limit || 100;\n    this.size = 0;\n  }\n\n  get(key) {\n    if (this.map[key]) {\n      let value = this.map[key].value;\n      let node = new CacheNode(key, value);\n      this.remove(key);\n      this.setHead(node);\n      return value;\n    }\n  }\n\n  set(key, value) {\n    let node = new CacheNode(key, value);\n    if (this.map[key]) {\n      this.remove(key);\n    } else {\n      if (this.size >= this.limit) {\n        delete this.map[this.tail.key];\n        this.size--;\n        this.tail = this.tail.prev;\n        this.tail.next = null;\n      }\n    }\n    this.setHead(node);\n  }\n\n  setHead(node) {\n    node.next = this.head;\n    node.prev = null;\n    if (this.head) {\n      this.head.prev = node;\n    }\n    this.head = node;\n    if (!this.tail) {\n      this.tail = node;\n    }\n    this.size++;\n    this.map[node.key] = node;\n  }\n\n  remove(key) {\n    let node = this.map[key];\n    if (node.prev) {\n      node.prev.next = node.next;\n    } else {\n      this.head = node.next;\n    }\n    if (node.next) {\n      node.next.prev = node.prev;\n    } else {\n      this.tail = node.prev;\n    }\n    delete this.map[key];\n    this.size--;\n  }\n}\n\nclass CachedSearch {\n  cache = new LruCache();\n  taxonomyLookup = {};\n\n  search(query, linkDepth, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      project + JSON.stringify(query) + linkDepth.toString(),\n      () => client.entries.search(query, linkDepth)\n    );\n  }\n\n  get(id, linkDepth, versionStatus, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    client.clientConfig.versionStatus = versionStatus;\n    return this.request(id, () => client.entries.get({ id, linkDepth }));\n  }\n\n  getContentType(id, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(`[CONTENT TYPE] ${id} ${project}`, () =>\n      client.contentTypes.get(id)\n    );\n  }\n\n  getTaxonomyNode(key, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(`[TAXONOMY NODE] ${key}`, () =>\n      client.taxonomy\n        .resolveChildren(key)\n        .then(node => this.extendTaxonomyNode(node))\n    );\n  }\n\n  getRootNode(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(`${project} / ${JSON.stringify(options)}`, () =>\n      client.nodes.getRoot(options)\n    );\n  }\n\n  getNode(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} ${(options && options.path) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.get(options)\n    );\n  }\n\n  getAncestors(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} [A] ${(options && options.id) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.getAncestors(options)\n    );\n  }\n\n  getChildren(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} [C] ${(options && options.id) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.getChildren(options)\n    );\n  }\n\n  getSiblings(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} [S] ${(options && options.id) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.getSiblings(options)\n    );\n  }\n\n  request(key, execute) {\n    if (!this.cache.get(key) || typeof window == 'undefined') {\n      let promise = execute();\n      this.cache.set(key, promise);\n      promise.catch(() => {\n        this.cache.remove(key);\n      });\n    }\n    return this.cache.get(key);\n  }\n\n  extendTaxonomyNode(node) {\n    let id = this.getTaxonomyId(node);\n    this.taxonomyLookup[id] = node.key;\n    return {\n      ...node,\n      id,\n      children: node.children\n        ? node.children.map(n => this.extendTaxonomyNode(n))\n        : null,\n    };\n  }\n\n  getTaxonomyId(node) {\n    if (node.key) {\n      let parts = node.key.split('/');\n      return parts[parts.length - 1];\n    }\n    return '';\n  }\n\n  getTaxonomyKey(id) {\n    return this.taxonomyLookup[id];\n  }\n}\n\nexport const cachedSearch = new CachedSearch();\n","import { takeEvery, put, select } from 'redux-saga/effects';\n\nimport { deliveryApi } from '~/util/ContensisDeliveryApi';\nimport {\n  GET_NODE_TREE,\n  SET_NODE_TREE,\n  GET_NODE_TREE_ERROR,\n} from '~/redux/types/navigation';\nimport { hasNavigationTree } from '~/redux/selectors/navigation';\nimport { selectVersionStatus } from '~/redux/selectors/version';\nimport { selectCurrentProject } from '~/routing/redux/selectors';\n\nexport const navigationSagas = [takeEvery(GET_NODE_TREE, ensureNodeTreeSaga)];\n\nexport function* ensureNodeTreeSaga(action) {\n  const state = yield select();\n  try {\n    if (!hasNavigationTree(state)) {\n      const deliveryApiVersionStatus = yield select(selectVersionStatus);\n      const project = yield select(selectCurrentProject);\n      const nodes = yield deliveryApi\n        .getClient(deliveryApiVersionStatus, project)\n        .nodes.getRoot({\n          depth: action.treeDepth || 0,\n        });\n      if (nodes) {\n        yield put({ type: SET_NODE_TREE, nodes });\n      } else {\n        yield put({ type: GET_NODE_TREE_ERROR });\n      }\n    }\n  } catch (ex) {\n    yield put({ type: GET_NODE_TREE_ERROR, error: ex.toString() });\n  }\n}\n","export const DataFormats = {\n  entry: 'entry',\n  webpage: 'webpage',\n};\n\nconst sys = {\n  contentTypeId: 'sys.contentTypeId',\n  dataFormat: 'sys.dataFormat',\n  filename: 'sys.properties.filename',\n  id: 'sys.id',\n  includeInSearch: 'sys.metadata.includeInSearch',\n  slug: 'sys.slug',\n  uri: 'sys.uri',\n  versionStatus: 'sys.versionStatus',\n};\n\nexport const Fields = {\n  entryTitle: 'entryTitle',\n  entryDescription: 'entryDescription',\n  keywords: 'keywords',\n  sys,\n  contentTypeId: 'sys.contentTypeId',\n  wildcard: '*',\n};\n\nexport const VersionStatus = {\n  published: 'published',\n  latest: 'latest',\n};\n","import { Op, OrderBy } from 'contensis-delivery-api';\nimport { Fields, DataFormats } from '~/schema';\nimport { fixFreeTextForElastic, extractQuotedPhrases } from './search';\n\nexport const fieldExpression = (\n  field,\n  value,\n  operator = 'equalTo',\n  weight = null\n) => {\n  if (!field || !value) return [];\n  if (Array.isArray(value)) return equalToOrIn(field, value, operator);\n  else\n    return !weight\n      ? [Op[operator](field, value)]\n      : [Op[operator](field, value).weight(weight)];\n};\n\nexport const contentTypeIdExpression = (contentTypeIds, webpageTemplates) => {\n  const expressions = [];\n  if (!contentTypeIds && !webpageTemplates) return expressions;\n\n  if (contentTypeIds && contentTypeIds.length > 0) {\n    expressions.push(\n      ...dataFormatExpression(contentTypeIds, DataFormats.entry)\n    );\n  }\n\n  if (webpageTemplates && webpageTemplates.length > 0) {\n    expressions.push(\n      ...dataFormatExpression(webpageTemplates, DataFormats.webpage)\n    );\n  }\n\n  if (expressions.length > 1) return [Op.or(...expressions)];\n\n  return expressions;\n};\n\nexport const filterExpressions = filters => {\n  if (!filters) return [];\n  const expressions = [];\n\n  filters.map(param => {\n    expressions.push(...fieldExpression(param.key, param.value, 'contains'));\n  });\n\n  return expressions;\n};\n\nexport const dataFormatExpression = (\n  contentTypeIds,\n  dataFormat = DataFormats.entry\n) => {\n  if (contentTypeIds && contentTypeIds.length > 0) {\n    /**\n     * We have an array of contentTypeIds some may be prefixed with a \"!\"\n     * to indicate this is a \"not\" expression\n     */\n    const withContentTypeIds = contentTypeIds.filter(c => !c.startsWith('!'));\n    const notContentTypeIds = contentTypeIds\n      .filter(c => c.startsWith('!'))\n      .map(id => id.substring(1));\n\n    const andExpr = Op.and();\n\n    const dataFormatExpr = fieldExpression(Fields.sys.dataFormat, dataFormat);\n\n    const withExpr = fieldExpression(\n      Fields.sys.contentTypeId,\n      withContentTypeIds\n    );\n\n    const notExpr = [\n      Op.not(...fieldExpression(Fields.sys.contentTypeId, notContentTypeIds)),\n    ];\n\n    andExpr.add(...dataFormatExpr);\n    if (withContentTypeIds.length > 0) andExpr.add(...withExpr);\n    if (notContentTypeIds.length > 0) andExpr.add(...notExpr);\n\n    return [andExpr];\n  }\n  return [];\n};\n\nexport const defaultExpressions = versionStatus => {\n  return [Op.equalTo(Fields.sys.versionStatus, versionStatus)];\n};\n\nexport const defaultSearchExpressions = versionStatus => {\n  return [\n    ...defaultExpressions(versionStatus),\n    ...includeInSearchExpressions(),\n  ];\n};\nexport const includeInSearchExpressions = () => [\n  Op.or(\n    Op.and(\n      Op.exists(Fields.sys.includeInSearch, true),\n      Op.equalTo(Fields.sys.includeInSearch, true)\n    ),\n    Op.exists(Fields.sys.includeInSearch, false)\n  ),\n];\n\nexport const orderByExpression = orderBy => {\n  let expression = OrderBy;\n  if (orderBy && orderBy.length > 0) {\n    orderBy.map(\n      ob =>\n        (expression = ob.startsWith('-')\n          ? expression.desc(ob.substring(1))\n          : expression.asc(ob))\n    );\n  }\n  return expression;\n};\n\nconst equalToOrIn = (field, arr, operator = 'equalTo') =>\n  arr.length === 0\n    ? []\n    : arr.length === 1\n    ? [Op[operator](field, arr[0])]\n    : [Op.in(field, ...arr)];\n\nexport const customWhereExpressions = where => {\n  if (!where || !Array.isArray(where)) return [];\n\n  // Accept HTTP style objects and map them to\n  // their equivalent JS client \"Op\" expressions\n  return where.map(clause => {\n    let expression;\n    Object.keys(clause).map((key, idx) => {\n      if (idx === 1) {\n        const operator = key;\n        const value = clause[key];\n        expression = Op[operator](clause.field, value, clause.weight);\n      }\n    });\n    return expression;\n  });\n};\n\nexport const termExpressions = (searchTerm, weightedSearchFields) => {\n  if (searchTerm && weightedSearchFields && weightedSearchFields.length > 0) {\n    // Extract any phrases in quotes to array\n    const quotedPhrases = extractQuotedPhrases(searchTerm);\n\n    // Modify the search term to remove any quoted phrases to leave any remaining terms\n    let modifiedSearchTerm = searchTerm;\n    quotedPhrases.forEach(\n      qp =>\n        (modifiedSearchTerm = modifiedSearchTerm\n          .replace(qp, '')\n          .replace('\"\"', '')\n          .trim())\n    );\n\n    // Push to the operators array to include in the query\n    const operators = [];\n\n    // Helper functions to generate Op expressions\n    const containsOp = (f, term) =>\n      fieldExpression(\n        f.fieldId,\n        fixFreeTextForElastic(term),\n        'contains',\n        f.weight\n      );\n    const freeTextOp = (f, term) =>\n      fieldExpression(\n        f.fieldId,\n        fixFreeTextForElastic(term),\n        'freeText',\n        f.weight\n      );\n\n    // For each weighted search field\n    weightedSearchFields.forEach(f => {\n      // Push to field operators\n      const fieldOperators = [];\n\n      // Add operator expressions for modified search term\n      if (modifiedSearchTerm) {\n        if (\n          [Fields.keywords, Fields.sys.filename, Fields.sys.uri].includes(\n            f.fieldId\n          )\n        ) {\n          fieldOperators.push(...containsOp(f, modifiedSearchTerm));\n        } else {\n          if ([Fields.entryTitle].includes(f.fieldId)) {\n            fieldOperators.push(\n              Op.or(\n                ...containsOp(f, modifiedSearchTerm),\n                ...freeTextOp(f, modifiedSearchTerm)\n              )\n            );\n          } else {\n            fieldOperators.push(...freeTextOp(f, modifiedSearchTerm));\n          }\n        }\n      }\n\n      // Add operator expressions for any quoted phrases\n      quotedPhrases.forEach(qp => fieldOperators.push(...containsOp(f, qp)));\n\n      // If we are using multiple operators for a field we will\n      // wrap each field inside an And operator so we will match\n      // all terms/phrases rather than any terms/phrases\n      if (fieldOperators.length > 1) {\n        operators.push(Op.and(...fieldOperators));\n      } else {\n        operators.push(...fieldOperators);\n      }\n    });\n\n    // Wrap operators in an Or operator\n    return [Op.or().addRange(operators)];\n  } else if (searchTerm) {\n    return [Op.contains(Fields.wildcard, searchTerm)];\n  } else {\n    return [];\n  }\n};\n","import { Query } from '~/util/ContensisDeliveryApi';\nimport { fieldExpression, defaultExpressions } from './expressions';\n\nexport const routeEntryByFieldsQuery = (\n  id,\n  language = 'en-GB',\n  fields = [],\n  versionStatus = 'published'\n) => {\n  const query = new Query(\n    ...[\n      ...fieldExpression('sys.id', id),\n      ...fieldExpression('sys.language', language),\n      ...defaultExpressions(versionStatus),\n    ]\n  );\n  query.fields = fields;\n  return query;\n};\n","import * as log from 'loglevel';\nimport { takeEvery, put, select, call, all } from 'redux-saga/effects';\nimport { Map } from 'immutable';\n\nimport {\n  SET_ENTRY,\n  SET_ANCESTORS,\n  SET_NAVIGATION_PATH,\n  SET_ROUTE,\n  SET_SIBLINGS,\n  UPDATE_LOADING_STATE,\n} from './types';\nimport { GET_NODE_TREE } from '~/redux/types/navigation';\nimport {\n  selectCurrentAncestors,\n  selectCurrentNode,\n  selectCurrentProject,\n  selectMappedEntry,\n  selectRouteEntry,\n  selectRouteEntryEntryId,\n  selectRouteEntryLanguage,\n} from './selectors';\nimport { hasNavigationTree } from '~/redux/selectors/navigation';\nimport { selectVersionStatus } from '~/redux/selectors/version';\nimport { ensureNodeTreeSaga } from '~/redux/sagas/navigation';\nimport { handleRequiresLoginSaga } from '~/user/redux/sagas/login';\n\nimport { findContentTypeMapping } from '../util/find-contenttype-mapping';\nimport { routeEntryByFieldsQuery } from '../util/queries';\nimport { cachedSearch, deliveryApi } from '~/util/ContensisDeliveryApi';\n\nexport const routingSagas = [\n  takeEvery(SET_NAVIGATION_PATH, getRouteSaga),\n  takeEvery(SET_ROUTE, setRouteSaga),\n];\n\n/**\n * To navigate / push a specific route via redux middleware\n * @param {path, state} action\n */\nfunction* setRouteSaga(action) {\n  yield put({\n    type: 'CALL_HISTORY_METHOD',\n    payload: {\n      method: 'push',\n      args: [action.path, action.state],\n    },\n  });\n}\n\nfunction* getRouteSaga(action) {\n  let entry = null;\n  try {\n    const {\n      withEvents,\n      routes: { ContentTypeMappings = {} } = {},\n      staticRoute,\n    } = action;\n\n    // Variables we will pass to setRouteEntry\n    let pathNode = null,\n      ancestors = null,\n      siblings = null;\n\n    // These variables are the return values from\n    // calls to withEvents.onRouteLoad and onRouteLoaded\n    let appsays,\n      requireLogin = false;\n\n    if (withEvents && withEvents.onRouteLoad) {\n      appsays = yield withEvents.onRouteLoad(action);\n    }\n    // if appsays customNavigation: true, we will set doNavigation to false\n    // if appsays customNavigation: { ... }, we will set doNavigation to the customNavigation object and check for child elements\n    // if appsays nothing we will set doNavigation to true and continue to do navigation calls\n    const doNavigation =\n      !appsays ||\n      (appsays && appsays.customNavigation === true\n        ? false\n        : (appsays && appsays.customNavigation) || true);\n\n    const entryLinkDepth = (appsays && appsays.entryLinkDepth) || 3;\n    const setContentTypeLimits = !!ContentTypeMappings.find(\n      ct => ct.fields || ct.linkDepth || ct.nodeOptions\n    );\n\n    const state = yield select();\n    const routeEntry = selectRouteEntry(state);\n    const routeNode = selectCurrentNode(state);\n    const currentPath = action.path; //selectCurrentPath(state);\n    const deliveryApiStatus = selectVersionStatus(state);\n    const project = selectCurrentProject(state);\n    const isHome = currentPath === '/';\n    const isPreview = currentPath && currentPath.startsWith('/preview/');\n    const defaultLang = (appsays && appsays.defaultLang) || 'en-GB';\n\n    // debugger;\n    // routeEntry = Map({\n    //   entryTitle: 'fake entry',\n    //   title: 'fakey entry',\n    //   sys: { id: 'abcd', contentTypeId: 'zenbaseHomePage' },\n    // });\n\n    if (\n      !isPreview &&\n      ((appsays && appsays.customRouting) ||\n        (staticRoute && !staticRoute.route.fetchNode) ||\n        (routeEntry && action.statePath === action.path))\n    ) {\n      // To prevent erroneous 404s and wasted network calls, this covers\n      // - appsays customRouting and does SET_ENTRY etc. via the consuming app\n      // - all staticRoutes (where custom 'route.fetchNode' attribute is falsey)\n      // - standard Contensis SiteView Routing where we already have that entry in state\n      if (\n        routeEntry &&\n        (!staticRoute || (staticRoute.route && staticRoute.route.fetchNode))\n      ) {\n        pathNode = routeNode.toJS();\n        pathNode.entry = entry = routeEntry.toJS();\n        //Do nothing, the entry is allready the right one.\n        // yield put({\n        //   type: SET_ENTRY,\n        //   entry,\n        //   node: routeNode,\n        //   isLoading: false,\n        // });\n        yield put({\n          type: UPDATE_LOADING_STATE,\n          isLoading: false,\n        });\n      } else\n        yield call(\n          setRouteEntry,\n          routeEntry && routeEntry.toJS(),\n          yield select(selectCurrentNode),\n          yield select(selectCurrentAncestors)\n        );\n    } else {\n      // Handle homepage\n      if (isHome) {\n        pathNode = yield cachedSearch.getRootNode(\n          {\n            depth: 0,\n            entryFields: '*',\n            entryLinkDepth,\n            language: defaultLang,\n            versionStatus: deliveryApiStatus,\n          },\n          project\n        );\n        ({ entry } = pathNode || {});\n      } else {\n        // Handle preview routes\n        if (isPreview) {\n          let splitPath = currentPath.split('/');\n          let entryGuid = splitPath[2];\n          let language = defaultLang;\n          if (splitPath.length >= 3) {\n            //set lang key if available in the path, else use default lang\n            //assumes preview url on content type is: http://preview.ALIAS.contensis.cloud/preview/{GUID}/{LANG}\n            if (splitPath.length == 4) language = splitPath[3];\n            // According to product dev we cannot use Node API\n            // for previewing entries as it gives a response of []\n            // -- apparently it is not correct to request latest content\n            // with Node API\n\n            let previewEntry = yield deliveryApi\n              .getClient(deliveryApiStatus, project)\n              .entries.get({\n                id: entryGuid,\n                language,\n                linkDepth: entryLinkDepth,\n              });\n            if (previewEntry) {\n              pathNode = { entry: previewEntry };\n              ({ entry } = pathNode || {});\n            }\n          }\n        } else {\n          // Handle all other routes\n          const childrenDepth =\n            doNavigation === true || doNavigation.children === true\n              ? 1\n              : (doNavigation && doNavigation.children) || 0;\n          pathNode = yield cachedSearch.getNode(\n            {\n              depth: childrenDepth,\n              path: currentPath,\n              entryFields: setContentTypeLimits\n                ? ['sys.contentTypeId', 'sys.id']\n                : '*',\n              entryLinkDepth: setContentTypeLimits ? 0 : entryLinkDepth,\n              language: defaultLang,\n              versionStatus: deliveryApiStatus,\n            },\n            project\n          );\n          ({ entry } = pathNode || {});\n\n          if (\n            setContentTypeLimits &&\n            pathNode &&\n            pathNode.entry &&\n            pathNode.entry.sys &&\n            pathNode.entry.sys.id\n          ) {\n            // Get fields[] and linkDepth from ContentTypeMapping to get the entry data\n            // at a specified depth with specified fields\n            const {\n              fields,\n              linkDepth,\n              nodeOptions = {},\n            } = findContentTypeMapping(\n              ContentTypeMappings,\n              pathNode.entry.sys.contentTypeId\n            ) || {};\n            const query = routeEntryByFieldsQuery(\n              pathNode.entry.sys.id,\n              pathNode.entry.sys.language,\n              fields,\n              deliveryApiStatus\n            );\n            const payload = yield cachedSearch.search(\n              query,\n              linkDepth || entryLinkDepth || 0,\n              project\n            );\n            if (payload && payload.items && payload.items.length > 0) {\n              pathNode.entry = entry = payload.items[0];\n            }\n\n            if (childrenDepth > 0 || nodeOptions.children) {\n              const childrenOptions = nodeOptions.children || {};\n              // We need to make a separate call for child nodes if the first node query has been\n              // limited by linkDepth or fields[]\n              const childNodes = yield cachedSearch.getChildren({\n                id: pathNode.id,\n                entryFields: childrenOptions.fields || fields || '*',\n                entryLinkDepth:\n                  childrenOptions.linkDepth || linkDepth || entryLinkDepth || 0,\n                language: defaultLang,\n                versionStatus: deliveryApiStatus,\n              });\n              if (childNodes) {\n                pathNode.children = childNodes;\n              }\n            }\n          }\n        }\n\n        if (pathNode && pathNode.id) {\n          if (doNavigation === true || doNavigation.ancestors) {\n            try {\n              ancestors = yield cachedSearch.getAncestors(\n                {\n                  id: pathNode.id,\n                  language: defaultLang,\n                  versionStatus: deliveryApiStatus,\n                },\n                project\n              );\n            } catch (ex) {\n              log.info('Problem fetching ancestors', ex);\n            }\n          }\n\n          if (doNavigation === true || doNavigation.siblings) {\n            try {\n              siblings = yield cachedSearch.getSiblings(\n                {\n                  id: pathNode.id,\n                  language: defaultLang,\n                  versionStatus: deliveryApiStatus,\n                },\n                project\n              );\n            } catch (ex) {\n              log.info('Problem fetching siblings', ex);\n            }\n          }\n        }\n      }\n    }\n\n    if (withEvents && withEvents.onRouteLoaded) {\n      // Check if the app has provided a requireLogin boolean flag or groups array\n      // in addition to checking if requireLogin is set in the route definition\n      ({ requireLogin } =\n        (yield withEvents.onRouteLoaded({ ...action, entry })) || {});\n    }\n\n    if (requireLogin !== false) {\n      // Do not call the login feature saga if requireLogin is false\n      yield call(handleRequiresLoginSaga, {\n        ...action,\n        entry,\n        requireLogin,\n      });\n    }\n\n    if (\n      pathNode &&\n      pathNode.entry &&\n      pathNode.entry.sys &&\n      pathNode.entry.sys.id\n    ) {\n      entry = pathNode.entry;\n      const { entryMapper } =\n        findContentTypeMapping(ContentTypeMappings, entry.sys.contentTypeId) ||\n        {};\n      yield call(\n        setRouteEntry,\n        entry,\n        pathNode,\n        ancestors,\n        siblings,\n        entryMapper\n      );\n    } else {\n      if (pathNode)\n        yield call(setRouteEntry, null, pathNode, ancestors, siblings);\n      else if (!staticRoute) yield call(do404);\n    }\n    if (!appsays || !appsays.preventScrollTop) {\n      // Scroll into View\n      if (typeof window !== 'undefined') {\n        window.scroll({\n          top: 0,\n        });\n      }\n    }\n\n    if (\n      !hasNavigationTree(state) &&\n      (doNavigation === true || doNavigation.tree)\n    )\n      if (typeof window !== 'undefined') {\n        yield put({\n          type: GET_NODE_TREE,\n          treeDepth:\n            doNavigation === true ||\n            !doNavigation.tree ||\n            doNavigation.tree === true\n              ? 2\n              : doNavigation.tree,\n        });\n      } else {\n        yield call(ensureNodeTreeSaga);\n      }\n  } catch (e) {\n    log.error(...['Error running route saga:', e, e.stack]);\n    yield call(do500, e);\n  }\n}\n\nfunction* setRouteEntry(\n  entry,\n  node,\n  ancestors,\n  siblings,\n  entryMapper,\n  notFound = false\n) {\n  const entrySys = (entry && entry.sys) || {};\n\n  const currentEntryId = yield select(selectRouteEntryEntryId);\n  const currentEntryLang = yield select(selectRouteEntryLanguage);\n  const mappedEntry =\n    currentEntryId === entrySys.id && currentEntryLang === entrySys.language\n      ? ((yield select(selectMappedEntry)) || Map()).toJS()\n      : yield mapRouteEntry(entryMapper, {\n          ...node,\n          entry,\n          ancestors,\n          siblings,\n        });\n\n  yield all([\n    put({\n      type: SET_ENTRY,\n      id: entrySys.id,\n      entry,\n      mappedEntry,\n      node,\n      notFound,\n    }),\n    ancestors &&\n      put({\n        type: SET_ANCESTORS,\n        ancestors,\n      }),\n    siblings &&\n      put({\n        type: SET_SIBLINGS,\n        siblings,\n      }),\n  ]);\n}\n\nfunction* mapRouteEntry(entryMapper, node) {\n  try {\n    if (typeof entryMapper === 'function') {\n      const state = yield select();\n      const mappedEntry = yield call(entryMapper, node, state);\n      return mappedEntry;\n    }\n  } catch (e) {\n    log.error(...['Error running entryMapper:', e, e.stack]);\n  }\n  return;\n}\n\nfunction* do404() {\n  yield call(clientReloadHitServer);\n  yield put({\n    type: SET_ENTRY,\n    id: null,\n    entry: null,\n    notFound: true,\n  });\n}\n\nfunction* clientReloadHitServer() {\n  const stateEntry = yield select(selectRouteEntry);\n\n  // If in client and there is a stateEntry.sys field reload the page,\n  // on the 2nd load stateEntry.sys should be null at this point,\n  // we do not wish to reload again and get stuck in an infinite reloading loop\n  if (\n    typeof window !== 'undefined' &&\n    stateEntry &&\n    stateEntry.get('sys', null)\n  ) {\n    window.location.reload();\n  }\n}\n\nfunction* do500(error) {\n  yield put({\n    type: SET_ENTRY,\n    id: null,\n    entry: null,\n    notFound: true,\n    isError: true,\n    error,\n    statusCode: error && error.status ? error.status : 500,\n  });\n}\n","import { to } from 'await-to-js';\nimport { put, select, takeEvery } from 'redux-saga/effects';\nimport { setRoute } from '~/routing/redux/actions';\nimport { selectCurrentSearch } from '~/routing/redux/selectors';\nimport { queryParams } from '~/util/navigation';\nimport {\n  REGISTER_USER,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_FAILED,\n} from '../types';\n\nexport const registerSagas = [\n  takeEvery(REGISTER_USER, registerSaga),\n  takeEvery(REGISTER_USER_SUCCESS, redirectSaga),\n];\n\nfunction* registerSaga({ user, mappers }) {\n  let requestBody = user;\n  // Allow use of request mapper to take a user object\n  // of any format and return the payload for the api request\n  if (mappers && mappers.request && typeof mappers.request === 'function') {\n    requestBody = yield mappers.request(user);\n  }\n\n  // Make POST call to register API\n  const response = yield fetch('/account/register', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(requestBody),\n  });\n\n  if (response.ok) {\n    let mappedResponse;\n    const [, responseBody] = yield to(response.json());\n    if (responseBody) {\n      // Allow use of response mapper to convert the successful user object\n      // from the api response body into a user object of any format\n      if (\n        mappers &&\n        mappers.response &&\n        typeof mappers.response === 'function'\n      ) {\n        mappedResponse = yield mappers.response(responseBody);\n      }\n      // Update user object with mappedResponse or responseBody\n      yield put({\n        type: REGISTER_USER_SUCCESS,\n        user: mappedResponse || responseBody,\n      });\n    } else {\n      // OK response but unable to parse the response body\n      yield put({\n        type: REGISTER_USER_FAILED,\n        error: {\n          message:\n            'Unable to parse the created user from the register service response',\n        },\n      });\n    }\n  } else {\n    // Not OK responses, these can be due to service availability\n    // or status codes echoed from the responses received from\n    // management api when registering the user\n    const [, errorResponse] = yield to(response.json());\n    const error = (errorResponse && errorResponse.error) || errorResponse || {};\n    // Get something meaningful from the response if there is no message in the body\n    if (!error.message) {\n      error.message = `Registration service: ${response.statusText}`;\n      error.status = response.status;\n    }\n    yield put({\n      type: REGISTER_USER_FAILED,\n      error,\n    });\n  }\n}\n\nfunction* redirectSaga() {\n  // Check if querystring contains a redirect_uri\n  const currentQs = queryParams(yield select(selectCurrentSearch));\n  const redirectUri = currentQs.redirect_uri || currentQs.redirect;\n\n  // We must use redux based navigation to preserve the registration state\n  if (redirectUri) yield put(setRoute(redirectUri));\n}\n","import { loginSagas } from './login';\nimport { registerSagas } from './register';\n\nexport const userSagas = [...loginSagas, ...registerSagas];\n","// index.js\nimport { all } from 'redux-saga/effects';\nimport { navigationSagas } from './navigation';\nimport { routingSagas } from '~/routing/redux/sagas';\nimport { userSagas } from '~/user/redux/sagas';\n\nexport default function (featureSagas = []) {\n  return function* rootSaga() {\n    const subSagas = [...routingSagas, ...navigationSagas, ...userSagas];\n    yield all([...subSagas, ...featureSagas]);\n  };\n}\n","const servers = SERVERS; /* global SERVERS */\nconst alias = servers.alias.toLowerCase();\nconst publicUri = PUBLIC_URI; /* global PUBLIC_URI */\nconst projects = PROJECTS; /* global PROJECTS */\n\n// return a projectId via the request hostname\nconst pickProject = (hostname, query) => {\n  // if localhost we can only infer via a querystring, and take your word for it\n  if (hostname == 'localhost') {\n    return (query && query.p) || projects[0].id;\n  }\n\n  // if hostname is the actual public uri we can return the first project from the list\n  if (hostname == publicUri) {\n    return projects[0].id;\n  }\n\n  let project = 'unknown';\n\n  // // go through all the defined projects\n  // Object.entries(projects).map(([, p]) => {\n  const p = projects[0];\n\n  // check if we're accessing via the project's public uri\n  if (hostname.includes(p.publicUri)) project = p.id;\n\n  // the url structure is different for website (we don't prefix)\n  if (p.id.startsWith('website')) {\n    // check for internal and external hostnames\n    // we check live and preview distinctly so our rule does not clash with\n    // hostnames that use a project prefix\n    if (\n      hostname.includes(`live-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`live.${alias}.contensis.cloud`) ||\n      hostname.includes(`preview-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`preview.${alias}.contensis.cloud`)\n    )\n      project = p.id;\n  } else {\n    // check for internal and external hostnames, prefixed with the projectId\n    if (\n      hostname.includes(`${p.id.toLowerCase()}-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`${p.id.toLowerCase()}.${alias}.contensis.cloud`)\n    )\n      project = p.id;\n  }\n  // });\n  return project === 'unknown' ? p.id : project;\n};\n\nexport default pickProject;\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { RouteLoader } from '../routing';\n\nconst AppRoot = props => {\n  return <RouteLoader {...props} />;\n};\n\nexport default hot(module)(AppRoot);\n"],"names":["selectedHistory","window","createBrowserHistory","createMemoryHistory","history","options","browserHistory","storeSurrogateKeys","response","keys","headers","get","map","reduxStore","dispatch","setSurrogateKeys","getClientConfig","project","config","DELIVERY_API_CONFIG","responseHandler","projectId","defaultHeaders","PROXY_DELIVERY_API","rootUrl","DeliveryApi","getClientSideVersionStatus","currentHostname","location","hostname","getVersionStatusFromHostname","indexOf","endsWith","search","query","linkDepth","env","client","Client","create","entries","getClient","deliveryApiStatus","baseConfig","versionStatus","getEntry","id","deliveryApi","CacheNode","constructor","key","value","next","prev","LruCache","limit","head","tail","size","node","remove","setHead","set","CachedSearch","cache","taxonomyLookup","request","JSON","stringify","toString","clientConfig","getContentType","contentTypes","getTaxonomyNode","taxonomy","resolveChildren","then","extendTaxonomyNode","getRootNode","nodes","getRoot","getNode","path","getAncestors","getChildren","getSiblings","execute","promise","catch","getTaxonomyId","children","n","parts","split","length","getTaxonomyKey","cachedSearch","navigationSagas","takeEvery","GET_NODE_TREE","ensureNodeTreeSaga","action","state","select","hasNavigationTree","deliveryApiVersionStatus","selectVersionStatus","selectCurrentProject","depth","treeDepth","put","type","SET_NODE_TREE","GET_NODE_TREE_ERROR","ex","error","sys","contentTypeId","dataFormat","filename","includeInSearch","slug","uri","Fields","entryTitle","entryDescription","keywords","wildcard","fieldExpression","field","operator","weight","Array","isArray","equalToOrIn","Op","defaultExpressions","equalTo","arr","in","routeEntryByFieldsQuery","language","fields","Query","routingSagas","SET_NAVIGATION_PATH","getRouteSaga","SET_ROUTE","setRouteSaga","payload","method","args","entry","withEvents","routes","ContentTypeMappings","staticRoute","pathNode","ancestors","siblings","appsays","requireLogin","onRouteLoad","doNavigation","customNavigation","entryLinkDepth","setContentTypeLimits","find","ct","nodeOptions","routeEntry","selectRouteEntry","routeNode","selectCurrentNode","currentPath","isHome","isPreview","startsWith","defaultLang","customRouting","route","fetchNode","statePath","toJS","UPDATE_LOADING_STATE","isLoading","call","setRouteEntry","selectCurrentAncestors","entryFields","splitPath","entryGuid","previewEntry","childrenDepth","findContentTypeMapping","items","childrenOptions","childNodes","log","onRouteLoaded","handleRequiresLoginSaga","entryMapper","do404","preventScrollTop","scroll","top","tree","e","stack","do500","notFound","entrySys","currentEntryId","selectRouteEntryEntryId","currentEntryLang","selectRouteEntryLanguage","mappedEntry","selectMappedEntry","Map","mapRouteEntry","all","SET_ENTRY","SET_ANCESTORS","SET_SIBLINGS","clientReloadHitServer","stateEntry","reload","isError","statusCode","status","registerSagas","REGISTER_USER","registerSaga","REGISTER_USER_SUCCESS","redirectSaga","user","mappers","requestBody","fetch","Accept","body","ok","mappedResponse","responseBody","to","json","REGISTER_USER_FAILED","message","errorResponse","statusText","currentQs","queryParams","selectCurrentSearch","redirectUri","redirect_uri","redirect","setRoute","userSagas","loginSagas","featureSagas","rootSaga","subSagas","servers","SERVERS","alias","toLowerCase","publicUri","PUBLIC_URI","projects","PROJECTS","pickProject","p","includes","AppRoot","props"],"mappings":"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"}