{"version":3,"file":"contensis-react-base.js","sources":["../src/server/util/displayStartupConfiguration.js","../src/server/util/fetchMyIp.js","../src/server/core/localDns.js","../src/server/core/reverseProxies.js","../node_modules/fromentries/index.js","../src/server/util/types.js","../src/server/util/handleResponse.js","../src/server/util/cacheHashing.js","../src/server/core/webApp.js","../src/server/internalServer.js"],"sourcesContent":["const servers = SERVERS; /* global SERVERS */\r\nconst projects = PROJECTS; /* global PROJECTS */\r\n\r\nconst DisplayStartupConfiguration = config => {\r\n  /* eslint-disable no-console */\r\n  console.log();\r\n  console.log(\r\n    `Configured servers:\r\n`,\r\n    JSON.stringify(servers, null, 2)\r\n  );\r\n  console.log();\r\n  console.log(\r\n    `Configured projects:\r\n`,\r\n    JSON.stringify(projects, null, 2)\r\n  );\r\n  console.log();\r\n  console.log(\r\n    'Reverse proxy paths: ',\r\n    JSON.stringify(config.reverseProxyPaths, null, 2)\r\n  );\r\n  console.log();\r\n\r\n  /* eslint-enable no-console */\r\n};\r\n\r\nexport default DisplayStartupConfiguration;\r\n","const fetchMyIp = async (env, configureLocalEndpoint) => {\r\n  /* eslint-disable no-console */\r\n  try {\r\n    const response = await fetch('https://api.ipify.org?format=json', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    const ipJson = await response.json();\r\n    console.log(`Current public ip -> ${JSON.stringify(ipJson)}`);\r\n    if (ipJson.ip.startsWith('185.18.13')) {\r\n      console.log(\r\n        `Using local endpoint for ${env.alias} -> ${env.internalVip}`\r\n      );\r\n      configureLocalEndpoint();\r\n    } else {\r\n      console.log(`Outside Zengenti network, use real DNS.`);\r\n    }\r\n  } catch (error) {\r\n    console.log(\r\n      `Could not work out where I am so defaulting to local DNS, as I am probably running as a container this is what matters most. Not developers at home or tests :( Sorry. error: ${error}`\r\n    );\r\n    configureLocalEndpoint();\r\n  }\r\n\r\n  /* eslint-enable no-console */\r\n};\r\n\r\nexport default fetchMyIp;\r\n","import evilDns from 'evil-dns';\r\nimport fetchMyIp from '../util/fetchMyIp';\r\n\r\nconst servers = SERVERS; /* global SERVERS */\r\nconst apiConfig = DELIVERY_API_CONFIG; /* global DELIVERY_API_CONFIG */\r\n\r\nconst localDns = async () => {\r\n  const disableDnsChanges = false;\r\n\r\n  const configureLocalEndpoint = () => {\r\n    if (!disableDnsChanges) {\r\n      evilDns.add(`*${servers.alias}.cloud.contensis.com`, servers.internalVip);\r\n\r\n      if (apiConfig.internalIp)\r\n        evilDns.add(apiConfig.rootUrl, apiConfig.internalIp);\r\n    }\r\n  };\r\n\r\n  // Break api.ipify to test\r\n  // evilDns.add('api.ipify.org', '8.8.8.8');\r\n  await fetchMyIp(servers, configureLocalEndpoint);\r\n};\r\n\r\nexport default localDns;\r\n","import httpProxy from 'http-proxy';\r\n\r\nconst servers = SERVERS; /* global SERVERS */\r\nexport const apiProxy = httpProxy.createProxyServer();\r\n\r\nconst reverseProxies = (app, reverseProxyPaths) => {\r\n  deliveryApiProxy(apiProxy, app);\r\n\r\n  app.all(reverseProxyPaths, (req, res) => {\r\n    const target =\r\n      req.hostname.indexOf('preview-') ||\r\n      req.hostname.indexOf('preview.') ||\r\n      req.hostname === 'localhost'\r\n        ? servers.previewIis || servers.iis\r\n        : servers.iis;\r\n\r\n    apiProxy.web(req, res, { target, changeOrigin: true });\r\n    apiProxy.on('error', e => {\r\n      /* eslint-disable no-console */\r\n      console.log(\r\n        `Proxy Request for ${req.path} HostName:${req.hostname} failed with ${e}`\r\n      );\r\n      /* eslint-enable no-console */\r\n    });\r\n  });\r\n};\r\n\r\nconst deliveryApiProxy = (apiProxy, app) => {\r\n  // This is just here to stop cors requests on localhost. In Production this is mapped using varnish.\r\n  app.all(['/api/delivery/*', '/api/image/*'], (req, res) => {\r\n    /* eslint-disable no-console */\r\n    const target = servers.cms;\r\n    console.log(`Proxying api request to ${servers.alias}`);\r\n    apiProxy.web(req, res, {\r\n      target,\r\n      changeOrigin: true,\r\n    });\r\n    apiProxy.on('error', e => {\r\n      /* eslint-disable no-console */\r\n      console.log(\r\n        `Proxy request for ${req.path} HostName:${req.hostname} failed with ${e}`\r\n      );\r\n      /* eslint-enable no-console */\r\n    });\r\n  });\r\n};\r\n\r\nexport default reverseProxies;\r\n","/*! fromentries. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = function fromEntries (iterable) {\n  return [...iterable].reduce((obj, [key, val]) => {\n    obj[key] = val\n    return obj\n  }, {})\n}\n","export const ResponseMethod = {\r\n  send: 'send',\r\n  json: 'json',\r\n  end: 'end',\r\n};\r\n","/* eslint-disable no-console */\r\nimport { ResponseMethod } from './types';\r\n\r\n/**\r\n * Web Application Response handler, sends a prepared express js response\r\n * with the supplied content sending in the specified manner\r\n * @param {response} request express js request object\r\n * @param {response} response express js response object\r\n * @param {string | object} content the content to send in the response body\r\n * @param {function} send the response function to call e.g res.send() res.json() res.end()\r\n */\r\nconst handleResponse = (\r\n  request,\r\n  response,\r\n  content,\r\n  send = ResponseMethod.send\r\n) => {\r\n  // console.log('---', response.statusCode, '---');\r\n  response[send](content);\r\n};\r\n\r\nexport default handleResponse;\r\n","export const hashKeys = keys => {\r\n  const XXHash = require('xxhashjs');\r\n  const returnKeys = [];\r\n  keys.forEach(cacheKey => {\r\n    const inputBuffer = Buffer.from(cacheKey.toLowerCase(), 'utf-8');\r\n\r\n    const hashed = XXHash.h32(inputBuffer, 0x0).toString(16);\r\n    const reversedhex = hashed\r\n      .match(/[a-fA-F0-9]{2}/g)\r\n      .reverse()\r\n      .join('');\r\n\r\n    const outputBuffer = Buffer.from(reversedhex, 'hex');\r\n\r\n    returnKeys.push(outputBuffer.toString('base64').substring(0, 6));\r\n  });\r\n  return returnKeys;\r\n};\r\n","import fs from 'fs';\r\nimport React from 'react';\r\nimport { StaticRouter } from 'react-router-dom';\r\nimport { Provider as ReduxProvider } from 'react-redux';\r\nimport Loadable from 'react-loadable';\r\nimport { renderToString } from 'react-dom/server';\r\nimport { getBundles } from 'react-loadable/webpack';\r\nimport { ServerStyleSheet } from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport serialize from 'serialize-javascript';\r\nimport minifyCssString from 'minify-css-string';\r\nimport { fromJS } from 'immutable';\r\nimport fromEntries from 'fromentries';\r\n\r\nimport { history } from '~/core/redux/history';\r\n\r\nimport handleResponse from '../util/handleResponse';\r\nimport { hashKeys } from '../util/cacheHashing';\r\n\r\nimport pickProject from '~/core/util/pickProject';\r\nimport { GetDeliveryApiStatusFromHostname } from '~/core/util/ContensisDeliveryApi';\r\n\r\nimport { setCurrentProject } from '~/core/redux/actions/routing';\r\nimport { setVersion, setVersionStatus } from '~/core/redux/actions/version';\r\n\r\nimport {\r\n  selectCurrentProject,\r\n  selectCurrentTreeID,\r\n  selectEntryDepends,\r\n  selectNodeDepends,\r\n  selectRouteEntry,\r\n} from '~/core/redux/selectors/routing';\r\n\r\nimport createStore from '~/core/redux/store';\r\nimport rootSaga from '~/core/redux/sagas/index.js';\r\nimport { matchRoutes } from 'react-router-config';\r\nimport mapJson from 'jsonpath-mapper';\r\n\r\nconst addStandardHeaders = (state, response, packagejson, groups) => {\r\n  if (state) {\r\n    /* eslint-disable no-console */\r\n    try {\r\n      console.log('About to add header');\r\n      let entryDepends = selectEntryDepends(state);\r\n      entryDepends = Array.from(entryDepends || {});\r\n      console.log(`entryDepends count: ${entryDepends.length}`);\r\n\r\n      let nodeDepends = selectNodeDepends(state).toJS();\r\n      let currentTreeId = selectCurrentTreeID(state);\r\n      let nodeDependsKeys = nodeDepends.map(nodeKey => {\r\n        return `${currentTreeId}_${nodeKey}`;\r\n      });\r\n      const allDepends = [...entryDepends, ...nodeDependsKeys];\r\n      const allDependsHashed = hashKeys(allDepends);\r\n\r\n      const surrogateKeyHeader =\r\n        packagejson.name == 'os-main'\r\n          ? ` ${packagejson.name}-app ${allDependsHashed.join(\r\n              ' '\r\n            )} ${allDepends.join(' ')}`\r\n          : ` ${packagejson.name}-app ${allDependsHashed.join(' ')}`;\r\n\r\n      response.header('surrogate-key', surrogateKeyHeader);\r\n\r\n      console.log(`depends hashed: ${allDependsHashed.join(' ')}`);\r\n      console.log(`depends hashed: ${allDepends.join(' ')}`);\r\n\r\n      addVarnishAuthenticationHeaders(state, response, groups);\r\n\r\n      response.setHeader('Surrogate-Control', 'max-age=3600');\r\n    } catch (e) {\r\n      console.log('Error Adding headers', e.message);\r\n      // console.log(e);\r\n    }\r\n    /* eslint-enable no-console */\r\n  }\r\n};\r\n\r\nconst addVarnishAuthenticationHeaders = (state, response, groups = {}) => {\r\n  if (state) {\r\n    try {\r\n      const stateEntry = selectRouteEntry(state);\r\n      const project = selectCurrentProject(state);\r\n      const { globalGroups, allowedGroups } = groups;\r\n      // console.log(globalGroups, allowedGroups);\r\n      let allGroups = Array.from((globalGroups && globalGroups[project]) || {});\r\n      if (\r\n        stateEntry &&\r\n        stateEntry.getIn(['authentication', 'isLoginRequired']) &&\r\n        allowedGroups &&\r\n        allowedGroups[project]\r\n      ) {\r\n        allGroups = [...allGroups, ...allowedGroups[project]];\r\n      }\r\n      response.header('x-contensis-viewer-groups', allGroups.join('|'));\r\n    } catch (e) {\r\n      // eslint-disable-next-line no-console\r\n      console.log('Error adding authentication header', e);\r\n    }\r\n  }\r\n};\r\n\r\nconst readFileSync = path => fs.readFileSync(path, 'utf8');\r\n\r\nconst loadBundleData = ({ stats, templates }, build) => {\r\n  const bundle = {};\r\n  try {\r\n    bundle.stats = JSON.parse(\r\n      readFileSync(stats.replace('/target', build ? `/${build}` : ''))\r\n    );\r\n  } catch (ex) {\r\n    //console.log(ex);\r\n    bundle.stats = null;\r\n  }\r\n  try {\r\n    bundle.templates = {\r\n      templateHTML: readFileSync(\r\n        templates.html.replace('/target', build ? `/${build}` : '')\r\n      ),\r\n      templateHTMLStatic: readFileSync(\r\n        templates.static.replace('/target', build ? `/${build}` : '')\r\n      ),\r\n      templateHTMLFragment: readFileSync(\r\n        templates.fragment.replace('/target', build ? `/${build}` : '')\r\n      ),\r\n    };\r\n  } catch (ex) {\r\n    //console.log(ex);\r\n    bundle.templates = null;\r\n  }\r\n  return bundle;\r\n};\r\n\r\nconst webApp = (app, ReactApp, config) => {\r\n  const {\r\n    routes,\r\n    withReducers,\r\n    withSagas,\r\n    withEvents,\r\n    packagejson,\r\n    staticFolderPath = 'static',\r\n    startupScriptFilename,\r\n    differentialBundles,\r\n    allowedGroups,\r\n    globalGroups,\r\n    disableSsrRedux,\r\n    handleResponses,\r\n  } = config;\r\n\r\n  const bundleData = {\r\n    default: loadBundleData(config),\r\n    legacy: loadBundleData(config, 'legacy'),\r\n    modern: loadBundleData(config, 'modern'),\r\n  };\r\n  if (!bundleData.default || bundleData.default === {})\r\n    bundleData.default = bundleData.legacy || bundleData.modern;\r\n\r\n  const versionInfo = JSON.parse(\r\n    fs.readFileSync(`dist/${staticFolderPath}/version.json`, 'utf8')\r\n  );\r\n\r\n  const responseHandler =\r\n    typeof handleResponses === 'function' ? handleResponses : handleResponse;\r\n\r\n  app.get('/*', (request, response, next) => {\r\n    if (request.originalUrl.startsWith(`/${staticFolderPath}/`)) return next();\r\n\r\n    // eslint-disable-next-line no-console\r\n    console.log(\r\n      `Request for ${request.path} hostname: ${request.hostname} versionStatus: ${versionStatusFromHostname}`\r\n    );\r\n    const { url } = request;\r\n\r\n    const matchedStaticRoute = () =>\r\n      matchRoutes(routes.StaticRoutes, request.path);\r\n    const isStaticRoute = () => matchedStaticRoute().length > 0;\r\n    const staticRoute = isStaticRoute() && matchedStaticRoute()[0];\r\n\r\n    // Allow certain routes to avoid SSR\r\n    const onlyDynamic = staticRoute && staticRoute.route.ssr === false;\r\n\r\n    const normaliseQs = q => (q && q.toLowerCase() === 'true' ? true : false);\r\n\r\n    // Determine functional params from QueryString and set access methods\r\n    const accessMethod = mapJson(request.query, {\r\n      DYNAMIC: ({ dynamic }) => normaliseQs(dynamic) || onlyDynamic,\r\n      REDUX: ({ redux }) => normaliseQs(redux),\r\n      FRAGMENT: ({ fragment }) => normaliseQs(fragment),\r\n      STATIC: ({ static: value }) => normaliseQs(value),\r\n    });\r\n\r\n    const context = {};\r\n    let status = 200;\r\n\r\n    // Create a store (with a memory history) from our current url\r\n    const store = createStore(\r\n      withReducers,\r\n      fromJS({}),\r\n      history({\r\n        initialEntries: [url],\r\n      })\r\n    );\r\n\r\n    // dispatch any global and non-saga related actions before calling our JSX\r\n    const versionStatusFromHostname = GetDeliveryApiStatusFromHostname(\r\n      request.hostname\r\n    );\r\n\r\n    store.dispatch(\r\n      setVersionStatus(request.query.versionStatus || versionStatusFromHostname)\r\n    );\r\n    store.dispatch(setVersion(versionInfo.commitRef, versionInfo.buildNo));\r\n\r\n    const project = pickProject(request.hostname, request.query);\r\n\r\n    const groups = allowedGroups && allowedGroups[project];\r\n    store.dispatch(setCurrentProject(project, groups));\r\n\r\n    const modules = [];\r\n\r\n    const jsx = (\r\n      <Loadable.Capture report={moduleName => modules.push(moduleName)}>\r\n        <ReduxProvider store={store}>\r\n          <StaticRouter context={context} location={url}>\r\n            <ReactApp routes={routes} withEvents={withEvents} />\r\n          </StaticRouter>\r\n        </ReduxProvider>\r\n      </Loadable.Capture>\r\n    );\r\n\r\n    const buildBundleTags = bundles => {\r\n      // Take the bundles returned from Loadable.Capture\r\n      const bundleTags = bundles\r\n        .map(bundle => {\r\n          if (bundle.publicPath.includes('/modern/'))\r\n            return differentialBundles\r\n              ? `<script type=\"module\" src=\"${bundle.publicPath}\"></script>`\r\n              : null;\r\n          return `<script nomodule src=\"${bundle.publicPath}\"></script>`;\r\n        })\r\n        .filter(f => f);\r\n\r\n      // Add the static startup script to the bundleTags\r\n      startupScriptFilename &&\r\n        bundleTags.push(\r\n          `<script src=\"/${staticFolderPath}/${startupScriptFilename}\"></script>`\r\n        );\r\n\r\n      return bundleTags;\r\n    };\r\n\r\n    const templates =\r\n      bundleData.default.templates || bundleData.legacy.templates;\r\n\r\n    const stats =\r\n      bundleData.modern.stats && bundleData.legacy.stats\r\n        ? fromEntries(\r\n            Object.entries(bundleData.modern.stats).map(([lib, paths]) => [\r\n              lib,\r\n              bundleData.legacy.stats[lib]\r\n                ? [...paths, ...bundleData.legacy.stats[lib]]\r\n                : paths,\r\n            ])\r\n          )\r\n        : bundleData.default.stats;\r\n\r\n    const {\r\n      templateHTML,\r\n      templateHTMLFragment,\r\n      templateHTMLStatic,\r\n    } = templates;\r\n\r\n    // Serve a blank HTML page with client scripts to load the app in the browser\r\n    if (accessMethod.DYNAMIC) {\r\n      // Dynamic doesn't need sagas\r\n      renderToString(jsx);\r\n\r\n      // Dynamic page render has only the necessary bundles to start up the app\r\n      // and does not include any react-loadable code-split bundles\r\n      const loadableBundles = getBundles(stats, modules);\r\n      const bundleTags = buildBundleTags(loadableBundles).join('');\r\n\r\n      const isDynamicHint = `<script>window.isDynamic = true;</script>`;\r\n\r\n      const responseHtmlDynamic = templateHTML\r\n        .replace('{{TITLE}}', '')\r\n        .replace('{{SEO_CRITICAL_METADATA}}', '')\r\n        .replace('{{CRITICAL_CSS}}', '')\r\n        .replace('{{APP}}', '')\r\n        .replace('{{LOADABLE_CHUNKS}}', bundleTags)\r\n        .replace('{{REDUX_DATA}}', isDynamicHint);\r\n      response.setHeader('Surrogate-Control', 'max-age=3600');\r\n      response.status(status); //.send(responseHtmlDynamic);\r\n      responseHandler(request, response, responseHtmlDynamic);\r\n    }\r\n\r\n    // Render the JSX server side and send response as per access method options\r\n    if (!accessMethod.DYNAMIC) {\r\n      store\r\n        .runSaga(rootSaga(withSagas))\r\n        .toPromise()\r\n        .then(() => {\r\n          const sheet = new ServerStyleSheet();\r\n\r\n          const html = renderToString(sheet.collectStyles(jsx));\r\n\r\n          const helmet = Helmet.renderStatic();\r\n          Helmet.rewind();\r\n          const htmlAttributes = helmet.htmlAttributes.toString();\r\n          let title = helmet.title.toString();\r\n          const metadata = helmet.meta.toString();\r\n\r\n          if (context.status === 404) {\r\n            status = 404;\r\n            title = '<title>404 page not found</title>';\r\n          }\r\n\r\n          if (context.url) {\r\n            return response.redirect(302, context.url);\r\n          }\r\n\r\n          const reduxState = store.getState();\r\n\r\n          const styleTags = sheet.getStyleTags();\r\n\r\n          // After running rootSaga there should be an additional react-loadable\r\n          // code-split bundle for a page component as well as core app bundles\r\n          const loadableBundles = getBundles(stats, modules);\r\n          const bundleTags = buildBundleTags(loadableBundles).join('');\r\n\r\n          let serialisedReduxData = '';\r\n          if (context.status !== 404) {\r\n            // For a request that returns a redux state object as a response\r\n            if (accessMethod.REDUX) {\r\n              serialisedReduxData = serialize(reduxState);\r\n              addStandardHeaders(reduxState, response, packagejson, {\r\n                allowedGroups,\r\n                globalGroups,\r\n              });\r\n              response.status(status); //.json(serialisedReduxData);\r\n              responseHandler(request, response, serialisedReduxData, 'json');\r\n              return true;\r\n            }\r\n            if (!disableSsrRedux) {\r\n              serialisedReduxData = serialize(reduxState);\r\n              serialisedReduxData = `<script>window.REDUX_DATA = ${serialisedReduxData}</script>`;\r\n            }\r\n          }\r\n          if (context.status === 404) {\r\n            accessMethod.STATIC = true;\r\n          }\r\n\r\n          // Responses\r\n          let responseHTML = '';\r\n\r\n          // Static page served as a fragment\r\n          if (accessMethod.FRAGMENT && accessMethod.STATIC) {\r\n            addStandardHeaders(reduxState, response, packagejson, {\r\n              allowedGroups,\r\n              globalGroups,\r\n            });\r\n            responseHTML = minifyCssString(styleTags) + html;\r\n          }\r\n\r\n          // Page fragment served with client scripts and redux data that hydrate the app client side\r\n          if (accessMethod.FRAGMENT && !accessMethod.STATIC) {\r\n            responseHTML = templateHTMLFragment\r\n              .replace('{{TITLE}}', title)\r\n              .replace('{{SEO_CRITICAL_METADATA}}', metadata)\r\n              .replace('{{CRITICAL_CSS}}', minifyCssString(styleTags))\r\n              .replace('{{APP}}', html)\r\n              .replace('{{LOADABLE_CHUNKS}}', bundleTags)\r\n              .replace('{{REDUX_DATA}}', serialisedReduxData);\r\n          }\r\n\r\n          // Full HTML page served statically\r\n          if (!accessMethod.FRAGMENT && accessMethod.STATIC) {\r\n            responseHTML = templateHTMLStatic\r\n              .replace('{{TITLE}}', title)\r\n              .replace('{{SEO_CRITICAL_METADATA}}', metadata)\r\n              .replace('{{CRITICAL_CSS}}', minifyCssString(styleTags))\r\n              .replace('{{APP}}', html)\r\n              .replace('{{LOADABLE_CHUNKS}}', '');\r\n          }\r\n\r\n          // Full HTML page served with client scripts and redux data that hydrate the app client side\r\n          if (!accessMethod.FRAGMENT && !accessMethod.STATIC) {\r\n            responseHTML = templateHTML\r\n              .replace('{{TITLE}}', title)\r\n              .replace('{{SEO_CRITICAL_METADATA}}', metadata)\r\n              .replace('{{CRITICAL_CSS}}', styleTags)\r\n              .replace('{{APP}}', html)\r\n              .replace('{{LOADABLE_CHUNKS}}', bundleTags)\r\n              .replace('{{REDUX_DATA}}', serialisedReduxData);\r\n          }\r\n          addStandardHeaders(reduxState, response, packagejson, {\r\n            allowedGroups,\r\n            globalGroups,\r\n          });\r\n          try {\r\n            // If react-helmet htmlAttributes are being used, replace the html tag with those attributes sepcified e.g (lang, dir etc.)\r\n            if (htmlAttributes) {\r\n              responseHTML = responseHTML.replace(\r\n                /<html?.+?>/,\r\n                `<html ${htmlAttributes}>`\r\n              );\r\n            }\r\n            response.status(status); //.send(responseHTML);\r\n            responseHandler(request, response, responseHTML);\r\n          } catch (err) {\r\n            // eslint-disable-next-line no-console\r\n            console.log(err.message);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          // Handle any error that occurred in any of the previous\r\n          // promises in the chain.\r\n          // eslint-disable-next-line no-console\r\n          console.log(err);\r\n          response.status(500);\r\n          responseHandler(\r\n            request,\r\n            response,\r\n            `Error occurred: <br />${err.stack} <br />${JSON.stringify(err)}`\r\n          );\r\n          // .send(\r\n          //   `Error occurred: <br />${err.stack} <br />${JSON.stringify(err)}`\r\n          // );\r\n        });\r\n      renderToString(jsx);\r\n\r\n      store.close();\r\n    }\r\n  });\r\n};\r\n\r\nexport default webApp;\r\n","import 'isomorphic-fetch';\r\nimport express from 'express';\r\nimport Loadable from 'react-loadable';\r\n\r\nimport DisplayStartupConfiguration from './util/displayStartupConfiguration';\r\nimport ConfigureLocalDNS from './core/localDns';\r\nimport ConfigureReverseProxies, { apiProxy } from './core/reverseProxies';\r\n// import ServerFeatures from './features/configure';\r\nimport ConfigureWebApp from './core/webApp';\r\n\r\nconst app = express();\r\n\r\nconst start = (ReactApp, config, ServerFeatures) => {\r\n  const { staticFolderPath = 'static' } = config;\r\n\r\n  app.disable('x-powered-by');\r\n\r\n  // Output some information about the used build/startup configuration\r\n  DisplayStartupConfiguration(config);\r\n\r\n  // Set-up local proxy for images from cms, to save doing rewrites and extra code\r\n  ServerFeatures(app);\r\n  ConfigureReverseProxies(app, config.reverseProxyPaths);\r\n  ConfigureWebApp(app, ReactApp, config);\r\n\r\n  app.use(\r\n    `/${staticFolderPath}`,\r\n    express.static(`dist/${staticFolderPath}`, { maxage: '31557600h' })\r\n  );\r\n\r\n  app.on('ready', async () => {\r\n    // Configure DNS to make life easier\r\n    await ConfigureLocalDNS();\r\n\r\n    Loadable.preloadAll().then(() => {\r\n      var server = app.listen(3001, () => {\r\n        console.info(`HTTP server is listening @ port 3001`);\r\n        setTimeout(function() {\r\n          app.emit('app_started');\r\n        }, 500);\r\n      });\r\n      app.on('stop', () => {\r\n        server.close(function() {\r\n          console.info('GoodBye :(');\r\n        });\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nexport default { app, apiProxy, start };\r\n"],"names":["servers","SERVERS","projects","PROJECTS","DisplayStartupConfiguration","config","console","log","JSON","stringify","reverseProxyPaths","fetchMyIp","env","configureLocalEndpoint","response","fetch","method","headers","ipJson","json","ip","startsWith","alias","internalVip","error","apiConfig","DELIVERY_API_CONFIG","localDns","evilDns","add","internalIp","rootUrl","apiProxy","httpProxy","createProxyServer","reverseProxies","app","deliveryApiProxy","all","req","res","target","hostname","indexOf","previewIis","iis","web","changeOrigin","on","e","path","cms","ResponseMethod","send","end","handleResponse","request","content","hashKeys","keys","XXHash","require","returnKeys","forEach","cacheKey","inputBuffer","Buffer","from","toLowerCase","hashed","h32","toString","reversedhex","match","reverse","join","outputBuffer","push","substring","addStandardHeaders","state","packagejson","groups","entryDepends","selectEntryDepends","Array","length","nodeDepends","selectNodeDepends","toJS","currentTreeId","selectCurrentTreeID","nodeDependsKeys","map","nodeKey","allDepends","allDependsHashed","surrogateKeyHeader","name","header","addVarnishAuthenticationHeaders","setHeader","message","stateEntry","selectRouteEntry","project","selectCurrentProject","globalGroups","allowedGroups","allGroups","getIn","readFileSync","fs","loadBundleData","stats","templates","build","bundle","parse","replace","ex","templateHTML","html","templateHTMLStatic","static","templateHTMLFragment","fragment","webApp","ReactApp","routes","withReducers","withSagas","withEvents","staticFolderPath","startupScriptFilename","differentialBundles","disableSsrRedux","handleResponses","bundleData","default","legacy","modern","versionInfo","responseHandler","get","next","originalUrl","versionStatusFromHostname","url","matchedStaticRoute","matchRoutes","StaticRoutes","isStaticRoute","staticRoute","onlyDynamic","route","ssr","normaliseQs","q","accessMethod","mapJson","query","DYNAMIC","dynamic","REDUX","redux","FRAGMENT","STATIC","value","context","status","store","createStore","fromJS","history","initialEntries","GetDeliveryApiStatusFromHostname","dispatch","setVersionStatus","versionStatus","setVersion","commitRef","buildNo","pickProject","setCurrentProject","modules","jsx","moduleName","ReduxProvider","buildBundleTags","bundles","bundleTags","publicPath","includes","filter","f","fromEntries","Object","entries","lib","paths","renderToString","loadableBundles","getBundles","isDynamicHint","responseHtmlDynamic","runSaga","rootSaga","toPromise","then","sheet","ServerStyleSheet","collectStyles","helmet","Helmet","renderStatic","rewind","htmlAttributes","title","metadata","meta","redirect","reduxState","getState","styleTags","getStyleTags","serialisedReduxData","serialize","responseHTML","minifyCssString","err","catch","stack","close","express","start","ServerFeatures","disable","ConfigureReverseProxies","ConfigureWebApp","use","maxage","ConfigureLocalDNS","Loadable","preloadAll","server","listen","info","setTimeout","emit"],"mappings":"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"}