{"version":3,"file":"App-5f6ef07c.js","sources":["../src/app/core/redux/history.js","../src/app/core/util/pickProject.js","../src/app/core/redux/reducers/navigation.js","../src/app/core/redux/reducers/routing.js","../src/app/core/redux/reducers/version.js","../src/app/core/redux/routerMiddleware.js","../src/app/core/redux/store.js","../src/app/core/util/ContensisDeliveryApi.js","../src/app/core/redux/sagas/navigation.js","../src/app/core/schema.js","../src/app/core/search/expressions.js","../src/app/core/redux/sagas/queries.js","../src/app/core/redux/sagas/routing.js","../src/app/features/login/redux/sagas/register.js","../src/app/features/login/redux/sagas/index.js","../src/app/core/redux/sagas/index.js","../src/app/App.js"],"sourcesContent":["import { createBrowserHistory, createMemoryHistory } from 'history';\r\n\r\n// Create a history depending on the environment\r\nconst selectedHistory =\r\n  typeof window !== 'undefined' ? createBrowserHistory : createMemoryHistory;\r\n\r\nexport const history = (options = {}) => selectedHistory(options);\r\nexport const browserHistory = selectedHistory();\r\n","const servers = SERVERS; /* global SERVERS */\r\nconst alias = servers.alias.toLowerCase();\r\nconst publicUri = PUBLIC_URI; /* global PUBLIC_URI */\r\nconst projects = PROJECTS; /* global PROJECTS */\r\n\r\n// return a projectId via the request hostname\r\nconst pickProject = (hostname, query) => {\r\n  // if localhost we can only infer via a querystring, and take your word for it\r\n  if (hostname == 'localhost') {\r\n    return (query && query.p) || projects[0].id;\r\n  }\r\n\r\n  // if hostname is the actual public uri we can return the first project from the list\r\n  if (hostname == publicUri) {\r\n    return projects[0].id;\r\n  }\r\n\r\n  let project = 'unknown';\r\n\r\n  // // go through all the defined projects\r\n  // Object.entries(projects).map(([, p]) => {\r\n  const p = projects[0];\r\n\r\n  // check if we're accessing via the project's public uri\r\n  if (hostname.includes(p.publicUri)) project = p.id;\r\n\r\n  // the url structure is different for website (we don't prefix)\r\n  if (p.id.startsWith('website')) {\r\n    // check for internal and external hostnames\r\n    // we check live and preview distinctly so our rule does not clash with\r\n    // hostnames that use a project prefix\r\n    if (\r\n      hostname.includes(`live-${alias}.cloud.contensis.com`) ||\r\n      hostname.includes(`live.${alias}.contensis.cloud`) ||\r\n      hostname.includes(`preview-${alias}.cloud.contensis.com`) ||\r\n      hostname.includes(`preview.${alias}.contensis.cloud`)\r\n    )\r\n      project = p.id;\r\n  } else {\r\n    // check for internal and external hostnames, prefixed with the projectId\r\n    if (\r\n      hostname.includes(`${p.id.toLowerCase()}-${alias}.cloud.contensis.com`) ||\r\n      hostname.includes(`${p.id.toLowerCase()}.${alias}.contensis.cloud`)\r\n    )\r\n      project = p.id;\r\n  }\r\n  // });\r\n  return project === 'unknown' ? p.id : project;\r\n};\r\n\r\nexport default pickProject;\r\n","import { Map, fromJS, List } from 'immutable';\r\n\r\nimport {\r\n  SET_NODE_TREE,\r\n  GET_NODE_TREE_ERROR,\r\n} from '~/core/redux/types/navigation';\r\n\r\nconst initialState = Map({\r\n  root: null,\r\n  treeDepends: new List([]),\r\n  isError: false,\r\n  isReady: false,\r\n});\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_NODE_TREE: {\r\n      return state.set('root', fromJS(action.nodes)).set('isReady', true);\r\n    }\r\n    case GET_NODE_TREE_ERROR: {\r\n      return state.set('isError', true);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { OrderedMap, fromJS, List, Set } from 'immutable';\r\nimport {\r\n  SET_ENTRY,\r\n  SET_NAVIGATION_PATH,\r\n  SET_ANCESTORS,\r\n  SET_TARGET_PROJECT,\r\n  SET_ROUTE,\r\n  SET_SIBLINGS,\r\n  SET_SURROGATE_KEYS,\r\n} from '~/core/redux/types/routing';\r\n\r\nlet initialState = OrderedMap({\r\n  contentTypeId: null,\r\n  currentPath: '/',\r\n  currentNode: [],\r\n  currentNodeAncestors: List(),\r\n  currentProject: 'unknown',\r\n  entryID: null,\r\n  entry: null,\r\n  currentTreeId: null,\r\n  entryDepends: List(),\r\n  isLoading: false,\r\n  location: null,\r\n  mappedEntry: OrderedMap(),\r\n  nodeDepends: List(),\r\n  notFound: false,\r\n  staticRoute: null,\r\n});\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ANCESTORS: {\r\n      if (action.ancestors) {\r\n        return state.set('currentNodeAncestors', fromJS(action.ancestors));\r\n      }\r\n      return state.set('currentNodeAncestors', fromJS(action.ancestors));\r\n    }\r\n    case SET_ENTRY: {\r\n      const {\r\n        entry,\r\n        mappedEntry,\r\n        node = {},\r\n        isLoading = false,\r\n        notFound = false,\r\n      } = action;\r\n      let nextState;\r\n\r\n      if (!entry) {\r\n        nextState = state\r\n          .set('entryID', null)\r\n          .set('entry', null)\r\n          .set('mappedEntry', OrderedMap())\r\n          .set('isLoading', isLoading)\r\n          .set('notFound', notFound);\r\n      } else {\r\n        nextState = state\r\n          .set('entryID', action.id)\r\n          .set('entry', fromJS(entry))\r\n          .set('isLoading', isLoading)\r\n          .set('notFound', notFound);\r\n\r\n        if (mappedEntry && Object.keys(mappedEntry).length > 0)\r\n          nextState = nextState\r\n            .set('mappedEntry', fromJS(mappedEntry))\r\n            .set('entry', fromJS({ sys: entry.sys }));\r\n      }\r\n\r\n      if (!node) {\r\n        return nextState.set('nodeDepends', null).set('currentNode', null);\r\n      } else {\r\n        // On Set Node, we reset all dependants.\r\n        return nextState\r\n          .set('currentNode', fromJS(node))\r\n          .removeIn(['currentNode', 'entry']); // We have the entry stored elsewhere, so lets not keep it twice.\r\n      }\r\n    }\r\n    case SET_NAVIGATION_PATH: {\r\n      let staticRoute = false;\r\n      if (action.staticRoute) {\r\n        staticRoute = { ...action.staticRoute };\r\n      }\r\n      if (action.path) {\r\n        // Don't run a path update on initial load as we allready should have it in redux\r\n        const entryUri = state.getIn(['entry', 'sys', 'uri']);\r\n        if (entryUri != action.path) {\r\n          return state\r\n            .set('currentPath', fromJS(action.path))\r\n            .set('location', fromJS(action.location))\r\n            .set(\r\n              'staticRoute',\r\n              fromJS({\r\n                ...staticRoute,\r\n                route: { ...staticRoute.route, component: null },\r\n              })\r\n            )\r\n            .set('isLoading', typeof window !== 'undefined');\r\n        } else {\r\n          return state.set('location', fromJS(action.location)).set(\r\n            'staticRoute',\r\n            fromJS({\r\n              ...staticRoute,\r\n              route: { ...staticRoute.route, component: null },\r\n            })\r\n          );\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n    case SET_ROUTE: {\r\n      return state.set('nextPath', action.path);\r\n    }\r\n    case SET_SIBLINGS: {\r\n      // Can be null in some cases like the homepage.\r\n      let currentNodeSiblingParent = null;\r\n      let siblingIDs = [];\r\n      if (action.siblings && action.siblings.length > 0) {\r\n        currentNodeSiblingParent = action.siblings[0].parentId;\r\n        siblingIDs = action.siblings.map(node => {\r\n          return node.id;\r\n        });\r\n      }\r\n      let currentNodeDepends = state.get('nodeDepends');\r\n      const allNodeDepends = Set.union([Set(siblingIDs), currentNodeDepends]);\r\n      return state\r\n        .set('nodeDepends', allNodeDepends)\r\n        .set('currentNodeSiblings', fromJS(action.siblings))\r\n        .set('currentNodeSiblingsParent', currentNodeSiblingParent);\r\n    }\r\n    case SET_SURROGATE_KEYS: {\r\n      return state.set('surrogateKeys', action.keys);\r\n    }\r\n    case SET_TARGET_PROJECT: {\r\n      return state\r\n        .set('currentProject', action.project)\r\n        .set('currentTreeId', '') //getTreeID(action.project))\r\n        .set('allowedGroups', fromJS(action.allowedGroups));\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Map } from 'immutable';\r\nimport { SET_VERSION, SET_VERSION_STATUS } from '~/core/redux/types/version';\r\n\r\nlet initialState = Map({\r\n  commitRef: null,\r\n  buildNo: null,\r\n  contensisVersionStatus: 'published',\r\n});\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_VERSION_STATUS: {\r\n      return state.set('contensisVersionStatus', action.status);\r\n    }\r\n    case SET_VERSION: {\r\n      return state\r\n        .set('commitRef', action.commitRef)\r\n        .set('buildNo', action.buildNo);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { CALL_HISTORY_METHOD } from '~/core/redux/types/routing';\r\n\r\n/**\r\n * This middleware captures CALL_HISTORY_METHOD actions to redirect to the\r\n * provided history object. This will prevent these actions from reaching your\r\n * reducer or any middleware that comes after this one.\r\n */\r\n/* eslint-disable no-unused-vars */\r\nconst routerMiddleware = history => store => next => action => {\r\n  if (action.type !== CALL_HISTORY_METHOD) {\r\n    return next(action);\r\n  }\r\n\r\n  const {\r\n    payload: { method, args },\r\n  } = action;\r\n  history[method](...args);\r\n};\r\n\r\nexport default routerMiddleware;\r\n","import { compose, createStore, applyMiddleware } from 'redux';\r\nimport { combineReducers } from 'redux-immutable';\r\nimport thunk from 'redux-thunk';\r\nimport createSagaMiddleware, { END } from 'redux-saga';\r\n\r\n// Core reducers\r\nimport NavigationReducer from './reducers/navigation';\r\nimport RoutingReducer from './reducers/routing';\r\nimport UserReducer from '~/features/login/redux/reducers';\r\nimport VersionReducer from './reducers/version';\r\nimport routerMiddleware from './routerMiddleware';\r\n\r\nexport let reduxStore = null;\r\n\r\nexport default (featureReducers, initialState, history) => {\r\n  const thunkMiddleware = [thunk];\r\n\r\n  let reduxDevToolsMiddleware = f => f;\r\n\r\n  if (typeof window != 'undefined') {\r\n    reduxDevToolsMiddleware = window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : f => f;\r\n  }\r\n\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middleware = compose(\r\n    applyMiddleware(\r\n      ...thunkMiddleware,\r\n      sagaMiddleware,\r\n      routerMiddleware(history)\r\n    ),\r\n    reduxDevToolsMiddleware\r\n  );\r\n\r\n  let reducers = {\r\n    navigation: NavigationReducer,\r\n    routing: RoutingReducer,\r\n    user: UserReducer,\r\n    version: VersionReducer,\r\n    ...featureReducers,\r\n  };\r\n\r\n  const combinedReducers = combineReducers(reducers);\r\n\r\n  const store = initialState => {\r\n    const store = createStore(combinedReducers, initialState, middleware);\r\n    store.runSaga = sagaMiddleware.run;\r\n    store.close = () => store.dispatch(END);\r\n    return store;\r\n  };\r\n\r\n  reduxStore = store(initialState);\r\n  return reduxStore;\r\n};\r\n","import { Client } from 'contensis-delivery-api';\r\nimport { setSurrogateKeys } from '../redux/actions/routing';\r\nimport { reduxStore } from '../redux/store';\r\n\r\nconst storeSurrogateKeys = response => {\r\n  const keys = response.headers.get\r\n    ? response.headers.get('surrogate-key')\r\n    : response.headers.map['surrogate-key'];\r\n  if (keys) reduxStore.dispatch(setSurrogateKeys(keys));\r\n};\r\n\r\nconst getClientConfig = project => {\r\n  let config = DELIVERY_API_CONFIG; /* global DELIVERY_API_CONFIG */\r\n  config.responseHandler = {};\r\n\r\n  if (project) {\r\n    config.projectId = project;\r\n  }\r\n\r\n  // // we only want the surrogate key header in a server context\r\n  if (typeof window === 'undefined') {\r\n    config.defaultHeaders = {\r\n      'x-require-surrogate-key': true,\r\n    };\r\n    config.responseHandler[200] = storeSurrogateKeys;\r\n  }\r\n\r\n  if (\r\n    typeof window !== 'undefined' &&\r\n    PROXY_DELIVERY_API /* global PROXY_DELIVERY_API */\r\n  ) {\r\n    // ensure a relative url is used to bypass the need for CORS (separate OPTIONS calls)\r\n    config.rootUrl = '';\r\n    config.responseHandler[404] = () => null;\r\n  }\r\n  return config;\r\n};\r\n\r\nexport * from 'contensis-delivery-api';\r\n\r\nclass DeliveryApi {\r\n  getClientSideVersionStatus = () => {\r\n    if (typeof window != 'undefined') {\r\n      const currentHostname = window.location.hostname;\r\n      return this.getVersionStatusFromHostname(currentHostname);\r\n    }\r\n    return null;\r\n  };\r\n  getVersionStatusFromHostname = currentHostname => {\r\n    if (currentHostname.indexOf('localhost') > -1) return 'latest';\r\n\r\n    if (currentHostname.endsWith('contensis.cloud')) {\r\n      if (currentHostname.indexOf('preview.') > -1) {\r\n        return 'latest';\r\n      } else {\r\n        return 'published';\r\n      }\r\n    }\r\n\r\n    if (currentHostname.endsWith('cloud.contensis.com')) {\r\n      if (currentHostname.indexOf('preview-') > -1) {\r\n        return 'latest';\r\n      } else {\r\n        return 'published';\r\n      }\r\n    }\r\n\r\n    return 'published';\r\n  };\r\n  search = (query, linkDepth, project, env) => {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return client.entries.search(\r\n      query,\r\n      typeof linkDepth !== 'undefined' ? linkDepth : 1\r\n    );\r\n  };\r\n  getClient = (deliveryApiStatus = 'published', project, env) => {\r\n    const baseConfig = getClientConfig(project, env);\r\n    baseConfig.versionStatus = deliveryApiStatus;\r\n    return Client.create(baseConfig);\r\n  };\r\n  getEntry = (\r\n    id,\r\n    linkDepth = 0,\r\n    deliveryApiStatus = 'published',\r\n    project,\r\n    env\r\n  ) => {\r\n    const baseConfig = getClientConfig(project, env);\r\n    baseConfig.versionStatus = deliveryApiStatus;\r\n    const client = Client.create(baseConfig);\r\n    // return client.entries.get(id, linkDepth);\r\n    return client.entries.get({ id, linkDepth });\r\n  };\r\n}\r\n\r\nexport const deliveryApi = new DeliveryApi();\r\n\r\nclass CacheNode {\r\n  constructor(key, value) {\r\n    this.key = key;\r\n    this.value = value;\r\n    this.next = null;\r\n    this.prev = null;\r\n  }\r\n}\r\n\r\nclass LruCache {\r\n  constructor(limit = 100) {\r\n    this.map = {};\r\n    this.head = null;\r\n    this.tail = null;\r\n    this.limit = limit || 100;\r\n    this.size = 0;\r\n  }\r\n\r\n  get(key) {\r\n    if (this.map[key]) {\r\n      let value = this.map[key].value;\r\n      let node = new CacheNode(key, value);\r\n      this.remove(key);\r\n      this.setHead(node);\r\n      return value;\r\n    }\r\n  }\r\n\r\n  set(key, value) {\r\n    let node = new CacheNode(key, value);\r\n    if (this.map[key]) {\r\n      this.remove(key);\r\n    } else {\r\n      if (this.size >= this.limit) {\r\n        delete this.map[this.tail.key];\r\n        this.size--;\r\n        this.tail = this.tail.prev;\r\n        this.tail.next = null;\r\n      }\r\n    }\r\n    this.setHead(node);\r\n  }\r\n\r\n  setHead(node) {\r\n    node.next = this.head;\r\n    node.prev = null;\r\n    if (this.head) {\r\n      this.head.prev = node;\r\n    }\r\n    this.head = node;\r\n    if (!this.tail) {\r\n      this.tail = node;\r\n    }\r\n    this.size++;\r\n    this.map[node.key] = node;\r\n  }\r\n\r\n  remove(key) {\r\n    let node = this.map[key];\r\n    if (node.prev) {\r\n      node.prev.next = node.next;\r\n    } else {\r\n      this.head = node.next;\r\n    }\r\n    if (node.next) {\r\n      node.next.prev = node.prev;\r\n    } else {\r\n      this.tail = node.prev;\r\n    }\r\n    delete this.map[key];\r\n    this.size--;\r\n  }\r\n}\r\n\r\nclass CachedSearch {\r\n  cache = new LruCache();\r\n  taxonomyLookup = {};\r\n\r\n  search(query, linkDepth, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      project + JSON.stringify(query) + linkDepth.toString(),\r\n      () => client.entries.search(query, linkDepth)\r\n    );\r\n  }\r\n\r\n  get(id, linkDepth, versionStatus, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    client.clientConfig.versionStatus = versionStatus;\r\n    return this.request(id, () => client.entries.get({ id, linkDepth }));\r\n  }\r\n\r\n  getContentType(id, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`[CONTENT TYPE] ${id} ${project}`, () =>\r\n      client.contentTypes.get(id)\r\n    );\r\n  }\r\n\r\n  getTaxonomyNode(key, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`[TAXONOMY NODE] ${key}`, () =>\r\n      client.taxonomy\r\n        .resolveChildren(key)\r\n        .then(node => this.extendTaxonomyNode(node))\r\n    );\r\n  }\r\n\r\n  getRootNode(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`${project} / ${JSON.stringify(options)}`, () =>\r\n      client.nodes.getRoot(options)\r\n    );\r\n  }\r\n\r\n  getNode(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} ${(options && options.path) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.get(options)\r\n    );\r\n  }\r\n\r\n  getAncestors(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} [A] ${(options && options.id) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.getAncestors(options)\r\n    );\r\n  }\r\n\r\n  getChildren(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} [C] ${(options && options.id) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.getChildren(options)\r\n    );\r\n  }\r\n\r\n  getSiblings(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} [S] ${(options && options.id) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.getSiblings(options)\r\n    );\r\n  }\r\n\r\n  request(key, execute) {\r\n    if (!this.cache.get(key) || typeof window == 'undefined') {\r\n      let promise = execute();\r\n      this.cache.set(key, promise);\r\n      promise.catch(() => {\r\n        this.cache.remove(key);\r\n      });\r\n    }\r\n    return this.cache.get(key);\r\n  }\r\n\r\n  extendTaxonomyNode(node) {\r\n    let id = this.getTaxonomyId(node);\r\n    this.taxonomyLookup[id] = node.key;\r\n    return {\r\n      ...node,\r\n      id,\r\n      children: node.children\r\n        ? node.children.map(n => this.extendTaxonomyNode(n))\r\n        : null,\r\n    };\r\n  }\r\n\r\n  getTaxonomyId(node) {\r\n    if (node.key) {\r\n      let parts = node.key.split('/');\r\n      return parts[parts.length - 1];\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getTaxonomyKey(id) {\r\n    return this.taxonomyLookup[id];\r\n  }\r\n}\r\n\r\nexport const cachedSearch = new CachedSearch();\r\n","import { takeEvery, put, select } from 'redux-saga/effects';\r\n\r\nimport { deliveryApi } from '~/core/util/ContensisDeliveryApi';\r\nimport {\r\n  GET_NODE_TREE,\r\n  SET_NODE_TREE,\r\n  GET_NODE_TREE_ERROR,\r\n} from '~/core/redux/types/navigation';\r\nimport { hasNavigationTree } from '~/core/redux/selectors/navigation';\r\nimport { selectVersionStatus } from '../selectors/version';\r\nimport { selectCurrentProject } from '../selectors/routing';\r\n\r\nexport const navigationSagas = [takeEvery(GET_NODE_TREE, ensureNodeTreeSaga)];\r\n\r\nexport function* ensureNodeTreeSaga(action) {\r\n  const state = yield select();\r\n  try {\r\n    if (!hasNavigationTree(state)) {\r\n      const deliveryApiVersionStatus = yield select(selectVersionStatus);\r\n      const project = yield select(selectCurrentProject);\r\n      const nodes = yield deliveryApi\r\n        .getClient(deliveryApiVersionStatus, project)\r\n        .nodes.getRoot({\r\n          depth: action.treeDepth || 0,\r\n        });\r\n      if (nodes) {\r\n        yield put({ type: SET_NODE_TREE, nodes });\r\n      } else {\r\n        yield put({ type: GET_NODE_TREE_ERROR });\r\n      }\r\n    }\r\n  } catch (ex) {\r\n    yield put({ type: GET_NODE_TREE_ERROR, error: ex.toString() });\r\n  }\r\n}\r\n","export const DataFormats = {\r\n  entry: 'entry',\r\n  webpage: 'webpage',\r\n};\r\n\r\nconst sys = {\r\n  contentTypeId: 'sys.contentTypeId',\r\n  dataFormat: 'sys.dataFormat',\r\n  filename: 'sys.properties.filename',\r\n  id: 'sys.id',\r\n  includeInSearch: 'sys.metadata.includeInSearch',\r\n  slug: 'sys.slug',\r\n  uri: 'sys.uri',\r\n  versionStatus: 'sys.versionStatus',\r\n};\r\n\r\nexport const Fields = {\r\n  entryTitle: 'entryTitle',\r\n  entryDescription: 'entryDescription',\r\n  keywords: 'keywords',\r\n  sys,\r\n  contentTypeId: 'sys.contentTypeId',\r\n  wildcard: '*',\r\n};\r\n\r\nexport const Projects = {\r\n  website: 'website',\r\n};\r\n\r\nexport const VersionStatus = {\r\n  published: 'published',\r\n  latest: 'latest',\r\n};\r\n\r\nexport const ContentTypes = {\r\n  contentPage: 'contentPage',\r\n};\r\n\r\nexport const WebpageFormats = {};\r\n\r\nexport const FilterExpressionTypes = {\r\n  contentType: 'contentType',\r\n  field: 'field',\r\n};\r\n","import { Op, OrderBy } from 'contensis-delivery-api';\r\nimport { Fields, DataFormats } from '~/core/schema';\r\nimport {\r\n  fixFreeTextForElastic,\r\n  extractQuotedPhrases,\r\n} from '~/core/search/util';\r\n\r\nexport const fieldExpression = (\r\n  field,\r\n  value,\r\n  operator = 'equalTo',\r\n  weight = null\r\n) => {\r\n  if (!field || !value) return [];\r\n  if (Array.isArray(value)) return equalToOrIn(field, value, operator);\r\n  else\r\n    return !weight\r\n      ? [Op[operator](field, value)]\r\n      : [Op[operator](field, value).weight(weight)];\r\n};\r\n\r\nexport const contentTypeIdExpression = (contentTypeIds, webpageTemplates) => {\r\n  const expressions = [];\r\n  if (!contentTypeIds && !webpageTemplates) return expressions;\r\n\r\n  if (contentTypeIds && contentTypeIds.length > 0) {\r\n    expressions.push(\r\n      ...dataFormatExpression(contentTypeIds, DataFormats.entry)\r\n    );\r\n  }\r\n\r\n  if (webpageTemplates && webpageTemplates.length > 0) {\r\n    expressions.push(\r\n      ...dataFormatExpression(webpageTemplates, DataFormats.webpage)\r\n    );\r\n  }\r\n\r\n  if (expressions.length > 1) return [Op.or(...expressions)];\r\n\r\n  return expressions;\r\n};\r\n\r\nexport const filterExpressions = filters => {\r\n  if (!filters) return [];\r\n  const expressions = [];\r\n\r\n  filters.map(param => {\r\n    expressions.push(...fieldExpression(param.key, param.value, 'contains'));\r\n  });\r\n\r\n  return expressions;\r\n};\r\n\r\nexport const dataFormatExpression = (\r\n  contentTypeIds,\r\n  dataFormat = DataFormats.entry\r\n) => {\r\n  if (contentTypeIds && contentTypeIds.length > 0) {\r\n    /**\r\n     * We have an array of contentTypeIds some may be prefixed with a \"!\"\r\n     * to indicate this is a \"not\" expression\r\n     */\r\n    const withContentTypeIds = contentTypeIds.filter(c => !c.startsWith('!'));\r\n    const notContentTypeIds = contentTypeIds\r\n      .filter(c => c.startsWith('!'))\r\n      .map(id => id.substring(1));\r\n\r\n    const andExpr = Op.and();\r\n\r\n    const dataFormatExpr = fieldExpression(Fields.sys.dataFormat, dataFormat);\r\n\r\n    const withExpr = fieldExpression(\r\n      Fields.sys.contentTypeId,\r\n      withContentTypeIds\r\n    );\r\n\r\n    const notExpr = [\r\n      Op.not(...fieldExpression(Fields.sys.contentTypeId, notContentTypeIds)),\r\n    ];\r\n\r\n    andExpr.add(...dataFormatExpr);\r\n    if (withContentTypeIds.length > 0) andExpr.add(...withExpr);\r\n    if (notContentTypeIds.length > 0) andExpr.add(...notExpr);\r\n\r\n    return [andExpr];\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const defaultExpressions = versionStatus => {\r\n  return [Op.equalTo(Fields.sys.versionStatus, versionStatus)];\r\n};\r\n\r\nexport const defaultSearchExpressions = versionStatus => {\r\n  return [\r\n    ...defaultExpressions(versionStatus),\r\n    ...includeInSearchExpressions(),\r\n  ];\r\n};\r\nexport const includeInSearchExpressions = () => [\r\n  Op.or(\r\n    Op.and(\r\n      Op.exists(Fields.sys.includeInSearch, true),\r\n      Op.equalTo(Fields.sys.includeInSearch, true)\r\n    ),\r\n    Op.exists(Fields.sys.includeInSearch, false)\r\n  ),\r\n];\r\n\r\nexport const orderByExpression = orderBy => {\r\n  let expression = OrderBy;\r\n  if (orderBy && orderBy.length > 0) {\r\n    orderBy.map(\r\n      ob =>\r\n        (expression = ob.startsWith('-')\r\n          ? expression.desc(ob.substring(1))\r\n          : expression.asc(ob))\r\n    );\r\n  }\r\n  return expression;\r\n};\r\n\r\nconst equalToOrIn = (field, arr, operator = 'equalTo') =>\r\n  arr.length === 0\r\n    ? []\r\n    : arr.length === 1\r\n    ? [Op[operator](field, arr[0])]\r\n    : [Op.in(field, ...arr)];\r\n\r\nexport const customWhereExpressions = where => {\r\n  if (!where || !Array.isArray(where)) return [];\r\n\r\n  // Accept HTTP style objects and map them to\r\n  // their equivalent JS client \"Op\" expressions\r\n  return where.map(clause => {\r\n    let expression;\r\n    Object.keys(clause).map((key, idx) => {\r\n      if (idx === 1) {\r\n        const operator = key;\r\n        const value = clause[key];\r\n        expression = Op[operator](clause.field, value, clause.weight);\r\n      }\r\n    });\r\n    return expression;\r\n  });\r\n};\r\n\r\nexport const termExpressions = (searchTerm, weightedSearchFields) => {\r\n  if (searchTerm && weightedSearchFields && weightedSearchFields.length > 0) {\r\n    // Extract any phrases in quotes to array\r\n    const quotedPhrases = extractQuotedPhrases(searchTerm);\r\n\r\n    // Modify the search term to remove any quoted phrases to leave any remaining terms\r\n    let modifiedSearchTerm = searchTerm;\r\n    quotedPhrases.forEach(\r\n      qp =>\r\n        (modifiedSearchTerm = modifiedSearchTerm\r\n          .replace(qp, '')\r\n          .replace('\"\"', '')\r\n          .trim())\r\n    );\r\n\r\n    // Push to the operators array to include in the query\r\n    const operators = [];\r\n\r\n    // Helper functions to generate Op expressions\r\n    const containsOp = (f, term) =>\r\n      fieldExpression(\r\n        f.fieldId,\r\n        fixFreeTextForElastic(term),\r\n        'contains',\r\n        f.weight\r\n      );\r\n    const freeTextOp = (f, term) =>\r\n      fieldExpression(\r\n        f.fieldId,\r\n        fixFreeTextForElastic(term),\r\n        'freeText',\r\n        f.weight\r\n      );\r\n\r\n    // For each weighted search field\r\n    weightedSearchFields.forEach(f => {\r\n      // Push to field operators\r\n      const fieldOperators = [];\r\n\r\n      // Add operator expressions for modified search term\r\n      if (modifiedSearchTerm) {\r\n        if (\r\n          [Fields.keywords, Fields.sys.filename, Fields.sys.uri].includes(\r\n            f.fieldId\r\n          )\r\n        ) {\r\n          fieldOperators.push(...containsOp(f, modifiedSearchTerm));\r\n        } else {\r\n          if ([Fields.entryTitle].includes(f.fieldId)) {\r\n            fieldOperators.push(\r\n              Op.or(\r\n                ...containsOp(f, modifiedSearchTerm),\r\n                ...freeTextOp(f, modifiedSearchTerm)\r\n              )\r\n            );\r\n          } else {\r\n            fieldOperators.push(...freeTextOp(f, modifiedSearchTerm));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Add operator expressions for any quoted phrases\r\n      quotedPhrases.forEach(qp => fieldOperators.push(...containsOp(f, qp)));\r\n\r\n      // If we are using multiple operators for a field we will\r\n      // wrap each field inside an And operator so we will match\r\n      // all terms/phrases rather than any terms/phrases\r\n      if (fieldOperators.length > 1) {\r\n        operators.push(Op.and(...fieldOperators));\r\n      } else {\r\n        operators.push(...fieldOperators);\r\n      }\r\n    });\r\n\r\n    // Wrap operators in an Or operator\r\n    return [Op.or().addRange(operators)];\r\n  } else if (searchTerm) {\r\n    return [Op.contains(Fields.wildcard, searchTerm)];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n","// eslint-disable-next-line import/named\r\nimport { Query } from '~/core/util/ContensisDeliveryApi';\r\nimport { fieldExpression, defaultExpressions } from '~/core/search/expressions';\r\n\r\nexport const routeEntryByFieldsQuery = (\r\n  id,\r\n  fields = [],\r\n  versionStatus = 'published'\r\n) => {\r\n  const query = new Query(\r\n    ...[...fieldExpression('sys.id', id), ...defaultExpressions(versionStatus)]\r\n  );\r\n  query.fields = fields;\r\n  return query;\r\n};\r\n","// load-entries.js\r\nimport * as log from 'loglevel';\r\nimport { takeEvery, put, select, call, all } from 'redux-saga/effects';\r\nimport {\r\n  SET_ENTRY,\r\n  SET_ANCESTORS,\r\n  SET_NAVIGATION_PATH,\r\n  SET_ROUTE,\r\n  CALL_HISTORY_METHOD,\r\n  SET_SIBLINGS,\r\n} from '~/core/redux/types/routing';\r\nimport { cachedSearch, deliveryApi } from '~/core/util/ContensisDeliveryApi';\r\nimport { selectVersionStatus } from '~/core/redux/selectors/version';\r\nimport {\r\n  selectCurrentAncestors,\r\n  selectCurrentNode,\r\n  selectCurrentProject,\r\n  selectMappedEntry,\r\n  selectRouteEntry,\r\n  selectRouteEntryEntryId,\r\n} from '~/core/redux/selectors/routing';\r\nimport { GET_NODE_TREE } from '../types/navigation';\r\nimport { hasNavigationTree } from '../selectors/navigation';\r\nimport { routeEntryByFieldsQuery } from './queries';\r\nimport { ensureNodeTreeSaga } from './navigation';\r\nimport { handleRequiresLoginSaga } from '~/features/login/redux/sagas/login';\r\nimport { findContentTypeMapping } from '~/core/util/helpers';\r\nimport { Map } from 'immutable';\r\n\r\nexport const routingSagas = [\r\n  takeEvery(SET_NAVIGATION_PATH, getRouteSaga),\r\n  takeEvery(SET_ROUTE, setRouteSaga),\r\n];\r\n\r\n/**\r\n * To navigate / push a specific route via redux middleware\r\n * @param {path, state} action\r\n */\r\nfunction* setRouteSaga(action) {\r\n  yield put({\r\n    type: CALL_HISTORY_METHOD,\r\n    payload: {\r\n      method: 'push',\r\n      args: [action.path, action.state],\r\n    },\r\n  });\r\n}\r\n\r\nfunction* getRouteSaga(action) {\r\n  let entry = null;\r\n  try {\r\n    const {\r\n      withEvents,\r\n      routes: { ContentTypeMappings = {} } = {},\r\n      staticRoute,\r\n    } = action;\r\n\r\n    // Variables we will pass to setRouteEntry\r\n    let pathNode = null,\r\n      ancestors = null,\r\n      siblings = null;\r\n\r\n    // These variables are the return values from\r\n    // calls to withEvents.onRouteLoad and onRouteLoaded\r\n    let appsays,\r\n      requireLogin = false;\r\n\r\n    if (withEvents && withEvents.onRouteLoad) {\r\n      appsays = yield withEvents.onRouteLoad(action);\r\n    }\r\n    // if appsays customNavigation: true, we will set doNavigation to false\r\n    // if appsays customNavigation: { ... }, we will set doNavigation to the customNavigation object and check for child elements\r\n    // if appsays nothing we will set doNavigation to true and continue to do navigation calls\r\n    const doNavigation =\r\n      !appsays ||\r\n      (appsays && appsays.customNavigation === true\r\n        ? false\r\n        : (appsays && appsays.customNavigation) || true);\r\n\r\n    const entryLinkDepth = (appsays && appsays.entryLinkDepth) || 3;\r\n    const setContentTypeLimits = !!ContentTypeMappings.find(\r\n      ct => ct.fields || ct.linkDepth\r\n    );\r\n\r\n    const state = yield select();\r\n    const routeEntry = selectRouteEntry(state);\r\n    // const routeNode = selectCurrentNode(state);\r\n    const currentPath = action.path; //selectCurrentPath(state);\r\n    const deliveryApiStatus = selectVersionStatus(state);\r\n    const project = selectCurrentProject(state);\r\n    const isHome = currentPath === '/';\r\n    const isPreview = currentPath && currentPath.startsWith('/preview/');\r\n\r\n    // debugger;\r\n    // routeEntry = Map({\r\n    //   entryTitle: 'fake entry',\r\n    //   title: 'fakey entry',\r\n    //   sys: { id: 'abcd', contentTypeId: 'zenbaseHomePage' },\r\n    // });\r\n\r\n    if (\r\n      !isPreview &&\r\n      ((appsays && appsays.customRouting) ||\r\n        (staticRoute && !staticRoute.route.fetchNode) ||\r\n        (routeEntry && action.statePath === action.path))\r\n    ) {\r\n      // To prevent erroneous 404s and wasted network calls, this covers\r\n      // - appsays customRouting and does SET_ENTRY etc. via the consuming app\r\n      // - all staticRoutes (where custom 'route.fetchNode' attribute is falsey)\r\n      // - standard Contensis SiteView Routing where we already have that entry in state\r\n      if (\r\n        routeEntry &&\r\n        (!staticRoute || (staticRoute.route && staticRoute.route.fetchNode))\r\n      ) {\r\n        pathNode = {};\r\n        pathNode.entry = entry = routeEntry.toJS();\r\n        //Do nothing, the entry is allready the right one.\r\n        // yield put({\r\n        //   type: SET_ENTRY,\r\n        //   entry,\r\n        //   node: routeNode,\r\n        //   isLoading: false,\r\n        // });\r\n      } else\r\n        yield call(\r\n          setRouteEntry,\r\n          routeEntry && routeEntry.toJS(),\r\n          yield select(selectCurrentNode),\r\n          yield select(selectCurrentAncestors)\r\n        );\r\n    } else {\r\n      // Handle homepage\r\n      if (isHome) {\r\n        pathNode = yield cachedSearch.getRootNode(\r\n          {\r\n            depth: 0,\r\n            entryFields: '*',\r\n            entryLinkDepth,\r\n            language: 'en-GB',\r\n            versionStatus: deliveryApiStatus,\r\n          },\r\n          project\r\n        );\r\n        ({ entry } = pathNode || {});\r\n      } else {\r\n        // Handle preview routes\r\n        if (isPreview) {\r\n          let splitPath = currentPath.split('/');\r\n          let entryGuid = splitPath[2];\r\n          if (splitPath.length == 3) {\r\n            // According to product dev we cannot use Node API\r\n            // for previewing entries as it gives a response of []\r\n            // -- apparently it is not correct to request latest content\r\n            // with Node API\r\n            let previewEntry = yield deliveryApi\r\n              .getClient(deliveryApiStatus, project)\r\n              .entries.get({ id: entryGuid, linkDepth: entryLinkDepth });\r\n            if (previewEntry) {\r\n              pathNode = { entry: previewEntry };\r\n              ({ entry } = pathNode || {});\r\n            }\r\n          }\r\n        } else {\r\n          // Handle all other routes\r\n          pathNode = yield cachedSearch.getNode(\r\n            {\r\n              depth:\r\n                doNavigation === true || doNavigation.children === true\r\n                  ? 3\r\n                  : (doNavigation && doNavigation.children) || 0,\r\n              path: currentPath,\r\n              entryFields: setContentTypeLimits\r\n                ? ['sys.contentTypeId', 'sys.id']\r\n                : '*',\r\n              entryLinkDepth: setContentTypeLimits ? 0 : entryLinkDepth,\r\n              versionStatus: deliveryApiStatus,\r\n            },\r\n            project\r\n          );\r\n          ({ entry } = pathNode || {});\r\n\r\n          if (\r\n            setContentTypeLimits &&\r\n            pathNode &&\r\n            pathNode.entry &&\r\n            pathNode.entry.sys &&\r\n            pathNode.entry.sys.id\r\n          ) {\r\n            const { fields, linkDepth } =\r\n              findContentTypeMapping(\r\n                ContentTypeMappings,\r\n                pathNode.entry.sys.id\r\n              ) || {};\r\n            const query = routeEntryByFieldsQuery(\r\n              pathNode.entry.sys.id,\r\n              fields,\r\n              deliveryApiStatus\r\n            );\r\n            const payload = yield cachedSearch.search(\r\n              query,\r\n              typeof linkDepth !== 'undefined' ? linkDepth : 3,\r\n              project\r\n            );\r\n            if (payload && payload.items && payload.items.length > 0) {\r\n              pathNode.entry = payload.items[0];\r\n            }\r\n          }\r\n        }\r\n\r\n        if (pathNode && pathNode.id) {\r\n          if (doNavigation === true || doNavigation.ancestors) {\r\n            try {\r\n              ancestors = yield cachedSearch.getAncestors(\r\n                {\r\n                  id: pathNode.id,\r\n                  versionStatus: deliveryApiStatus,\r\n                },\r\n                project\r\n              );\r\n            } catch (ex) {\r\n              log.info('Problem fetching ancestors', ex);\r\n            }\r\n          }\r\n\r\n          if (doNavigation === true || doNavigation.siblings) {\r\n            try {\r\n              siblings = yield cachedSearch.getSiblings(\r\n                {\r\n                  id: pathNode.id,\r\n                  versionStatus: deliveryApiStatus,\r\n                },\r\n                project\r\n              );\r\n            } catch (ex) {\r\n              log.info('Problem fetching siblings', ex);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (withEvents && withEvents.onRouteLoaded) {\r\n      // Check if the app has provided a requireLogin boolean flag or groups array\r\n      // in addition to checking if requireLogin is set in the route definition\r\n      ({ requireLogin } =\r\n        (yield withEvents.onRouteLoaded({ ...action, entry })) || {});\r\n    }\r\n\r\n    yield call(handleRequiresLoginSaga, {\r\n      ...action,\r\n      entry,\r\n      requireLogin,\r\n    });\r\n    if (\r\n      pathNode &&\r\n      pathNode.entry &&\r\n      pathNode.entry.sys &&\r\n      pathNode.entry.sys.id\r\n    ) {\r\n      entry = pathNode.entry;\r\n      const { entryMapper } =\r\n        findContentTypeMapping(ContentTypeMappings, entry.sys.contentTypeId) ||\r\n        {};\r\n      yield call(\r\n        setRouteEntry,\r\n        entry,\r\n        pathNode,\r\n        ancestors,\r\n        siblings,\r\n        entryMapper\r\n      );\r\n    } else {\r\n      if (pathNode)\r\n        yield call(setRouteEntry, null, pathNode, ancestors, siblings);\r\n      else if (!staticRoute) yield call(do404);\r\n    }\r\n    if (!appsays || !appsays.preventScrollTop) {\r\n      // Scroll into View\r\n      if (typeof window !== 'undefined') {\r\n        window.scroll({\r\n          top: 0,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !hasNavigationTree(state) &&\r\n      (doNavigation === true || doNavigation.tree)\r\n    )\r\n      if (typeof window !== 'undefined') {\r\n        yield put({\r\n          type: GET_NODE_TREE,\r\n          treeDepth:\r\n            doNavigation === true ||\r\n            !doNavigation.tree ||\r\n            doNavigation.tree === true\r\n              ? 2\r\n              : doNavigation.tree,\r\n        });\r\n      } else {\r\n        yield call(ensureNodeTreeSaga);\r\n      }\r\n  } catch (e) {\r\n    log.error(...['Error running route saga:', e, e.stack]);\r\n    yield call(do404);\r\n  }\r\n}\r\n\r\nfunction* setRouteEntry(\r\n  entry,\r\n  node,\r\n  ancestors,\r\n  siblings,\r\n  entryMapper,\r\n  notFound = false\r\n) {\r\n  const id = (entry && entry.sys && entry.sys.id) || null;\r\n  const currentEntryId = yield select(selectRouteEntryEntryId);\r\n  const mappedEntry =\r\n    currentEntryId === id\r\n      ? (yield select(selectMappedEntry) || Map()).toJS()\r\n      : yield mapRouteEntry(entryMapper, {\r\n          ...node,\r\n          entry,\r\n          ancestors,\r\n          siblings,\r\n        });\r\n\r\n  yield all([\r\n    put({\r\n      type: SET_ENTRY,\r\n      id,\r\n      entry,\r\n      mappedEntry,\r\n      node,\r\n      notFound,\r\n    }),\r\n    ancestors &&\r\n      put({\r\n        type: SET_ANCESTORS,\r\n        ancestors,\r\n      }),\r\n    siblings &&\r\n      put({\r\n        type: SET_SIBLINGS,\r\n        siblings,\r\n      }),\r\n  ]);\r\n}\r\n\r\nfunction* mapRouteEntry(entryMapper, node) {\r\n  try {\r\n    if (typeof entryMapper === 'function') {\r\n      const state = yield select();\r\n      const mappedEntry = yield call(entryMapper, node, state);\r\n      return mappedEntry;\r\n    }\r\n  } catch (e) {\r\n    log.error(...['Error running entryMapper:', e, e.stack]);\r\n  }\r\n  return;\r\n}\r\nfunction* do404() {\r\n  yield put({\r\n    type: SET_ENTRY,\r\n    id: null,\r\n    entry: null,\r\n    notFound: true,\r\n  });\r\n}\r\n","import { to } from 'await-to-js';\r\nimport { put, select, takeEvery } from 'redux-saga/effects';\r\nimport { setRoute } from '~/core/redux/actions/routing';\r\nimport { selectCurrentSearch } from '~/core/redux/selectors/routing';\r\nimport { queryParams } from '~/core/util/navigation';\r\nimport {\r\n  REGISTER_USER,\r\n  REGISTER_USER_SUCCESS,\r\n  REGISTER_USER_FAILED,\r\n} from '../types';\r\n\r\nexport const registerSagas = [\r\n  takeEvery(REGISTER_USER, registerSaga),\r\n  takeEvery(REGISTER_USER_SUCCESS, redirectSaga),\r\n];\r\n\r\nfunction* registerSaga({ user, mappers }) {\r\n  let requestBody = user;\r\n  // Allow use of request mapper to take a user object\r\n  // of any format and return the payload for the api request\r\n  if (mappers && mappers.request && typeof mappers.request === 'function') {\r\n    requestBody = yield mappers.request(user);\r\n  }\r\n\r\n  // Make POST call to register API\r\n  const response = yield fetch('/account/register', {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(requestBody),\r\n  });\r\n\r\n  if (response.ok) {\r\n    let mappedResponse;\r\n    const [, responseBody] = yield to(response.json());\r\n    if (responseBody) {\r\n      // Allow use of response mapper to convert the successful user object\r\n      // from the api response body into a user object of any format\r\n      if (\r\n        mappers &&\r\n        mappers.response &&\r\n        typeof mappers.response === 'function'\r\n      ) {\r\n        mappedResponse = yield mappers.response(responseBody);\r\n      }\r\n      // Update user object with mappedResponse or responseBody\r\n      yield put({\r\n        type: REGISTER_USER_SUCCESS,\r\n        user: mappedResponse || responseBody,\r\n      });\r\n    } else {\r\n      // OK response but unable to parse the response body\r\n      yield put({\r\n        type: REGISTER_USER_FAILED,\r\n        error: {\r\n          message:\r\n            'Unable to parse the created user from the register service response',\r\n        },\r\n      });\r\n    }\r\n  } else {\r\n    // Not OK responses, these can be due to service availability\r\n    // or status codes echoed from the responses received from\r\n    // management api when registering the user\r\n    const [, errorResponse] = yield to(response.json());\r\n    const error = (errorResponse && errorResponse.error) || errorResponse || {};\r\n    // Get something meaningful from the response if there is no message in the body\r\n    if (!error.message) {\r\n      error.message = `Registration service: ${response.statusText}`;\r\n      error.status = response.status;\r\n    }\r\n    yield put({\r\n      type: REGISTER_USER_FAILED,\r\n      error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* redirectSaga() {\r\n  // Check if querystring contains a redirect_uri\r\n  const currentQs = queryParams(yield select(selectCurrentSearch));\r\n  const redirectUri = currentQs.redirect_uri || currentQs.redirect;\r\n\r\n  // We must use redux based navigation to preserve the registration state\r\n  if (redirectUri) yield put(setRoute(redirectUri));\r\n}\r\n","import { loginSagas } from './login';\r\nimport { registerSagas } from './register';\r\n\r\nexport const userSagas = [...loginSagas, ...registerSagas];\r\n","// index.js\r\nimport { all } from 'redux-saga/effects';\r\nimport { navigationSagas } from './navigation';\r\nimport { routingSagas } from './routing';\r\nimport { userSagas } from '~/features/login/redux/sagas/index.js';\r\n\r\nexport default function(featureSagas = []) {\r\n  return function* rootSaga() {\r\n    const subSagas = [...routingSagas, ...navigationSagas, ...userSagas];\r\n    yield all([...subSagas, ...featureSagas]);\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { hot } from 'react-hot-loader';\r\nimport RouteLoader from '~/core/routes/RouteLoader';\r\n\r\nconst AppRoot = props => {\r\n  return <RouteLoader {...props} />;\r\n};\r\n\r\nexport default hot(module)(AppRoot);\r\n"],"names":["selectedHistory","window","createBrowserHistory","createMemoryHistory","history","options","browserHistory","servers","SERVERS","alias","toLowerCase","publicUri","PUBLIC_URI","projects","PROJECTS","pickProject","hostname","query","p","id","project","includes","startsWith","initialState","Map","root","treeDepends","List","isError","isReady","state","action","type","SET_NODE_TREE","set","fromJS","nodes","GET_NODE_TREE_ERROR","OrderedMap","contentTypeId","currentPath","currentNode","currentNodeAncestors","currentProject","entryID","entry","currentTreeId","entryDepends","isLoading","location","mappedEntry","nodeDepends","notFound","staticRoute","SET_ANCESTORS","ancestors","SET_ENTRY","node","nextState","Object","keys","length","sys","removeIn","SET_NAVIGATION_PATH","path","entryUri","getIn","route","component","SET_ROUTE","SET_SIBLINGS","currentNodeSiblingParent","siblingIDs","siblings","parentId","map","currentNodeDepends","get","allNodeDepends","Set","union","SET_SURROGATE_KEYS","SET_TARGET_PROJECT","allowedGroups","commitRef","buildNo","contensisVersionStatus","SET_VERSION_STATUS","status","SET_VERSION","routerMiddleware","store","next","CALL_HISTORY_METHOD","payload","method","args","reduxStore","featureReducers","thunkMiddleware","thunk","reduxDevToolsMiddleware","f","__REDUX_DEVTOOLS_EXTENSION__","sagaMiddleware","createSagaMiddleware","middleware","compose","applyMiddleware","reducers","navigation","NavigationReducer","routing","RoutingReducer","user","UserReducer","version","VersionReducer","combinedReducers","combineReducers","createStore","runSaga","run","close","dispatch","END","storeSurrogateKeys","response","headers","setSurrogateKeys","getClientConfig","config","DELIVERY_API_CONFIG","responseHandler","projectId","defaultHeaders","PROXY_DELIVERY_API","rootUrl","DeliveryApi","getClientSideVersionStatus","currentHostname","getVersionStatusFromHostname","indexOf","endsWith","search","linkDepth","env","client","Client","create","entries","getClient","deliveryApiStatus","baseConfig","versionStatus","getEntry","deliveryApi","CacheNode","constructor","key","value","prev","LruCache","limit","head","tail","size","remove","setHead","CachedSearch","cache","taxonomyLookup","request","JSON","stringify","toString","clientConfig","getContentType","contentTypes","getTaxonomyNode","taxonomy","resolveChildren","then","extendTaxonomyNode","getRootNode","getRoot","getNode","getAncestors","getChildren","getSiblings","execute","promise","catch","getTaxonomyId","children","n","parts","split","getTaxonomyKey","cachedSearch","navigationSagas","takeEvery","GET_NODE_TREE","ensureNodeTreeSaga","select","hasNavigationTree","deliveryApiVersionStatus","selectVersionStatus","selectCurrentProject","depth","treeDepth","put","ex","error","dataFormat","filename","includeInSearch","slug","uri","Fields","entryTitle","entryDescription","keywords","wildcard","fieldExpression","field","operator","weight","Array","isArray","equalToOrIn","Op","defaultExpressions","equalTo","arr","in","routeEntryByFieldsQuery","fields","Query","routingSagas","getRouteSaga","setRouteSaga","withEvents","routes","ContentTypeMappings","pathNode","appsays","requireLogin","onRouteLoad","doNavigation","customNavigation","entryLinkDepth","setContentTypeLimits","find","ct","routeEntry","selectRouteEntry","isHome","isPreview","customRouting","fetchNode","statePath","toJS","call","setRouteEntry","selectCurrentNode","selectCurrentAncestors","entryFields","language","splitPath","entryGuid","previewEntry","findContentTypeMapping","items","log","onRouteLoaded","handleRequiresLoginSaga","entryMapper","do404","preventScrollTop","scroll","top","tree","e","stack","currentEntryId","selectRouteEntryEntryId","selectMappedEntry","mapRouteEntry","all","registerSagas","REGISTER_USER","registerSaga","REGISTER_USER_SUCCESS","redirectSaga","mappers","requestBody","fetch","Accept","body","ok","mappedResponse","responseBody","to","json","REGISTER_USER_FAILED","message","errorResponse","statusText","currentQs","queryParams","selectCurrentSearch","redirectUri","redirect_uri","redirect","setRoute","userSagas","loginSagas","featureSagas","rootSaga","subSagas","AppRoot","props"],"mappings":"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"}