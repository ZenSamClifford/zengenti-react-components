{"version":3,"file":"client.js","sources":["../src/client/client.tsx"],"sourcesContent":["import 'isomorphic-fetch';\r\nimport React from 'react';\r\nimport { render, hydrate } from 'react-dom';\r\nimport { Router } from 'react-router-dom';\r\nimport { preloadReady } from 'react-loadable';\r\nimport { AppContainer } from 'react-hot-loader';\r\nimport { Provider as ReduxProvider } from 'react-redux';\r\nimport * as queryString from 'query-string';\r\n// import { fromJS } from 'immutable';\r\n\r\nimport createStore from '~/redux/store/store';\r\nimport { browserHistory as history } from '~/redux/store/history';\r\nimport rootSaga from '~/redux/sagas';\r\n\r\nimport { setVersionStatus } from '~/redux/actions/version';\r\nimport { deliveryApi } from '~/util/ContensisDeliveryApi';\r\nimport { setCurrentProject } from '~/routing/redux/actions';\r\nimport pickProject from '~/util/pickProject';\r\n\r\nimport { AppConfig } from '~/config';\r\n\r\ndeclare let window: typeof globalThis & {\r\n  isDynamic;\r\n  REDUX_DATA;\r\n};\r\n\r\ntype ReactAppProps = { routes: any; withEvents: any };\r\n\r\nclass ClientApp {\r\n  constructor(ReactApp: React.ComponentType<ReactAppProps>, config: AppConfig) {\r\n    const documentRoot = document.getElementById('root');\r\n\r\n    const {\r\n      stateType = 'immutable',\r\n      routes,\r\n      withReducers,\r\n      withSagas,\r\n      withEvents,\r\n    } = config;\r\n\r\n    const GetClientJSX = store => {\r\n      const ClientJsx = (\r\n        <AppContainer>\r\n          <ReduxProvider store={store}>\r\n            <Router history={history}>\r\n              <ReactApp routes={routes} withEvents={withEvents} />\r\n            </Router>\r\n          </ReduxProvider>\r\n        </AppContainer>\r\n      );\r\n      return ClientJsx;\r\n    };\r\n\r\n    const isProduction = !(process.env.NODE_ENV !== 'production');\r\n\r\n    /**\r\n     * Webpack HMR Setup.\r\n     */\r\n    const HMRRenderer = Component => {\r\n      preloadReady().then(() => {\r\n        if (isProduction) hydrate(Component, documentRoot);\r\n        else render(Component, documentRoot);\r\n      });\r\n    };\r\n\r\n    const hmr = store => {\r\n      // webpack Hot Module Replacement API\r\n      if (module.hot) {\r\n        module.hot.accept(ReactApp as unknown as string, () => {\r\n          // if you are using harmony modules ({modules:false})\r\n          HMRRenderer(GetClientJSX(store));\r\n        });\r\n      }\r\n    };\r\n\r\n    const qs = queryString.parse(window.location.search);\r\n    const versionStatusFromHostname = deliveryApi.getClientSideVersionStatus();\r\n\r\n    if (\r\n      window.isDynamic ||\r\n      window.REDUX_DATA ||\r\n      process.env.NODE_ENV !== 'production'\r\n    ) {\r\n      createStore(withReducers, window.REDUX_DATA, history, stateType).then(\r\n        store => {\r\n          store.dispatch(\r\n            setVersionStatus(qs.versionStatus || versionStatusFromHostname)\r\n          );\r\n\r\n          /* eslint-disable no-console */\r\n          console.log('Hydrating from inline Redux');\r\n          /* eslint-enable no-console */\r\n          store.runSaga(rootSaga(withSagas));\r\n          store.dispatch(\r\n            setCurrentProject(\r\n              pickProject(window.location.hostname, qs),\r\n              [],\r\n              window.location.hostname\r\n            )\r\n          );\r\n\r\n          delete window.REDUX_DATA;\r\n          HMRRenderer(GetClientJSX(store));\r\n\r\n          hmr(store);\r\n        }\r\n      );\r\n    } else {\r\n      fetch(`${window.location.pathname}?redux=true`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          /* eslint-disable no-console */\r\n          // console.log('Got Data Back');\r\n          // console.log(data);\r\n          /* eslint-enable no-console */\r\n          const ssRedux = JSON.parse(data);\r\n          createStore(withReducers, ssRedux, history, stateType).then(store => {\r\n            // store.dispatch(setVersionStatus(versionStatusFromHostname));\r\n\r\n            store.runSaga(rootSaga(withSagas));\r\n            store.dispatch(\r\n              setCurrentProject(\r\n                pickProject(\r\n                  window.location.hostname,\r\n                  queryString.parse(window.location.search)\r\n                ),\r\n                [],\r\n                window.location.hostname\r\n              )\r\n            );\r\n            // if (typeof window != 'undefined') {\r\n            //   store.dispatch(checkUserLoggedIn());\r\n            // }\r\n            HMRRenderer(GetClientJSX(store));\r\n\r\n            hmr(store);\r\n          });\r\n        });\r\n    }\r\n  }\r\n}\r\n\r\nexport default ClientApp;\r\n"],"names":["ClientApp","constructor","ReactApp","config","documentRoot","document","getElementById","stateType","routes","withReducers","withSagas","withEvents","GetClientJSX","store","ClientJsx","ReduxProvider","history","isProduction","process","env","NODE_ENV","HMRRenderer","Component","preloadReady","then","hydrate","render","hmr","module","hot","accept","qs","queryString","window","location","search","versionStatusFromHostname","deliveryApi","getClientSideVersionStatus","isDynamic","REDUX_DATA","createStore","dispatch","setVersionStatus","versionStatus","console","log","runSaga","rootSaga","setCurrentProject","pickProject","hostname","fetch","pathname","response","json","data","ssRedux","JSON","parse"],"mappings":"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"}