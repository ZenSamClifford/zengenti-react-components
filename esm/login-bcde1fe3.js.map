{"version":3,"file":"login-bcde1fe3.js","sources":["../src/app/core/util/fromJSOrdered.js","../src/app/features/login/redux/types.js","../src/app/features/login/redux/reducers.js","../src/app/core/util/ContensisManagementApi.js","../src/app/features/login/transformations/mapClientCredentials.js","../src/app/features/login/util/CookieHelper.class.js","../src/app/features/login/util/OidcUserManager.js","../src/app/features/login/util/LoginHelper.class.js","../src/app/features/login/redux/sagas/login.js"],"sourcesContent":["import { Seq } from 'immutable';\r\n\r\nconst fromJSOrdered = js => {\r\n  return typeof js !== 'object' || js === null\r\n    ? js\r\n    : Array.isArray(js)\r\n    ? Seq(js)\r\n        .map(fromJSOrdered)\r\n        .toList()\r\n    : Seq(js)\r\n        .map(fromJSOrdered)\r\n        .toOrderedMap();\r\n};\r\n\r\nexport default fromJSOrdered;\r\n","const ACTION_PREFIX = '@USER/';\r\nexport const VALIDATE_USER = `${ACTION_PREFIX}VALIDATE_USER`;\r\nexport const SET_AUTHENTICATION_STATE = `${ACTION_PREFIX}SET_AUTHENTICATION_STATE`;\r\nexport const LOGIN_USER = `${ACTION_PREFIX}LOGIN_USER`;\r\nexport const LOGIN_SUCCESSFUL = `${ACTION_PREFIX}LOGIN_SUCCESSFUL`;\r\nexport const LOGIN_FAILED = `${ACTION_PREFIX}LOGIN_FAILED`;\r\nexport const LOGOUT_USER = `${ACTION_PREFIX}LOGOUT_USER`;\r\nexport const REGISTER_USER = `${ACTION_PREFIX}REGISTER_USER`;\r\nexport const REGISTER_USER_SUCCESS = `${ACTION_PREFIX}REGISTER_USER_SUCCESS`;\r\nexport const REGISTER_USER_FAILED = `${ACTION_PREFIX}REGISTER_USER_FAILED`;\r\n","import { List, Map } from 'immutable';\r\nimport fromJSOrdered from '~/core/util/fromJSOrdered';\r\nimport {\r\n  REGISTER_USER,\r\n  REGISTER_USER_FAILED,\r\n  REGISTER_USER_SUCCESS,\r\n  SET_AUTHENTICATION_STATE,\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n} from './types';\r\n\r\nconst defaultAuthenticationState = Map({\r\n  authenticated: false,\r\n  authenticationError: false,\r\n  clientCredentials: null,\r\n  error: false,\r\n  loading: false,\r\n});\r\n\r\nexport const initialUserState = Map({\r\n  authenticationState: defaultAuthenticationState,\r\n  groups: new List([]),\r\n});\r\n\r\nexport default (state = initialUserState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n    case LOGOUT_USER:\r\n    case SET_AUTHENTICATION_STATE: {\r\n      if (!action.authenticationState) {\r\n        action.authenticationState = defaultAuthenticationState.toJS();\r\n      }\r\n\r\n      const loading = action.type === LOGIN_USER;\r\n\r\n      const {\r\n        authenticationState: {\r\n          error = false,\r\n          authenticated,\r\n          authenticationError = false,\r\n          clientCredentials = null,\r\n        },\r\n        user,\r\n      } = action;\r\n\r\n      if (user) {\r\n        user.name = `${user.firstName} ${user.lastName}`;\r\n        user.isZengentiStaff = user.email.includes('@zengenti.com');\r\n      }\r\n\r\n      const nextState = {\r\n        ...initialUserState.toJS(),\r\n        ...(user || state.toJS()),\r\n        authenticationState: {\r\n          authenticated:\r\n            authenticated ||\r\n            state.getIn(['authenticationState', 'authenticated']),\r\n          authenticationError,\r\n          clientCredentials,\r\n          error,\r\n          loading,\r\n        },\r\n      };\r\n      return fromJSOrdered(nextState);\r\n    }\r\n    // REGISTER_USER is the trigger to set the user.registration initial state\r\n    // and will set user.registration.loading to true\r\n    // REGISTER_USER_FAILED will unset user.registration.loading and will set\r\n    // the value in user.registration.error\r\n    // REGISTER_USER_SUCCESS will unset user.registration.loading and will\r\n    // set user.registration to the created user from the api response\r\n    case REGISTER_USER:\r\n    case REGISTER_USER_FAILED:\r\n    case REGISTER_USER_SUCCESS: {\r\n      const { error, user } = action;\r\n\r\n      // Set registration object from the supplied action.user\r\n      // so we can call these values back later\r\n      const nextState = state.set(\r\n        'registration',\r\n        user ? fromJSOrdered(user) : state.get('registration', Map())\r\n      );\r\n\r\n      // Set registration flags so the UI can track the status\r\n      return nextState\r\n        .setIn(\r\n          ['registration', 'success'],\r\n          action.type === REGISTER_USER_SUCCESS\r\n        )\r\n        .setIn(['registration', 'error'], error || false)\r\n        .setIn(['registration', 'loading'], action.type === REGISTER_USER);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Client } from 'contensis-management-api';\r\n\r\nexport const getManagementApiClient = ({\r\n  bearerToken,\r\n  bearerTokenExpiryDate,\r\n  refreshToken,\r\n  refreshTokenExpiryDate,\r\n  contensisClassicToken,\r\n  username,\r\n  password,\r\n}) => {\r\n  const rootUrl = SERVERS.api || SERVERS.cms; /* global SERVERS */\r\n  const projectId = PROJECTS[0].id; /* global PROJECTS */\r\n\r\n  let config = {};\r\n  if (refreshToken) {\r\n    config = {\r\n      clientType: 'contensis_classic_refresh_token',\r\n      clientDetails: {\r\n        refreshToken,\r\n      },\r\n    };\r\n  } else {\r\n    config = {\r\n      clientType: 'contensis_classic',\r\n      clientDetails: {\r\n        username,\r\n        password,\r\n      },\r\n    };\r\n  }\r\n\r\n  const client = Client.create({\r\n    ...config,\r\n    projectId,\r\n    rootUrl,\r\n  });\r\n\r\n  if (bearerToken) client.bearerToken = bearerToken;\r\n  if (bearerTokenExpiryDate)\r\n    client.bearerTokenExpiryDate = bearerTokenExpiryDate;\r\n  if (refreshToken) client.refreshToken = refreshToken;\r\n  if (refreshTokenExpiryDate)\r\n    client.refreshTokenExpiryDate = refreshTokenExpiryDate;\r\n  if (contensisClassicToken)\r\n    client.contensisClassicToken = contensisClassicToken;\r\n\r\n  return client;\r\n};\r\n","import { mapJson } from '~/core/util/json-mapper';\r\n\r\nconst clientCredentials = {\r\n  bearerToken: 'bearerToken',\r\n  bearerTokenExpiryDate: ({ bearerTokenExpiryDate }) =>\r\n    bearerTokenExpiryDate.toISOString(),\r\n  refreshToken: 'refreshToken',\r\n  refreshTokenExpiryDate: ({ refreshTokenExpiryDate }) =>\r\n    refreshTokenExpiryDate.toISOString(),\r\n  contensisClassicToken: 'contensisClassicToken',\r\n};\r\nexport default obj => mapJson(obj, clientCredentials);\r\n","import Cookies from 'js-cookie';\r\n\r\nconst COOKIE_VALID_DAYS = 1; // 0 = Session cookie\r\n\r\n// Override the default js-cookie conversion / encoding\r\n// methods so the written values work with Contensis sites\r\nconst _cookie = Cookies.withConverter({\r\n  read: value => decodeURIComponent(value),\r\n  write: value => encodeURIComponent(value),\r\n});\r\n\r\nexport class CookieHelper {\r\n  static GetCookie(name) {\r\n    let cookie = _cookie.get(name);\r\n    if (typeof cookie == 'undefined') {\r\n      return null;\r\n    }\r\n    return cookie;\r\n  }\r\n\r\n  static SetCookie(name, value, maxAgeDays = COOKIE_VALID_DAYS) {\r\n    maxAgeDays === 0\r\n      ? _cookie.set(name, value)\r\n      : _cookie.set(name, value, { expires: maxAgeDays });\r\n  }\r\n\r\n  static DeleteCookie(name) {\r\n    _cookie.remove(name);\r\n  }\r\n}\r\n","const context = typeof window != 'undefined' ? window : global;\r\nconst requireOidc =\r\n  process.env.NODE_ENV === 'development'\r\n    ? WSFED_LOGIN === 'true' /* global WSFED_LOGIN */\r\n    : context.WSFED_LOGIN === 'true';\r\n\r\nconst servers = SERVERS; /* global SERVERS */\r\n\r\nconst userManagerConfig =\r\n  typeof window !== 'undefined'\r\n    ? {\r\n        authority: `${servers.cms}/authenticate/`,\r\n        client_id: 'WebsiteAdfsClient',\r\n        redirect_uri: window.location.toString(),\r\n        post_logout_redirect_uri: window.location.toString(),\r\n        response_type: 'id_token',\r\n        scope: 'openid',\r\n        filterProtocolClaims: false,\r\n      }\r\n    : {};\r\n\r\nconst createUserManager = config => {\r\n  if (typeof window !== 'undefined' && requireOidc) {\r\n    try {\r\n      const UserManager = require('oidc-client').UserManager;\r\n      return new UserManager(config);\r\n    } catch (e) {\r\n      //\r\n    }\r\n  } else return {};\r\n};\r\n\r\nconst userManager = createUserManager(userManagerConfig);\r\n\r\nexport default userManager;\r\n","/* eslint-disable require-atomic-updates */\r\nimport { getManagementApiClient } from '~/core/util/ContensisManagementApi';\r\nimport { to } from 'await-to-js';\r\n\r\nimport { CookieHelper } from './CookieHelper.class';\r\n\r\nimport mapClientCredentials from '../transformations/mapClientCredentials';\r\nimport userManager from './OidcUserManager';\r\n\r\nexport const LOGIN_COOKIE = 'ContensisCMSUserName';\r\nexport const REFRESH_TOKEN_COOKIE = 'RefreshToken';\r\n\r\nconst context = typeof window != 'undefined' ? window : global;\r\n\r\nexport class LoginHelper {\r\n  static CMS_URL = SERVERS.cms /* global SERVERS */;\r\n  static WSFED_LOGIN =\r\n    process.env.NODE_ENV === 'development'\r\n      ? WSFED_LOGIN === 'true' /* global WSFED_LOGIN */\r\n      : context.WSFED_LOGIN === 'true';\r\n  static LOGIN_ROUTE = '/account/login';\r\n  static ACCESS_DENIED_ROUTE = '/account/access-denied';\r\n\r\n  static SetLoginCookies({ contensisClassicToken, refreshToken }) {\r\n    if (contensisClassicToken)\r\n      CookieHelper.SetCookie(LOGIN_COOKIE, contensisClassicToken);\r\n    if (refreshToken)\r\n      CookieHelper.SetCookie(REFRESH_TOKEN_COOKIE, refreshToken);\r\n  }\r\n\r\n  static GetCachedCredentials() {\r\n    return {\r\n      bearerToken: null,\r\n      bearerTokenExpiryDate: null,\r\n      refreshToken: CookieHelper.GetCookie(REFRESH_TOKEN_COOKIE),\r\n      refreshTokenExpiryDate: null,\r\n      contensisClassicToken: CookieHelper.GetCookie(LOGIN_COOKIE),\r\n    };\r\n  }\r\n\r\n  static ClearCachedCredentials() {\r\n    CookieHelper.DeleteCookie(LOGIN_COOKIE);\r\n    CookieHelper.DeleteCookie(REFRESH_TOKEN_COOKIE);\r\n  }\r\n\r\n  static async LoginUser({ username, password, clientCredentials }) {\r\n    let credentials = clientCredentials;\r\n    let authenticationState = {\r\n      authenticated: false,\r\n      authenticationError: false,\r\n      error: false,\r\n      clientCredentials: null,\r\n    };\r\n    let transientClient;\r\n    let user;\r\n\r\n    if (username && password) {\r\n      // Get a management client with username and password\r\n      transientClient = getManagementApiClient({\r\n        username,\r\n        password,\r\n      });\r\n\r\n      // Ensure the client has requested a bearer token\r\n      const [loginError, clientBearerToken] = await to(\r\n        transientClient.ensureBearerToken()\r\n      );\r\n\r\n      // Problem getting token with username and password\r\n      if (loginError) {\r\n        const authenticationError = loginError.name.includes(\r\n          'ContensisAuthenticationError'\r\n        );\r\n        authenticationState = {\r\n          authenticated: false,\r\n          authenticationError: authenticationError,\r\n          error: !authenticationError,\r\n          clientCredentials: null,\r\n        };\r\n        LoginHelper.ClearCachedCredentials();\r\n      }\r\n\r\n      // Got a token using username and password\r\n      if (clientBearerToken) {\r\n        // Set credentials so we can continue to GetUserDetails\r\n        credentials = mapClientCredentials(transientClient);\r\n        LoginHelper.SetLoginCookies(credentials);\r\n        authenticationState = {\r\n          authenticated: true,\r\n          authenticationError: false,\r\n          error: false,\r\n          clientCredentials: credentials,\r\n        };\r\n      }\r\n    }\r\n\r\n    // If we have credentials supplied by a successful username and password login\r\n    // or clientCredentials supplied in the options argument we can continue to\r\n    // fetch the user's details\r\n    if (credentials) {\r\n      const client = transientClient || getManagementApiClient(credentials);\r\n      const [error, userDetails] = await LoginHelper.GetUserDetails(client);\r\n\r\n      if (error) {\r\n        authenticationState = {\r\n          authenticated: false,\r\n          authenticationError: false,\r\n          error: { message: error.message, stack: error.stack },\r\n          clientCredentials: null,\r\n        };\r\n        LoginHelper.ClearCachedCredentials();\r\n      } else {\r\n        user = userDetails;\r\n        authenticationState = {\r\n          authenticated: true,\r\n          authenticationError: false,\r\n          error: false,\r\n          clientCredentials: credentials,\r\n        };\r\n      }\r\n    }\r\n\r\n    return { authenticationState, user };\r\n  }\r\n\r\n  static GetUserDetails = async client => {\r\n    let error,\r\n      user = {},\r\n      groupsResult;\r\n\r\n    [error, user] = await to(client.security.users.getCurrent());\r\n    if (user && user.id) {\r\n      [error, groupsResult] = await to(\r\n        client.security.users.getUserGroups({\r\n          userId: user.id,\r\n          includeInherited: true,\r\n        })\r\n      );\r\n      // Set groups attribute in user object to be the items\r\n      // array from the getUserGroups result\r\n      if (groupsResult && groupsResult.items) user.groups = groupsResult.items;\r\n    }\r\n    return [error, user];\r\n  };\r\n\r\n  static LogoutUser(redirectPath) {\r\n    LoginHelper.ClearCachedCredentials();\r\n    if (LoginHelper.WSFED_LOGIN) {\r\n      LoginHelper.WsFedLogout(redirectPath);\r\n    } else {\r\n      if (redirectPath) LoginHelper.ClientRedirectToPath(redirectPath);\r\n      else LoginHelper.ClientRedirectToSignInPage();\r\n    }\r\n  }\r\n\r\n  static ClientRedirectToHome(location) {\r\n    if (typeof window != 'undefined') {\r\n      let url = '/';\r\n      if (location) {\r\n        const { search, hash } = location.toJS();\r\n        url = search ? `${url}${search}` : url;\r\n        url = hash ? `${url}${hash}` : url;\r\n      }\r\n      window.location.href = url;\r\n    }\r\n  }\r\n\r\n  static async ClientRedirectToSignInPage(redirectPath) {\r\n    if (LoginHelper.WSFED_LOGIN) {\r\n      await LoginHelper.WsFedLogout();\r\n      LoginHelper.WsFedLogin();\r\n    } else {\r\n      // Standard Contensis Login\r\n      let url = LoginHelper.LOGIN_ROUTE;\r\n      if (typeof redirectPath === 'string')\r\n        url = `${url}?redirect_uri=${redirectPath}`;\r\n      if (\r\n        typeof location !== 'undefined' &&\r\n        redirectPath !== LoginHelper.LOGIN_ROUTE\r\n      )\r\n        location.replace(url);\r\n    }\r\n  }\r\n\r\n  static ClientRedirectToAccessDeniedPage(originalPath) {\r\n    let url = LoginHelper.ACCESS_DENIED_ROUTE;\r\n    if (originalPath === url) return;\r\n\r\n    if (typeof originalPath === 'string')\r\n      url = `${url}?original_uri=${originalPath}`;\r\n    if (typeof location !== 'undefined') location.href = url;\r\n  }\r\n\r\n  static ClientRedirectToPath(redirectPath) {\r\n    if (typeof redirectPath === 'string') {\r\n      if (typeof location !== 'undefined') window.location.href = redirectPath;\r\n    } else LoginHelper.ClientRedirectToHome();\r\n  }\r\n\r\n  static WsFedLogin(redirectUri) {\r\n    userManager.signinRedirect({\r\n      scope: 'openid',\r\n      response_type: 'id_token',\r\n      redirect_uri: redirectUri || window.location.toString(),\r\n    });\r\n  }\r\n\r\n  static async WsFedLogout(redirectPath) {\r\n    await fetch(\r\n      `${LoginHelper.CMS_URL}/authenticate/logout?jsonResponseRequired=true`,\r\n      {\r\n        credentials: 'include',\r\n      }\r\n    );\r\n    if (redirectPath) {\r\n      window.location = redirectPath;\r\n    }\r\n  }\r\n\r\n  static async GetCredentialsForSecurityToken(securityToken) {\r\n    const [error, response] = await to(\r\n      fetch(`${LoginHelper.CMS_URL}/REST/Contensis/Security/IsAuthenticated`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          securityToken: encodeURIComponent(securityToken),\r\n        }),\r\n      })\r\n    );\r\n    if (error) return [{ message: 'Failed to fetch credentials' }];\r\n    if (response.ok) {\r\n      const [parseError, body] = await to(response.json());\r\n      if (parseError) return [parseError];\r\n\r\n      const { LogonResult, ApplicationData = [] } = body;\r\n      if (LogonResult !== 0) {\r\n        return [\r\n          { message: 'Security token is invalid', data: ApplicationData },\r\n        ];\r\n      }\r\n      if (\r\n        ApplicationData.length > 1 &&\r\n        ApplicationData[1].Key === 'ContensisSecurityRefreshToken'\r\n      ) {\r\n        const refreshToken = ApplicationData[1].Value;\r\n        return [undefined, refreshToken];\r\n      } else {\r\n        return [\r\n          {\r\n            message:\r\n              'Fetch credentials: Unable to find ContensisSecurityRefreshToken',\r\n          },\r\n        ];\r\n      }\r\n    } else {\r\n      return [\r\n        {\r\n          message: `Fetch credentials error: ${response.status} ${response.statusText}`,\r\n        },\r\n      ];\r\n    }\r\n  }\r\n\r\n  static isZengentiStaff(email) {\r\n    const emailRefs = ['@zengenti', '@contensis'];\r\n\r\n    return emailRefs.some(emailRef => {\r\n      if (email.includes(emailRef)) {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Map } from 'immutable';\r\nimport { takeEvery, select, put, call } from 'redux-saga/effects';\r\nimport {\r\n  SET_AUTHENTICATION_STATE,\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  VALIDATE_USER,\r\n} from '../types';\r\nimport {\r\n  selectUserIsAuthenticated,\r\n  selectClientCredentials,\r\n  selectUserGroups,\r\n} from '../selectors';\r\n\r\nimport { setRoute } from '~/core/redux/actions/routing';\r\nimport { selectCurrentSearch } from '~/core/redux/selectors/routing';\r\nimport { getManagementApiClient } from '~/core/util/ContensisManagementApi';\r\nimport { findContentTypeMapping } from '~/core/util/helpers';\r\nimport { queryParams } from '~/core/util/navigation';\r\nimport mapClientCredentials from '../../transformations/mapClientCredentials';\r\nimport { LoginHelper } from '../../util/LoginHelper.class';\r\nimport { matchUserGroup } from '../../util/matchGroups';\r\n\r\nexport const loginSagas = [\r\n  takeEvery(LOGIN_USER, loginUserSaga),\r\n  takeEvery(LOGOUT_USER, logoutUserSaga),\r\n  takeEvery(VALIDATE_USER, validateUserSaga),\r\n  takeEvery(SET_AUTHENTICATION_STATE, redirectAfterSuccessfulLoginSaga),\r\n];\r\n\r\nexport function* handleRequiresLoginSaga(action) {\r\n  const {\r\n    entry,\r\n    requireLogin,\r\n    routes: { ContentTypeMappings },\r\n    staticRoute,\r\n  } = action;\r\n  let userLoggedIn = yield select(selectUserIsAuthenticated);\r\n\r\n  // Check for a securityToken in querystring\r\n  const currentQs = queryParams(yield select(selectCurrentSearch));\r\n  const securityToken = currentQs.securityToken || currentQs.securitytoken;\r\n\r\n  // Check if any of the defined routes have \"requireLogin\" attribute\r\n  const { requireLogin: authRoute } = (staticRoute && staticRoute.route) || {};\r\n  const { requireLogin: authContentType } =\r\n    (entry &&\r\n      findContentTypeMapping(ContentTypeMappings, entry.sys.contentTypeId)) ||\r\n    {};\r\n\r\n  // If requireLogin, authRoute or authContentType has been specified as an\r\n  // array of groups we can merge all the arrays and match on any group supplied\r\n  const routeRequiresGroups = [\r\n    ...((Array.isArray(authContentType) && authContentType) || []),\r\n    ...((Array.isArray(authRoute) && authRoute) || []),\r\n    ...((Array.isArray(requireLogin) && requireLogin) || []),\r\n  ];\r\n  const routeRequiresLogin = !!authContentType || !!authRoute || !!requireLogin;\r\n\r\n  if (!userLoggedIn) {\r\n    // If cookies or securityToken are found on any route change\r\n    // always validate and login the user\r\n    if (routeRequiresLogin) {\r\n      // If routeRequiresLogin do a blocking call that returns userLoggedIn\r\n      userLoggedIn = yield call(validateUserSaga, { securityToken });\r\n    }\r\n    // otherwise do a non blocking put to handle validation in the background\r\n    else yield put({ type: VALIDATE_USER, securityToken });\r\n  }\r\n\r\n  if (routeRequiresLogin) {\r\n    // If a security token is in the querystring and we are not already\r\n    // logged in something is wrong and we won't bother going on another redirect loop\r\n    if (!userLoggedIn && !securityToken) {\r\n      LoginHelper.ClientRedirectToSignInPage(action.location.pathname);\r\n    } else if (routeRequiresGroups.length > 0) {\r\n      const userGroups = (yield select(selectUserGroups)).toJS();\r\n      const groupMatch = matchUserGroup(userGroups, routeRequiresGroups);\r\n\r\n      if (!groupMatch)\r\n        LoginHelper.ClientRedirectToAccessDeniedPage(action.location.pathname);\r\n    }\r\n  }\r\n}\r\n\r\nfunction* validateUserSaga({ securityToken }) {\r\n  if (securityToken) {\r\n    // If we have just a security token we will call a CMS endpoint\r\n    // and provide us with a RefreshToken cookie we can use during login\r\n    const [\r\n      error,\r\n      refreshToken,\r\n    ] = yield LoginHelper.GetCredentialsForSecurityToken(securityToken);\r\n    if (refreshToken)\r\n      LoginHelper.SetLoginCookies({\r\n        contensisClassicToken: securityToken,\r\n        refreshToken,\r\n      });\r\n    if (error)\r\n      yield put({\r\n        type: SET_AUTHENTICATION_STATE,\r\n        authenticationState: {\r\n          error: { message: error.message, stack: error.stack },\r\n        },\r\n      });\r\n  }\r\n\r\n  // Check for refreshToken in cookies\r\n  const clientCredentials = LoginHelper.GetCachedCredentials();\r\n\r\n  // Log the user in if a refreshToken is found\r\n  if (clientCredentials.refreshToken)\r\n    yield call(loginUserSaga, { clientCredentials });\r\n\r\n  // Tell any callers have we successfully logged in?\r\n  return yield select(selectUserIsAuthenticated);\r\n}\r\n\r\nfunction* loginUserSaga(action = {}) {\r\n  const { username, password, clientCredentials } = action;\r\n\r\n  // If a WSFED_LOGIN site has dispatched the loginUser action\r\n  // just redirect them to the Identity Provider sign in\r\n  if (action.type === LOGIN_USER && LoginHelper.WSFED_LOGIN)\r\n    LoginHelper.ClientRedirectToSignInPage();\r\n\r\n  const { authenticationState, user } = yield LoginHelper.LoginUser({\r\n    username,\r\n    password,\r\n    clientCredentials,\r\n  });\r\n\r\n  yield put({\r\n    type: SET_AUTHENTICATION_STATE,\r\n    authenticationState,\r\n    user,\r\n  });\r\n}\r\n\r\nfunction* redirectAfterSuccessfulLoginSaga() {\r\n  const isLoggedIn = yield select(selectUserIsAuthenticated);\r\n  const redirectPath = queryParams(yield select(selectCurrentSearch))\r\n    .redirect_uri;\r\n\r\n  if (isLoggedIn && redirectPath) {\r\n    yield put(setRoute(redirectPath));\r\n  }\r\n}\r\n\r\nfunction* logoutUserSaga({ redirectPath }) {\r\n  yield put({\r\n    type: SET_AUTHENTICATION_STATE,\r\n    user: null,\r\n  });\r\n  yield LoginHelper.LogoutUser(redirectPath);\r\n}\r\n\r\nexport function* refreshSecurityToken() {\r\n  const clientCredentials = (\r\n    (yield select(selectClientCredentials)) || Map()\r\n  ).toJS();\r\n  if (Object.keys(clientCredentials).length > 0) {\r\n    const client = getManagementApiClient(clientCredentials);\r\n    yield client.authenticate();\r\n\r\n    const authenticationState = {};\r\n\r\n    const newClientCredentials = mapClientCredentials(client);\r\n\r\n    authenticationState.clientCredentials = newClientCredentials;\r\n\r\n    yield put({\r\n      type: SET_AUTHENTICATION_STATE,\r\n      authenticationState,\r\n    });\r\n  }\r\n}\r\n"],"names":["fromJSOrdered","js","Array","isArray","Seq","map","toList","toOrderedMap","ACTION_PREFIX","VALIDATE_USER","SET_AUTHENTICATION_STATE","LOGIN_USER","LOGIN_SUCCESSFUL","LOGIN_FAILED","LOGOUT_USER","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","defaultAuthenticationState","Map","authenticated","authenticationError","clientCredentials","error","loading","initialUserState","authenticationState","groups","List","state","action","type","toJS","user","name","firstName","lastName","isZengentiStaff","email","includes","nextState","getIn","set","get","setIn","getManagementApiClient","bearerToken","bearerTokenExpiryDate","refreshToken","refreshTokenExpiryDate","contensisClassicToken","username","password","rootUrl","SERVERS","api","cms","projectId","PROJECTS","id","config","clientType","clientDetails","client","Client","create","toISOString","obj","mapJson","COOKIE_VALID_DAYS","_cookie","Cookies","withConverter","read","value","decodeURIComponent","write","encodeURIComponent","CookieHelper","GetCookie","cookie","SetCookie","maxAgeDays","expires","DeleteCookie","remove","context","window","global","requireOidc","process","env","NODE_ENV","WSFED_LOGIN","servers","userManagerConfig","authority","client_id","redirect_uri","location","toString","post_logout_redirect_uri","response_type","scope","filterProtocolClaims","createUserManager","UserManager","require","e","userManager","LOGIN_COOKIE","REFRESH_TOKEN_COOKIE","LoginHelper","SetLoginCookies","GetCachedCredentials","ClearCachedCredentials","LoginUser","credentials","transientClient","loginError","clientBearerToken","to","ensureBearerToken","mapClientCredentials","userDetails","GetUserDetails","message","stack","LogoutUser","redirectPath","WsFedLogout","ClientRedirectToPath","ClientRedirectToSignInPage","ClientRedirectToHome","url","search","hash","href","WsFedLogin","LOGIN_ROUTE","replace","ClientRedirectToAccessDeniedPage","originalPath","ACCESS_DENIED_ROUTE","redirectUri","signinRedirect","fetch","CMS_URL","GetCredentialsForSecurityToken","securityToken","response","method","headers","Accept","body","JSON","stringify","ok","parseError","json","LogonResult","ApplicationData","data","length","Key","Value","undefined","status","statusText","emailRefs","some","emailRef","groupsResult","security","users","getCurrent","getUserGroups","userId","includeInherited","items","loginSagas","takeEvery","loginUserSaga","logoutUserSaga","validateUserSaga","redirectAfterSuccessfulLoginSaga","handleRequiresLoginSaga","entry","requireLogin","routes","ContentTypeMappings","staticRoute","userLoggedIn","select","selectUserIsAuthenticated","currentQs","queryParams","selectCurrentSearch","securitytoken","authRoute","route","authContentType","findContentTypeMapping","sys","contentTypeId","routeRequiresGroups","routeRequiresLogin","call","put","pathname","userGroups","selectUserGroups","groupMatch","matchUserGroup","isLoggedIn","setRoute","refreshSecurityToken","selectClientCredentials","Object","keys","authenticate","newClientCredentials"],"mappings":"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"}