{"version":3,"file":"search.js","sources":["../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/search/ToJs.tsx","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/redux/types.ts","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/redux/actions.ts","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/models/Enums.ts","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/redux/selectors.ts","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/containers/withSearch.tsx","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/containers/withListing.tsx","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/search/ContensisDeliveryApi.js","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/search/performance.ts","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/search/util.ts","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/search/schema.ts","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/search/expressions.ts","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/redux/queries.ts","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/transformations/state-to-searchuri.ts","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/transformations/searchresult-to-state.mapper.ts","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/transformations/filters-to-filterexpression.mapper.js","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/transformations/filters-to-filterexpression.js","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/transformations/state-to-queryparams.mapper.ts","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/redux/util.ts","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/transformations/entry-to-filteritem.mapper.js","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/redux/sagas.ts","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/hooks/useMinilist.hook.tsx","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/redux/schema.ts","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/redux/reducers.ts","../../../node_modules/zengenti-search-package/src/app/zengenti-search-package/index.ts"],"sourcesContent":["/* eslint-disable react/display-name */\r\n/* eslint-disable @typescript-eslint/naming-convention */\r\nimport React from 'react';\r\n\r\nexport const toJS =\r\n  <Props extends { [key: string]: any }>(\r\n    WrappedComponent: React.ComponentType<Props>\r\n  ): React.ComponentType<Props> =>\r\n  (wrappedComponentProps: Props) => {\r\n    const KEY = 0;\r\n    const VALUE = 1;\r\n\r\n    const propsJS = Object.entries(wrappedComponentProps).reduce<Props>(\r\n      (newProps: any, wrappedComponentProp) => {\r\n        const propKey = wrappedComponentProp[KEY];\r\n        const propValue = wrappedComponentProp[VALUE];\r\n        newProps[propKey] =\r\n          propValue && typeof propValue === 'object' && 'toJS' in propValue\r\n            ? propValue.toJS()\r\n            : propValue;\r\n        return newProps as Props;\r\n      },\r\n      {} as Props\r\n    );\r\n\r\n    return <WrappedComponent {...propsJS} />;\r\n  };\r\n","const ACTION_PREFIX = '@SEARCH/';\r\nexport const APPLY_CONFIG = `${ACTION_PREFIX}APPLY_CONFIG`;\r\nexport const CLEAR_FILTERS = `${ACTION_PREFIX}CLEAR_FILTERS`;\r\nexport const DO_SEARCH = `${ACTION_PREFIX}DO_SEARCH`;\r\nexport const EXECUTE_SEARCH = `${ACTION_PREFIX}EXECUTE_SEARCH`;\r\nexport const EXECUTE_SEARCH_ERROR = `${ACTION_PREFIX}EXECUTE_SEARCH_ERROR`;\r\nexport const EXECUTE_SEARCH_PRELOAD = `${ACTION_PREFIX}EXECUTE_SEARCH_PRELOAD`;\r\nexport const LOAD_FILTERS = `${ACTION_PREFIX}LOAD_FILTERS`;\r\nexport const LOAD_FILTERS_COMPLETE = `${ACTION_PREFIX}LOAD_FILTERS_COMPLETE`;\r\nexport const LOAD_FILTERS_ERROR = `${ACTION_PREFIX}LOAD_FILTERS_ERROR`;\r\nexport const SET_FEATURED_ENTRIES = `${ACTION_PREFIX}SET_FEATURED_ENTRIES`;\r\nexport const SET_ROUTE_FILTERS = `${ACTION_PREFIX}SET_ROUTE_FILTERS`;\r\nexport const SET_SEARCH_FILTERS = `${ACTION_PREFIX}SET_SEARCH_FILTERS`;\r\nexport const SET_SEARCH_ENTRIES = `${ACTION_PREFIX}SET_SEARCH_ENTRIES`;\r\nexport const SET_SELECTED_FILTER = `${ACTION_PREFIX}SET_SELECTED_FILTER`;\r\nexport const UPDATE_CURRENT_FACET = `${ACTION_PREFIX}UPDATE_CURRENT_FACET`;\r\nexport const UPDATE_CURRENT_TAB = `${ACTION_PREFIX}UPDATE_CURRENT_TAB`;\r\nexport const UPDATE_SORT_ORDER = `${ACTION_PREFIX}UPDATE_SORT_ORDER`;\r\nexport const UPDATE_PAGE_INDEX = `${ACTION_PREFIX}UPDATE_PAGE_INDEX`;\r\nexport const UPDATE_SEARCH_TERM = `${ACTION_PREFIX}UPDATE_SEARCH_TERM`;\r\nexport const UPDATE_SELECTED_FILTERS = `${ACTION_PREFIX}UPDATE_SELECTED_FILTERS`;\r\n","import {\r\n  CLEAR_FILTERS,\r\n  SET_ROUTE_FILTERS,\r\n  UPDATE_PAGE_INDEX,\r\n  UPDATE_SELECTED_FILTERS,\r\n  UPDATE_CURRENT_FACET,\r\n  UPDATE_CURRENT_TAB,\r\n  UPDATE_SEARCH_TERM,\r\n  UPDATE_SORT_ORDER,\r\n  DO_SEARCH,\r\n} from './types';\r\nimport { Mappers } from '../models/Search';\r\nimport {\r\n  ClearFiltersActionCreator,\r\n  InitListingActionCreator,\r\n  TriggerSearchActionCreator,\r\n} from '../models/SearchActions';\r\n\r\nexport const withMappers = <T>(action: T, mappers: Mappers) => {\r\n  return { ...action, mappers };\r\n};\r\n\r\n// export const withMappers2 = (actionFunc, args, mappers) => {\r\n//   return () => ({ ...actionFunc(args), mappers });\r\n// };\r\n\r\nexport const triggerSearch: TriggerSearchActionCreator = ({\r\n  config,\r\n  context,\r\n  debug,\r\n  defaultLang,\r\n  excludeIds,\r\n  facet,\r\n  mapper,\r\n  params,\r\n}) => {\r\n  return {\r\n    type: DO_SEARCH,\r\n    config,\r\n    context,\r\n    debug,\r\n    defaultLang,\r\n    excludeIds,\r\n    facet,\r\n    mapper,\r\n    params,\r\n  };\r\n};\r\n\r\nexport const initListing: InitListingActionCreator = ({\r\n  context,\r\n  facet,\r\n  mapper,\r\n  params,\r\n}) => {\r\n  return {\r\n    type: SET_ROUTE_FILTERS,\r\n    context,\r\n    facet,\r\n    mapper,\r\n    params,\r\n  };\r\n};\r\n\r\nexport const navigate = (path: string, state?: any) => {\r\n  return {\r\n    type: '@ROUTING/_SET_ROUTE',\r\n    path,\r\n    state,\r\n  };\r\n};\r\n\r\nexport const clearFilters: ClearFiltersActionCreator = () => {\r\n  return {\r\n    type: CLEAR_FILTERS,\r\n  };\r\n};\r\n\r\nexport const updatePageIndex = (pageIndex: number) => {\r\n  return {\r\n    type: UPDATE_PAGE_INDEX,\r\n    pageIndex,\r\n  };\r\n};\r\n\r\nexport const updateCurrentFacet = (facet: string) => {\r\n  return {\r\n    type: UPDATE_CURRENT_FACET,\r\n    facet,\r\n  };\r\n};\r\n\r\nexport const updateCurrentTab = (id: number) => {\r\n  return {\r\n    type: UPDATE_CURRENT_TAB,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const updateSearchTerm = (term: string) => {\r\n  return {\r\n    type: UPDATE_SEARCH_TERM,\r\n    term,\r\n  };\r\n};\r\n\r\nexport const updateSelectedFilters = (filter: string, key: string) => {\r\n  return {\r\n    type: UPDATE_SELECTED_FILTERS,\r\n    filter,\r\n    key,\r\n  };\r\n};\r\n\r\nexport const updateSortOrder = (orderBy: string, facet?: string) => {\r\n  return {\r\n    type: UPDATE_SORT_ORDER,\r\n    orderBy,\r\n    facet,\r\n  };\r\n};\r\n","export enum Context {\r\n  facets = 'facets',\r\n  listings = 'listings',\r\n  minilist = 'minilist',\r\n}\r\n// export type Context = 'facets' | 'listings' | 'minilist';\r\n","import { List, Map, OrderedMap, Set } from 'immutable';\r\nimport { Entry } from 'contensis-delivery-api/lib/models';\r\n\r\nimport { Context } from '../models/Enums';\r\nimport { Listing } from '../models/Search';\r\nimport { AppState, Tab } from '../models/SearchState';\r\nimport {\r\n  filtering,\r\n  filterItem,\r\n  initialState,\r\n  searchFacet,\r\n  searchTab,\r\n} from './schema';\r\n\r\nexport const getSearchContext = (state: AppState): Context =>\r\n  state.getIn(['search', 'context'], Context.facets);\r\n\r\nexport const getCurrent = (\r\n  state: Map<'search', typeof initialState>,\r\n  context = Context.facets\r\n) =>\r\n  context === Context.facets\r\n    ? getCurrentFacet(state)\r\n    : getCurrentListing(state);\r\n\r\nexport const getCurrentFacet = (state: AppState): string =>\r\n  state.getIn(['search', 'currentFacet']);\r\n\r\nexport const getCurrentListing = (state: AppState): string =>\r\n  state.getIn(['search', 'currentListing']);\r\n\r\nexport const getCurrentTab = (state: AppState): Map<string, Tab[keyof Tab]> =>\r\n  state.getIn(['search', Context.facets, getCurrentFacet(state), 'tabId'], 0);\r\n\r\nexport const getFacets = (\r\n  state: AppState\r\n): OrderedMap<string, typeof searchFacet> =>\r\n  state.getIn(['search', Context.facets], OrderedMap());\r\n\r\nexport const getTabFacets = (state: AppState) =>\r\n  getFacets(state).filter(\r\n    (v, key) =>\r\n      getFacets(state).getIn([key, 'tabId'], 0) === getCurrentTab(state)\r\n  ) as OrderedMap<string, typeof searchFacet>;\r\n\r\nexport const getFacetTitles = (state: AppState) =>\r\n  getFacets(state)\r\n    .map((facet = Map(), key) => ({\r\n      key,\r\n      title: facet.get('title') as string | undefined,\r\n      totalCount: facet.getIn(['pagingInfo', 'totalCount']) as number,\r\n    }))\r\n    .toIndexedSeq()\r\n    .toArray();\r\n\r\nexport const getFacet = (\r\n  state: AppState,\r\n  facetName = '',\r\n  context = Context.facets\r\n) => {\r\n  const currentFacet = facetName || getCurrentFacet(state);\r\n  return state.getIn(['search', context, currentFacet], Map());\r\n};\r\n\r\nexport const getListing = (\r\n  state: AppState,\r\n  listing = ''\r\n): Map<string, Listing[keyof Listing]> => {\r\n  const currentListing = listing || getCurrentListing(state);\r\n  return state.getIn(['search', Context.listings, currentListing], Map());\r\n};\r\n\r\nexport const getFilters = (\r\n  state: AppState,\r\n  facet: string,\r\n  context = Context.facets\r\n): Map<string, typeof filtering> => {\r\n  return state.getIn(\r\n    ['search', context, facet || getCurrent(state, context), 'filters'],\r\n    Map()\r\n  );\r\n};\r\n\r\nexport const getRenderableFilters = (\r\n  state: AppState,\r\n  facet = '',\r\n  context = Context.facets\r\n) =>\r\n  getFilters(state, facet, context).filter(\r\n    (f = Map()) => f.get('renderable', true) as boolean\r\n  );\r\n\r\nexport const getFiltersToLoad = (\r\n  state: AppState,\r\n  facet: string,\r\n  context = Context.facets\r\n) => {\r\n  const filters = getFilters(state, facet, context);\r\n  const loadedFilters = filters.map(\r\n    (f = Map()) =>\r\n      ((f.get('items') || List()) as List<typeof filterItem>).filter(i => {\r\n        const title = i?.get('title');\r\n        return typeof title !== 'undefined' && !!title;\r\n      }).size > 0 && f.get('isError', false) === false\r\n  );\r\n  return loadedFilters\r\n    .map((isLoaded, filterKey) => (!isLoaded ? filterKey : null))\r\n    .toList()\r\n    .filter(f => !!f);\r\n};\r\n\r\n// We lowercase the filter key unless it's an ISO date string where the T must be uppercase\r\nexport const getSelectedFilters = (\r\n  state: AppState,\r\n  facet = '',\r\n  context = Context.facets\r\n) => {\r\n  const filters = getFilters(state, facet, context);\r\n  const isoDateRegex = RegExp(/\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d/);\r\n\r\n  const selectedFilters = filters.map((filter = Map()) =>\r\n    (\r\n      (filter.get('items') as List<typeof filterItem>) ||\r\n      List<typeof filterItem>()\r\n    )\r\n      .filter(item => !!item?.get('isSelected', false))\r\n      .map(item => {\r\n        const key = item?.get('key', '') as string;\r\n        const isIsoDate = isoDateRegex.test(key);\r\n        return isIsoDate ? key : key.toLowerCase();\r\n      })\r\n  );\r\n  return selectedFilters as Map<string, List<string>>;\r\n};\r\n\r\nexport const getResults = (\r\n  state: AppState,\r\n  current = '',\r\n  context = Context.facets\r\n) => {\r\n  return state.getIn(\r\n    ['search', context, current || getCurrent(state, context), 'results'],\r\n    List()\r\n  ) as List<any>;\r\n};\r\n\r\nexport const getIsInternalPaging = (\r\n  state: AppState,\r\n  current: string,\r\n  context = Context.facets\r\n) => {\r\n  return state.getIn(\r\n    [\r\n      'search',\r\n      context,\r\n      current || getCurrent(state, context),\r\n      'queryParams',\r\n      'internalPaging',\r\n    ],\r\n    false\r\n  );\r\n};\r\n\r\nexport const getIsLoaded = (\r\n  state: AppState,\r\n  context = Context.facets,\r\n  facet?: string\r\n) => {\r\n  return !!state.getIn(\r\n    ['search', context, facet || getCurrent(state, context), 'queryDuration'],\r\n    0\r\n  );\r\n};\r\n\r\nexport const getIsLoading = (\r\n  state: AppState,\r\n  context = Context.facets,\r\n  facet?: string\r\n) => {\r\n  return state.getIn([\r\n    'search',\r\n    context,\r\n    facet || getCurrent(state, context),\r\n    'entries',\r\n    'isLoading',\r\n  ]);\r\n};\r\n\r\nexport const getIsSsr = (state: AppState): boolean => {\r\n  return state.getIn(['search', 'config', 'ssr'], false);\r\n};\r\n\r\nexport const getFeaturedResults = (\r\n  state: AppState,\r\n  current = '',\r\n  context = Context.facets\r\n) => {\r\n  return state.getIn(\r\n    [\r\n      'search',\r\n      context,\r\n      current || getCurrent(state, context),\r\n      'featuredResults',\r\n    ],\r\n    List()\r\n  );\r\n};\r\n\r\nexport const getPaging = (\r\n  state: AppState,\r\n  current = '',\r\n  context = Context.facets\r\n) => {\r\n  return state.getIn(\r\n    ['search', context, current || getCurrent(state, context), 'pagingInfo'],\r\n    Map()\r\n  );\r\n};\r\n\r\nexport const getPageIndex = (\r\n  state: AppState,\r\n  current = '',\r\n  context = Context.facets\r\n): number => {\r\n  return state.getIn([\r\n    'search',\r\n    context,\r\n    current || getCurrent(state, context),\r\n    'pagingInfo',\r\n    'pageIndex',\r\n  ]);\r\n};\r\n\r\nexport const getPrevPageIndex = (\r\n  state: AppState,\r\n  current = '',\r\n  context = Context.facets\r\n) => {\r\n  return state.getIn([\r\n    'search',\r\n    context,\r\n    current || getCurrent(state, context),\r\n    'pagingInfo',\r\n    'prevPageIndex',\r\n  ]);\r\n};\r\nexport const getPageIsLoading = (\r\n  state: AppState,\r\n  current = '',\r\n  context = Context.facets\r\n) => {\r\n  return state.getIn([\r\n    'search',\r\n    context,\r\n    current || getCurrent(state, context),\r\n    'pagingInfo',\r\n    'isLoading',\r\n  ]);\r\n};\r\n\r\nexport const getPagesLoaded = (\r\n  state: AppState,\r\n  current = '',\r\n  context = Context.facets\r\n) => {\r\n  return state.getIn(\r\n    [\r\n      'search',\r\n      context,\r\n      current || getCurrent(state, context),\r\n      'pagingInfo',\r\n      'pagesLoaded',\r\n    ],\r\n    Set()\r\n  );\r\n};\r\n\r\nexport const getTotalCount = (\r\n  state: AppState,\r\n  current = '',\r\n  context = Context.facets\r\n) => {\r\n  return state.getIn([\r\n    'search',\r\n    context,\r\n    current || getCurrent(state, context),\r\n    'pagingInfo',\r\n    'totalCount',\r\n  ]);\r\n};\r\n\r\nexport const getFacetAuthentication = (state: AppState, facet: string) =>\r\n  state.getIn(['search', Context.facets, facet, 'authentication']);\r\n\r\nexport const getFeaturedEntryIds = (state: AppState) => {\r\n  const currentFacet = getCurrentFacet(state);\r\n  const entryIds = (\r\n    state.getIn([\r\n      'search',\r\n      Context.facets,\r\n      currentFacet,\r\n      'featuredEntries',\r\n      'items',\r\n    ]) as Map<string, Entry[keyof Entry]>\r\n  ).map(entry => entry.getIn(['sys', 'id']) as string);\r\n  return entryIds;\r\n};\r\n\r\nexport const getSearchTerm = (state: AppState) =>\r\n  state.getIn(['search', 'term']);\r\n\r\nexport const getSearchTabs = (state: AppState): List<typeof searchTab> =>\r\n  state.getIn(['search', 'tabs']);\r\n\r\nexport const getQueryParams = (\r\n  state: AppState,\r\n  current = '',\r\n  context = Context.facets\r\n) => {\r\n  return state.getIn(\r\n    ['search', context, current || getCurrent(state, context), 'queryParams'],\r\n    Map()\r\n  ) as Map<string, any>;\r\n};\r\n\r\nexport const getQueryParameter = (\r\n  {\r\n    state,\r\n    facet,\r\n    context = Context.facets,\r\n  }: { state: AppState; facet?: string; context?: Context },\r\n  key: string,\r\n  ifnull: any = null\r\n) => {\r\n  return getQueryParams(state, facet, context).get(key, ifnull) || ifnull;\r\n};\r\n\r\nexport const getCustomApi = (\r\n  state: AppState,\r\n  current: string,\r\n  context = Context.facets\r\n) => {\r\n  return state.getIn([\r\n    'search',\r\n    context,\r\n    current || getCurrent(state, context),\r\n    'customApi',\r\n  ]);\r\n};\r\n\r\nexport const getCustomEnv = (\r\n  state: AppState,\r\n  current: string,\r\n  context = Context.facets\r\n) => {\r\n  return state.getIn([\r\n    'search',\r\n    context,\r\n    current || getCurrent(state, context),\r\n    'env',\r\n  ]);\r\n};\r\n\r\nexport const getTabsAndFacets = (state: AppState) => {\r\n  const tabs = getSearchTabs(state);\r\n  const facets = getFacets(state);\r\n\r\n  return (tabs || List()).map((tab = Map()) => {\r\n    const fieldsToCount = tab.get('totalCount');\r\n    let countFields: List<List<string>>;\r\n\r\n    if (typeof fieldsToCount === 'string')\r\n      countFields = List([List([fieldsToCount])]);\r\n\r\n    const thisTabFacets = facets.filter(\r\n      (v, key) => facets.getIn([key, 'tabId'], 0) === tab.get('id')\r\n    ) as OrderedMap<string, typeof searchFacet>;\r\n\r\n    const thisTabTotal = thisTabFacets\r\n      .map((facet = Map(), facetName) => {\r\n        if (\r\n          !countFields ||\r\n          countFields.find((f = List()) => f.first() === facetName)\r\n        )\r\n          return facet.getIn(['pagingInfo', 'totalCount']);\r\n        return 0;\r\n      })\r\n      .reduce((a, b) => a + b, 0);\r\n\r\n    return tab\r\n      .set(Context.facets, thisTabFacets)\r\n      .set('totalCount', thisTabTotal);\r\n  });\r\n};\r\n\r\nexport const getSearchTotalCount = (state: AppState) => {\r\n  const tabsAndFacets = getTabsAndFacets(state);\r\n  const wholeSearchTotal = tabsAndFacets\r\n    .map((t = Map()) => t.get('totalCount'))\r\n    .reduce((a: any, b: any) => a + b, 0);\r\n  return wholeSearchTotal;\r\n};\r\n\r\nexport const getFacetsTotalCount = (state: AppState) => {\r\n  const facets = getFacets(state);\r\n  const wholeSearchTotal = facets\r\n    .map((t = Map()) => t.getIn(['pagingInfo', 'totalCount']))\r\n    .reduce((a, b) => a + b, 0);\r\n  return wholeSearchTotal;\r\n};\r\n\r\n// An exported copy of the relevant selectors scoped by default to a facets context\r\nexport const selectFacets = {\r\n  getCurrent: getCurrentFacet,\r\n  getCurrentTab,\r\n  getCustomApi,\r\n  getCustomEnv,\r\n  getFacet,\r\n  getFacetTitles,\r\n  getFacets,\r\n  getFacetsTotalCount,\r\n  getFeaturedResults,\r\n  getFilters,\r\n  getFiltersToLoad,\r\n  getIsLoaded,\r\n  getIsLoading,\r\n  getPageIndex,\r\n  getPageIsLoading,\r\n  getPagesLoaded,\r\n  getPaging,\r\n  getQueryParams: (state: AppState, facet: string) =>\r\n    getQueryParams(state, facet, Context.facets),\r\n  getQueryParameter: (\r\n    { state, facet }: { state: AppState; facet: string },\r\n    key: string,\r\n    ifnull: any\r\n  ) =>\r\n    getQueryParameter({ state, facet, context: Context.facets }, key, ifnull),\r\n  getRenderableFilters,\r\n  getResults,\r\n  getTabFacets,\r\n  getTabsAndFacets,\r\n  getTotalCount,\r\n  getSearchTabs,\r\n  getSearchTerm,\r\n  getSearchTotalCount,\r\n  getSelectedFilters,\r\n};\r\n\r\n// An exported copy of the relevant selectors pre-scoped to a listing context\r\nexport const selectListing = {\r\n  getCurrent: getCurrentListing,\r\n  getFeaturedResults: (state: AppState, listing = '') =>\r\n    getFeaturedResults(state, listing, Context.listings),\r\n  getFilters: (state: AppState, listing = '') =>\r\n    getFilters(state, listing, Context.listings),\r\n  getFiltersToLoad: (state: AppState, listing = '') =>\r\n    getFiltersToLoad(state, listing, Context.listings),\r\n  getListing,\r\n  getIsLoaded: (state: AppState) => getIsLoaded(state, Context.listings),\r\n  getIsLoading: (state: AppState) => getIsLoading(state, Context.listings),\r\n  getPageIndex: (state: AppState, listing = '') =>\r\n    getPageIndex(state, listing, Context.listings),\r\n  getPaging: (state: AppState, listing = '') =>\r\n    getPaging(state, listing, Context.listings),\r\n  getPageIsLoading: (state: AppState, listing = '') =>\r\n    getPageIsLoading(state, listing, Context.listings),\r\n  getPagesLoaded: (state: AppState, listing = '') =>\r\n    getPagesLoaded(state, listing, Context.listings),\r\n  getQueryParams: (state: AppState, listing = '') =>\r\n    getQueryParams(state, listing, Context.listings),\r\n  getQueryParameter: (\r\n    { state, facet }: { state: AppState; facet?: string },\r\n    key: string,\r\n    ifnull: any\r\n  ) =>\r\n    getQueryParameter({ state, facet, context: Context.listings }, key, ifnull),\r\n  getRenderableFilters: (state: AppState, listing = '') =>\r\n    getRenderableFilters(state, listing, Context.listings),\r\n  getResults: (state: AppState, listing = '') =>\r\n    getResults(state, listing, Context.listings),\r\n  getSearchTerm,\r\n  getTotalCount: (state: AppState, listing = '') =>\r\n    getTotalCount(state, listing, Context.listings),\r\n  getSelectedFilters: (state: AppState, listing = '') =>\r\n    getSelectedFilters(state, listing, Context.listings),\r\n};\r\n\r\nexport const selectCurrentPath = (state: AppState) =>\r\n  state.getIn(['routing', 'currentPath']);\r\n\r\nexport const selectVersionStatus = (state: AppState) =>\r\n  state.getIn(['version', 'contensisVersionStatus']);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { toJS } from '../search/ToJs';\r\nimport {\r\n  clearFilters,\r\n  updateCurrentFacet,\r\n  updateCurrentTab,\r\n  updatePageIndex,\r\n  updateSearchTerm,\r\n  updateSelectedFilters,\r\n  updateSortOrder,\r\n  withMappers,\r\n} from '../redux/actions';\r\nimport {\r\n  getCurrentFacet,\r\n  getCurrentTab,\r\n  getFacet,\r\n  getFacetTitles,\r\n  getFacetsTotalCount,\r\n  getFeaturedResults,\r\n  getIsLoading,\r\n  getPageIndex,\r\n  getPageIsLoading,\r\n  getPaging,\r\n  getQueryParameter,\r\n  getRenderableFilters,\r\n  getResults,\r\n  getSearchTerm,\r\n  getSearchTotalCount,\r\n  getTabFacets,\r\n  getTabsAndFacets,\r\n  getTotalCount,\r\n} from '../redux/selectors';\r\nimport { Mappers } from '../models/Search';\r\nimport { SearchProps } from '../models/SearchProps';\r\nimport { AppState } from '../models/SearchState';\r\n\r\n/* eslint-disable @typescript-eslint/naming-convention */\r\nconst withSearch =\r\n  (mappers: Mappers) =>\r\n  <Props extends Record<keyof Props, any>>(\r\n    SearchComponent: React.ComponentType<Props>\r\n  ) => {\r\n    const Wrapper: React.FC<Props & SearchProps<any>> = props => {\r\n      return <SearchComponent {...props} />;\r\n    };\r\n\r\n    Wrapper.displayName = `withSearch(${\r\n      SearchComponent.displayName || SearchComponent.name\r\n    })`;\r\n\r\n    const mapStateToProps = (state: AppState) => {\r\n      return {\r\n        currentFacet: getCurrentFacet(state),\r\n        currentPageIndex: getPageIndex(state),\r\n        currentTabIndex: getCurrentTab(state),\r\n        facet: getFacet(state),\r\n        facets: getTabFacets(state),\r\n        facetsTotalCount: getFacetsTotalCount(state),\r\n        facetTitles: getFacetTitles(state),\r\n        featuredResults: getFeaturedResults(state),\r\n        filters: getRenderableFilters(state),\r\n        isLoading: getIsLoading(state),\r\n        paging: getPaging(state),\r\n        pageIsLoading: getPageIsLoading(state),\r\n        results: getResults(state),\r\n        resultsInfo: mappers?.resultsInfo && mappers.resultsInfo(state),\r\n        searchTerm: getSearchTerm(state),\r\n        searchTotalCount: getSearchTotalCount(state),\r\n        sortOrder: getQueryParameter({ state }, 'dynamicOrderBy', []),\r\n        tabsAndFacets: getTabsAndFacets(state),\r\n        totalCount: getTotalCount(state),\r\n      };\r\n    };\r\n\r\n    const mapDispatchToProps = {\r\n      clearFilters: () => withMappers(clearFilters(), mappers),\r\n      updateCurrentFacet: (facet: string) =>\r\n        withMappers(updateCurrentFacet(facet), mappers),\r\n      updateCurrentTab: (id: number) =>\r\n        withMappers(updateCurrentTab(id), mappers),\r\n      updatePageIndex: (pageIndex: number) =>\r\n        withMappers(updatePageIndex(pageIndex), mappers),\r\n      updateSearchTerm: (term: string) =>\r\n        withMappers(updateSearchTerm(term), mappers),\r\n      updateSelectedFilters: (filter: string, key: string) =>\r\n        withMappers(updateSelectedFilters(filter, key), mappers),\r\n      updateSortOrder: (orderBy: string) =>\r\n        withMappers(updateSortOrder(orderBy), mappers),\r\n    };\r\n\r\n    const connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\n    return connector(toJS(Wrapper) as any);\r\n  };\r\n\r\nexport default withSearch;\r\n","/* eslint-disable @typescript-eslint/naming-convention */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toJS } from '../search/ToJs';\r\nimport {\r\n  clearFilters,\r\n  updateCurrentFacet,\r\n  updatePageIndex,\r\n  updateSearchTerm,\r\n  updateSelectedFilters,\r\n  updateSortOrder,\r\n  withMappers,\r\n} from '../redux/actions';\r\nimport { selectListing } from '../redux/selectors';\r\nimport { Mappers } from '../models/Search';\r\nimport { AppState } from '../models/SearchState';\r\nimport { ListingProps } from '../models/SearchProps';\r\n\r\nconst withListing =\r\n  (mappers: Mappers) =>\r\n  <Props extends Record<keyof Props, any>>(\r\n    ListingComponent: React.FC<Props>\r\n  ) => {\r\n    const Wrapper: React.FC<Props & ListingProps<any>> = props => {\r\n      return <ListingComponent {...props} />;\r\n    };\r\n\r\n    Wrapper.displayName = `withListing(${\r\n      ListingComponent.displayName || ListingComponent.name\r\n    })`;\r\n\r\n    const {\r\n      getCurrent,\r\n      getFeaturedResults,\r\n      getIsLoading,\r\n      getListing,\r\n      getPageIndex,\r\n      getPaging,\r\n      getQueryParameter,\r\n      getRenderableFilters,\r\n      getResults,\r\n      getSearchTerm,\r\n    } = selectListing;\r\n\r\n    const mapStateToProps = (state: AppState) => {\r\n      return {\r\n        currentListing: getCurrent(state),\r\n        currentPageIndex: getPageIndex(state),\r\n        listing: getListing(state),\r\n        featured: getFeaturedResults(state),\r\n        filters: getRenderableFilters(state),\r\n        isLoading: getIsLoading(state),\r\n        paging: getPaging(state),\r\n        results: getResults(state),\r\n        resultsInfo:\r\n          mappers &&\r\n          typeof mappers.resultsInfo === 'function' &&\r\n          mappers.resultsInfo(state),\r\n        searchTerm: getSearchTerm(state),\r\n        sortOrder: getQueryParameter({ state }, 'dynamicOrderBy', []),\r\n      };\r\n    };\r\n\r\n    const mapDispatchToProps = {\r\n      clearFilters: () => withMappers(clearFilters(), mappers),\r\n      updateCurrentFacet: (facet: string) =>\r\n        withMappers(updateCurrentFacet(facet), mappers),\r\n      updatePageIndex: (pageIndex: number) =>\r\n        withMappers(updatePageIndex(pageIndex), mappers),\r\n      updateSearchTerm: (term: string) =>\r\n        withMappers(updateSearchTerm(term), mappers),\r\n      updateSelectedFilters: (filter: string, key: string) =>\r\n        withMappers(updateSelectedFilters(filter, key), mappers),\r\n      updateSortOrder: (orderBy: string) =>\r\n        withMappers(updateSortOrder(orderBy), mappers),\r\n    };\r\n\r\n    return connect(mapStateToProps, mapDispatchToProps)(toJS(Wrapper) as any);\r\n  };\r\n\r\nexport default withListing;\r\n","import { Client } from 'contensis-delivery-api';\r\n\r\nconst getClientConfig = (project, env) => {\r\n  let config = DELIVERY_API_CONFIG; /* global DELIVERY_API_CONFIG */\r\n  if (project) {\r\n    config.projectId = project;\r\n  }\r\n\r\n  if (\r\n    typeof window != 'undefined' &&\r\n    PROXY_DELIVERY_API /* global PROXY_DELIVERY_API */\r\n  ) {\r\n    // ensure a relative url is used to bypass the need for CORS (separate OPTIONS calls)\r\n    config.rootUrl = env || '';\r\n    config.responseHandler = {\r\n      404: () => null,\r\n    };\r\n  }\r\n  return config;\r\n};\r\nexport * from 'contensis-delivery-api';\r\n\r\n// This should only be executed on the client as it relies on the window.\r\nexport const GetClientSideDeliveryApiStatus = () => {\r\n  if (typeof window != 'undefined') {\r\n    const currentHostname = window.location.hostname;\r\n    return GetDeliveryApiStatusFromHostname(currentHostname);\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const GetDeliveryApiStatusFromHostname = currentHostname => {\r\n  if (currentHostname.indexOf('localhost') > -1) return 'latest';\r\n\r\n  if (currentHostname.endsWith('contensis.cloud')) {\r\n    if (currentHostname.indexOf('preview.') > -1) {\r\n      return 'latest';\r\n    } else {\r\n      return 'published';\r\n    }\r\n  }\r\n\r\n  if (currentHostname.endsWith('cloud.contensis.com')) {\r\n    if (currentHostname.indexOf('preview-') > -1) {\r\n      return 'latest';\r\n    } else {\r\n      return 'published';\r\n    }\r\n  }\r\n\r\n  return 'published';\r\n};\r\n\r\nclass DeliveryApi {\r\n  search(query, linkDepth, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return client.entries.search(query, linkDepth || 1);\r\n  }\r\n\r\n  getClient(deliveryApiStatus = 'published', project, env) {\r\n    const baseConfig = getClientConfig(project, env);\r\n    baseConfig.versionStatus = deliveryApiStatus;\r\n    return Client.create(baseConfig);\r\n  }\r\n  getEntry(id, linkDepth = 1, deliveryApiStatus = 'published', project, env) {\r\n    const baseConfig = getClientConfig(project, env);\r\n    baseConfig.versionStatus = deliveryApiStatus;\r\n    const client = Client.create(baseConfig);\r\n    // return client.entries.get(id, linkDepth);\r\n    return client.entries.get({ id, linkDepth });\r\n  }\r\n}\r\n\r\nexport const deliveryApi = new DeliveryApi();\r\n\r\nclass CacheNode {\r\n  constructor(key, value) {\r\n    this.key = key;\r\n    this.value = value;\r\n    this.next = null;\r\n    this.prev = null;\r\n  }\r\n}\r\n\r\nclass LruCache {\r\n  constructor(limit = 100) {\r\n    this.map = {};\r\n    this.head = null;\r\n    this.tail = null;\r\n    this.limit = limit || 100;\r\n    this.size = 0;\r\n  }\r\n\r\n  get(key) {\r\n    if (this.map[key]) {\r\n      let value = this.map[key].value;\r\n      let node = new CacheNode(key, value);\r\n      this.remove(key);\r\n      this.setHead(node);\r\n      return value;\r\n    }\r\n  }\r\n\r\n  set(key, value) {\r\n    let node = new CacheNode(key, value);\r\n    if (this.map[key]) {\r\n      this.remove(key);\r\n    } else {\r\n      if (this.size >= this.limit) {\r\n        delete this.map[this.tail.key];\r\n        this.size--;\r\n        this.tail = this.tail.prev;\r\n        this.tail.next = null;\r\n      }\r\n    }\r\n    this.setHead(node);\r\n  }\r\n\r\n  setHead(node) {\r\n    node.next = this.head;\r\n    node.prev = null;\r\n    if (this.head) {\r\n      this.head.prev = node;\r\n    }\r\n    this.head = node;\r\n    if (!this.tail) {\r\n      this.tail = node;\r\n    }\r\n    this.size++;\r\n    this.map[node.key] = node;\r\n  }\r\n\r\n  remove(key) {\r\n    let node = this.map[key];\r\n    if (node.prev) {\r\n      node.prev.next = node.next;\r\n    } else {\r\n      this.head = node.next;\r\n    }\r\n    if (node.next) {\r\n      node.next.prev = node.prev;\r\n    } else {\r\n      this.tail = node.prev;\r\n    }\r\n    delete this.map[key];\r\n    this.size--;\r\n  }\r\n}\r\n\r\nclass CachedSearch {\r\n  cache = new LruCache();\r\n  taxonomyLookup = {};\r\n\r\n  search(query, linkDepth, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      project + JSON.stringify(query) + linkDepth.toString(),\r\n      () => client.entries.search(query, linkDepth)\r\n    );\r\n  }\r\n\r\n  getTaxonomyNodeByPath(path, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`[TAXONOMY NODE] ${path}`, () =>\r\n      client.taxonomy\r\n        .getNodeByPath({ path: path, order: 'defined', childDepth: 2 })\r\n        .then(node => this.extendTaxonomyNode(node))\r\n    );\r\n  }\r\n\r\n  request(key, execute) {\r\n    if (!this.cache.get(key) || typeof window == 'undefined') {\r\n      let promise = execute();\r\n      this.cache.set(key, promise);\r\n      promise.catch(() => {\r\n        this.cache.remove(key);\r\n      });\r\n    }\r\n    return this.cache.get(key);\r\n  }\r\n\r\n  extendTaxonomyNode(node) {\r\n    let id = this.getTaxonomyId(node);\r\n    this.taxonomyLookup[id] = node.key;\r\n    return {\r\n      ...node,\r\n      id,\r\n      children: node.children\r\n        ? node.children.map(n => this.extendTaxonomyNode(n))\r\n        : null,\r\n    };\r\n  }\r\n\r\n  getTaxonomyId(node) {\r\n    if (node.key) {\r\n      let parts = node.key.split('/');\r\n      return parts[parts.length - 1];\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\nexport const cachedSearch = new CachedSearch();\r\n","export const now = () => {\r\n  if (typeof window == 'undefined') {\r\n    return Date.now();\r\n  }\r\n  return window.performance.now();\r\n};\r\n","import queryString from 'query-string';\r\nimport { Map } from 'immutable';\r\nimport { now } from './performance';\r\nimport { cachedSearch } from './ContensisDeliveryApi';\r\n\r\nimport { Entry } from 'contensis-delivery-api/lib/models';\r\nimport { PagedList, Query } from 'contensis-core-api';\r\nimport { CustomApi } from '../models/Search';\r\nimport { TimedSearchResponse } from '../models/SearchUtil';\r\n\r\nexport function fixFreeTextForElastic(s: string): string {\r\n  const illegalChars = [\r\n    '>',\r\n    '<',\r\n    '=',\r\n    '|',\r\n    '!',\r\n    '{',\r\n    '}',\r\n    '[',\r\n    ']',\r\n    '^',\r\n    '~',\r\n    '*',\r\n    '?',\r\n    ':',\r\n    '\\\\',\r\n    '/',\r\n  ];\r\n\r\n  const illegalRegEx = new RegExp(\r\n    illegalChars.map(c => '\\\\' + c).join('|'),\r\n    'g'\r\n  );\r\n  s = s.replace(illegalRegEx, '');\r\n  // s = s.replace(encodedRegEx, ''); // (m) => '\\\\\\\\' + m);\r\n\r\n  return s;\r\n}\r\n\r\nexport const timedSearch = async (\r\n  query: Query,\r\n  linkDepth = 0,\r\n  projectId?: string,\r\n  env?: string\r\n): Promise<null | TimedSearchResponse> => {\r\n  if (!query) return null;\r\n\r\n  let duration = 0;\r\n\r\n  const start = now();\r\n  const payload = (await cachedSearch.search(\r\n    query,\r\n    linkDepth,\r\n    projectId,\r\n    env\r\n  )) as PagedList<Entry>;\r\n  const end = now();\r\n\r\n  duration = end - start;\r\n\r\n  return { duration, payload };\r\n};\r\n\r\nexport const getItemsFromResult = (result?: {\r\n  duration: number;\r\n  payload: PagedList<Entry> | any[];\r\n}): Entry[] => {\r\n  const { payload } = result || {};\r\n  if (payload) {\r\n    if (Array.isArray(payload)) return payload;\r\n    if (Array.isArray(payload.items)) return payload.items;\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const extractQuotedPhrases = (searchTerm: string): string[] => {\r\n  const pattern = new RegExp(\r\n    /(?=[\"'])(?:\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\s\\S][^'\\\\]*)*')/gm\r\n  );\r\n\r\n  return (searchTerm.match(pattern) || []).map(match =>\r\n    match.replace(/\"/g, '')\r\n  );\r\n};\r\n\r\nexport const buildUrl = (\r\n  route: string,\r\n  params: { [key: string]: string }\r\n): string => {\r\n  const qs = queryString.stringify(params) as string;\r\n  const path = qs ? `${route}?${qs}` : route;\r\n  return path;\r\n};\r\n\r\nexport const callCustomApi = async <T>(\r\n  customApi: Map<string, CustomApi[keyof CustomApi]>,\r\n  filters: { [key: string]: string }\r\n): Promise<T> => {\r\n  const apiUri = customApi.get('uri', '');\r\n  let uri = buildUrl(apiUri, filters);\r\n  if (!uri) throw new Error('uri is required to use customApi');\r\n  if (typeof window == 'undefined' && uri.startsWith('/'))\r\n    uri = `http://localhost:3001${uri}`;\r\n\r\n  const response = await fetch(uri);\r\n  return (await response.json()) as T;\r\n};\r\n\r\nexport const removeEmptyAttributes = (obj: any) => {\r\n  Object.entries(obj).forEach(\r\n    ([key, val]) =>\r\n      (val && typeof val === 'object' && removeEmptyAttributes(val)) ||\r\n      ((typeof val === 'undefined' || val === null || val === '') &&\r\n        delete obj[key])\r\n  );\r\n  return obj;\r\n};\r\n\r\nexport const toArray = (obj: string, seperator = ',') =>\r\n  typeof obj === 'undefined' || obj === null\r\n    ? obj\r\n    : Array.isArray(obj)\r\n    ? obj\r\n    : obj.split(seperator);\r\n\r\n// assumes array elements are primitive types\r\nexport const areArraysEqualSets = (a1: any[], a2: any[]) => {\r\n  const superSet = {} as { [key: string]: any };\r\n  for (const ai of a1) {\r\n    const e = ai + typeof ai;\r\n    superSet[e] = 1;\r\n  }\r\n\r\n  for (const ai of a2) {\r\n    const e = ai + typeof ai;\r\n    if (!superSet[e]) {\r\n      return false;\r\n    }\r\n    superSet[e] = 2;\r\n  }\r\n\r\n  for (const e in superSet) {\r\n    if (superSet[e] === 1) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n","export const DataFormats = {\r\n  asset: 'asset',\r\n  entry: 'entry',\r\n  webpage: 'webpage',\r\n};\r\n\r\nexport const FilterExpressionTypes = {\r\n  contentType: 'contentType',\r\n  field: 'field',\r\n};\r\n\r\nconst sys = {\r\n  allUris: 'sys.allUris',\r\n  contentTypeId: 'sys.contentTypeId',\r\n  dataFormat: 'sys.dataFormat',\r\n  filename: 'sys.properties.filename',\r\n  id: 'sys.id',\r\n  includeInSearch: 'sys.metadata.includeInSearch',\r\n  language: 'sys.language',\r\n  uri: 'sys.uri',\r\n  versionStatus: 'sys.versionStatus',\r\n};\r\n\r\nexport const Fields = {\r\n  entryDescription: 'entryDescription',\r\n  entryTitle: 'entryTitle',\r\n  keywords: 'keywords',\r\n  searchContent: 'searchContent',\r\n  sys,\r\n  contentTypeId: 'sys.contentTypeId',\r\n  wildcard: '*',\r\n};\r\n","import {\r\n  IExpression,\r\n  ILogicalExpression,\r\n  Op,\r\n  OrderBy,\r\n  VersionStatus,\r\n} from 'contensis-core-api';\r\nimport { Fields, DataFormats } from '../search/schema';\r\nimport { fixFreeTextForElastic, extractQuotedPhrases } from './util';\r\nimport { CustomWhereClause, WeightedSearchField } from '../models/Search';\r\nimport { FieldOperators } from '../models/Queries';\r\n\r\nexport const fieldExpression = (\r\n  field: string | string[],\r\n  value: any,\r\n  operator: FieldOperators = 'equalTo',\r\n  weight?: number\r\n): IExpression[] => {\r\n  if (!field || !value) return [];\r\n  if (Array.isArray(field))\r\n    // If an array of fieldIds have been provided, call self for each fieldId\r\n    // to generate expressions that are combined with an 'or' operator\r\n    return [\r\n      Op.or(\r\n        ...field\r\n          .map(fieldId => fieldExpression(fieldId, value, operator, weight))\r\n          .flat()\r\n      ),\r\n    ];\r\n  if (operator === 'between') return between(field, value);\r\n  if (Array.isArray(value)) return equalToOrIn(field, value, operator);\r\n  else\r\n    return !weight\r\n      ? [Op[operator](field, value, undefined, undefined)]\r\n      : [Op[operator](field, value, undefined, undefined).weight(weight)];\r\n};\r\n\r\nexport const contentTypeIdExpression = (\r\n  contentTypeIds: string[],\r\n  webpageTemplates?: string[],\r\n  assetTypes?: string[]\r\n) => {\r\n  const expressions: ILogicalExpression[] = [];\r\n  if (!contentTypeIds && !webpageTemplates && !assetTypes) return expressions;\r\n\r\n  if (contentTypeIds && contentTypeIds.length > 0) {\r\n    expressions.push(\r\n      ...dataFormatExpression(contentTypeIds, DataFormats.entry)\r\n    );\r\n  }\r\n\r\n  if (webpageTemplates && webpageTemplates.length > 0) {\r\n    expressions.push(\r\n      ...dataFormatExpression(webpageTemplates, DataFormats.webpage)\r\n    );\r\n  }\r\n\r\n  if (assetTypes && assetTypes.length > 0) {\r\n    expressions.push(...dataFormatExpression(assetTypes, DataFormats.asset));\r\n  }\r\n\r\n  if (expressions.length > 1) return [Op.or(...expressions)];\r\n\r\n  return expressions;\r\n};\r\n\r\nexport const filterExpressions = (\r\n  filters: { key: string; value: string; operator: FieldOperators }[]\r\n) => {\r\n  if (!filters) return [];\r\n  const expressions: IExpression[] = [];\r\n\r\n  filters.map(param => {\r\n    expressions.push(\r\n      ...fieldExpression(param.key, param.value, param.operator || 'in')\r\n    );\r\n  });\r\n\r\n  return expressions;\r\n};\r\n\r\nexport const dataFormatExpression = (\r\n  contentTypeIds: string[],\r\n  dataFormat = DataFormats.entry\r\n) => {\r\n  if (contentTypeIds && contentTypeIds.length > 0) {\r\n    /**\r\n     * We have an array of contentTypeIds some may be prefixed with a \"!\"\r\n     * to indicate this is a \"not\" expression\r\n     */\r\n    const withContentTypeIds = contentTypeIds.filter(c => !c.startsWith('!'));\r\n    const notContentTypeIds = contentTypeIds\r\n      .filter(c => c.startsWith('!'))\r\n      .map(id => id.substring(1));\r\n\r\n    const andExpr = Op.and();\r\n\r\n    const dataFormatExpr = fieldExpression(\r\n      Fields.sys.dataFormat,\r\n      dataFormat\r\n    )[0];\r\n\r\n    const withExpr = fieldExpression(\r\n      Fields.sys.contentTypeId,\r\n      withContentTypeIds\r\n    )[0];\r\n\r\n    const notExpr = Op.not(\r\n      fieldExpression(Fields.sys.contentTypeId, notContentTypeIds)[0]\r\n    );\r\n\r\n    andExpr.add(dataFormatExpr);\r\n    if (withContentTypeIds.length > 0) andExpr.add(withExpr);\r\n    if (notContentTypeIds.length > 0) andExpr.add(notExpr);\r\n\r\n    return [andExpr];\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const featuredResultsExpression = ({\r\n  contentTypeId,\r\n  fieldId,\r\n  fieldValue = true,\r\n}: {\r\n  contentTypeId?: string | string[];\r\n  fieldId?: string | string[];\r\n  fieldValue?: boolean;\r\n} = {}) => {\r\n  const expressions = [] as IExpression[];\r\n\r\n  if (contentTypeId) {\r\n    expressions.push(\r\n      ...contentTypeIdExpression(\r\n        Array.isArray(contentTypeId) ? contentTypeId : [contentTypeId]\r\n      )\r\n    );\r\n  }\r\n\r\n  if (fieldId && fieldValue) {\r\n    expressions.push(...fieldExpression(fieldId, fieldValue));\r\n  }\r\n\r\n  return expressions;\r\n};\r\n\r\nexport const languagesExpression = (languages: string[]) =>\r\n  fieldExpression(Fields.sys.language, languages);\r\n\r\nexport const includeInSearchExpressions = (\r\n  webpageTemplates: string[],\r\n  includeInSearchFields: string[]\r\n) => {\r\n  const expressions = [] as IExpression[];\r\n  // Or include this expression if we have explicity specified non-default includeInSearch fields\r\n  if (Array.isArray(includeInSearchFields))\r\n    expressions.push(\r\n      ...includeInSearchFields.map(includeInSearchField =>\r\n        Op.or(\r\n          Op.and(\r\n            Op.exists(includeInSearchField, true),\r\n            Op.equalTo(includeInSearchField, true)\r\n          ),\r\n          Op.exists(includeInSearchField, false)\r\n        )\r\n      )\r\n    );\r\n\r\n  // If webpageTemplates have been specified, include this expression\r\n  // with the default includeInSearch field from classic Contensis.\r\n  if (Array.isArray(webpageTemplates) && webpageTemplates.length > 0)\r\n    expressions.push(\r\n      Op.or(\r\n        Op.and(\r\n          Op.exists(Fields.sys.includeInSearch, true),\r\n          Op.equalTo(Fields.sys.includeInSearch, true)\r\n        ),\r\n        Op.exists(Fields.sys.includeInSearch, false)\r\n      )\r\n    );\r\n  return expressions;\r\n};\r\n\r\nexport const defaultExpressions = (versionStatus: VersionStatus) => {\r\n  return [Op.equalTo(Fields.sys.versionStatus, versionStatus)];\r\n};\r\n\r\nexport const excludeIdsExpression = (excludeIds: string[]) => {\r\n  if (Array.isArray(excludeIds) && excludeIds.length > 0) {\r\n    const [expr] = fieldExpression(Fields.sys.id, excludeIds);\r\n    return [Op.not(expr)];\r\n  } else return [];\r\n};\r\n\r\nexport const orderByExpression = (orderBy: string[]) => {\r\n  let expression = OrderBy;\r\n  if (orderBy && orderBy.length > 0) {\r\n    orderBy.map(\r\n      ob =>\r\n        (expression = ob.startsWith('-')\r\n          ? expression.desc(ob.substring(1))\r\n          : expression.asc(ob))\r\n    );\r\n  }\r\n  return expression;\r\n};\r\n\r\nconst equalToOrIn = (\r\n  field: string,\r\n  value: string | string[],\r\n  operator: FieldOperators = 'equalTo'\r\n) => {\r\n  if (value.length === 0) return [];\r\n  if (Array.isArray(value)) {\r\n    if (value.length === 1)\r\n      return [Op[operator](field, value[0], undefined, undefined)];\r\n    return [Op.in(field, ...value)];\r\n  }\r\n  return [];\r\n};\r\n\r\nconst between = (field: string, value: string | string[]) => {\r\n  const handle = (betweenValue: string) => {\r\n    const valArr = betweenValue.split('-');\r\n    if (valArr.length > 1) {\r\n      const [minimum, maximum = null] = betweenValue.split('-');\r\n      return Op.between(field, minimum, maximum);\r\n    } else {\r\n      // eslint-disable-next-line no-console\r\n      console.log(\r\n        `[search] You have supplied only one value to a \"between\" operator which must have two values. Your supplied value \"${\r\n          valArr.length && valArr[0]\r\n        }\" has been discarded.`\r\n      );\r\n      return false;\r\n    }\r\n  };\r\n  if (value.length === 0) return [];\r\n  if (Array.isArray(value))\r\n    return [\r\n      Op.or(...(value.map(handle).filter(bc => bc !== false) as IExpression[])),\r\n    ];\r\n\r\n  // const valArr = value.split('-');\r\n  const op = handle(value);\r\n  return op ? [op] : []; // valArr.length > 1 ? [Op.between(field, ...value.split('-'))] : [];\r\n};\r\n\r\n/**\r\n * Accept HTTP style objects and map them to\r\n * their equivalent JS client \"Op\" expressions\r\n * @param {array} where the where array as you'd provide it to the HTTP API\r\n * @returns {array} array of constructed Delivery API Operators\r\n */\r\nexport const customWhereExpressions = (where?: CustomWhereClause) => {\r\n  if (!where || !Array.isArray(where)) return [];\r\n\r\n  // Map each clause inside the where array\r\n  return where.map(clause => {\r\n    let expression: IExpression | undefined;\r\n    // Map through each property in the clause so we can\r\n    // capture the values required and reconstruct them as\r\n    // a Delivery API expression\r\n    let operator: 'field' | 'not' | 'and' | 'or' | FieldOperators;\r\n    Object.keys(clause).map((key: string, idx) => {\r\n      // The clause may contain only one key\r\n      if (idx === 0) operator = key as 'not' | 'and' | 'or';\r\n\r\n      const field: string = (clause as any).field;\r\n      const value = (clause as any)[\r\n        Object.keys(clause).find(k => !['field', 'weight'].includes(k)) || ''\r\n      ];\r\n      const weight: number = (clause as any).weight;\r\n\r\n      if (idx === 0) {\r\n        if (operator === 'and' || operator === 'or') {\r\n          // These are array expressions so we can call ourself recursively\r\n          // to map these inner values to expressions\r\n          const recurseExpr = customWhereExpressions(\r\n            (clause as any)[operator]\r\n          ) as unknown as IExpression[];\r\n          expression = Op[operator](...recurseExpr);\r\n        }\r\n\r\n        if (['not'].includes(operator)) {\r\n          // A 'not' expression is an object with only one inner field and inner operator\r\n          Object.keys(value).map((notKey, notIdx) => {\r\n            const innerOperator = notKey as Exclude<\r\n              FieldOperators,\r\n              'between' | 'distanceWithin' // these are not handled\r\n            >;\r\n            const innerValue = value[notKey];\r\n            const innerField = value.field;\r\n            // Map the expression when we've looped and scoped to\r\n            // the second property inside the clause\r\n            if (notIdx === 1) {\r\n              expression = Op.not(Op[innerOperator](innerField, innerValue));\r\n            }\r\n          });\r\n        }\r\n      }\r\n      // Map the expression when we've looped and scoped to\r\n      // the second property inside the clause\r\n      operator = Object.keys(clause).find(\r\n        clauseKey => !['field', 'weight'].includes(clauseKey)\r\n      ) as FieldOperators;\r\n\r\n      if (\r\n        idx === 1 &&\r\n        // operator !== 'and' &&\r\n        // operator !== 'or' &&\r\n        operator !== 'between' &&\r\n        operator !== 'distanceWithin'\r\n      ) {\r\n        expression =\r\n          operator === 'freeText' || operator === 'contains'\r\n            ? Op[operator](field, value)\r\n            : operator === 'in'\r\n            ? Op[operator](field, ...value)\r\n            : Op[operator](field, value);\r\n\r\n        if (typeof weight === 'number') expression = expression.weight(weight);\r\n      }\r\n    });\r\n    return expression;\r\n  }) as IExpression[];\r\n};\r\n\r\nexport const termExpressions = (\r\n  searchTerm: string,\r\n  weightedSearchFields: WeightedSearchField[]\r\n) => {\r\n  if (searchTerm && weightedSearchFields && weightedSearchFields.length > 0) {\r\n    // Extract any phrases in quotes to array\r\n    const quotedPhrases = extractQuotedPhrases(searchTerm);\r\n\r\n    // Modify the search term to remove any quoted phrases to leave any remaining terms\r\n    let modifiedSearchTerm = searchTerm;\r\n    quotedPhrases.forEach(\r\n      qp =>\r\n        (modifiedSearchTerm = modifiedSearchTerm\r\n          .replace(qp, '')\r\n          .replace('\"\"', '')\r\n          .trim())\r\n    );\r\n\r\n    // Push to the operators array to include in the query\r\n    const operators = [] as IExpression[];\r\n\r\n    // Helper functions to generate Op expressions\r\n    const containsOp = (f: WeightedSearchField, term: string) =>\r\n      fieldExpression(\r\n        f.fieldId,\r\n        fixFreeTextForElastic(term),\r\n        'contains',\r\n        f.weight\r\n      );\r\n    const freeTextOp = (f: WeightedSearchField, term: string) =>\r\n      fieldExpression(\r\n        f.fieldId,\r\n        fixFreeTextForElastic(term),\r\n        'freeText',\r\n        f.weight\r\n      );\r\n\r\n    // For each weighted search field\r\n    weightedSearchFields.forEach(wsf => {\r\n      // Push to field operators\r\n      const fieldOperators: IExpression[] = [];\r\n\r\n      // Add operator expressions for modified search term\r\n      if (modifiedSearchTerm) {\r\n        if (\r\n          [Fields.keywords, Fields.sys.filename, Fields.sys.uri].includes(\r\n            wsf.fieldId\r\n          )\r\n        ) {\r\n          fieldOperators.push(...containsOp(wsf, modifiedSearchTerm));\r\n        } else {\r\n          if ([Fields.entryTitle].includes(wsf.fieldId)) {\r\n            fieldOperators.push(\r\n              Op.or(\r\n                ...containsOp(wsf, modifiedSearchTerm),\r\n                ...freeTextOp(wsf, modifiedSearchTerm)\r\n              )\r\n            );\r\n          } else {\r\n            fieldOperators.push(...freeTextOp(wsf, modifiedSearchTerm));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Add operator expressions for any quoted phrases\r\n      quotedPhrases.forEach(qp => fieldOperators.push(...containsOp(wsf, qp)));\r\n\r\n      // If we are using multiple operators for a field we will\r\n      // wrap each field inside an And operator so we will match\r\n      // all terms/phrases rather than any terms/phrases\r\n      if (fieldOperators.length > 1) {\r\n        operators.push(Op.and(...fieldOperators));\r\n      } else {\r\n        operators.push(...fieldOperators);\r\n      }\r\n    });\r\n\r\n    // Wrap operators in an Or operator\r\n    return [\r\n      Op.or()\r\n        .addRange(operators)\r\n        .add(Op.freeText(Fields.searchContent, searchTerm)),\r\n    ];\r\n  } else if (searchTerm) {\r\n    // Searching without weightedSearchFields defined will fall back\r\n    // to a default set of search fields with arbritary weights set.\r\n    return [\r\n      Op.or(\r\n        Op.equalTo(Fields.entryTitle, searchTerm).weight(10),\r\n        Op.freeText(Fields.entryTitle, searchTerm).weight(2),\r\n        Op.freeText(Fields.entryDescription, searchTerm).weight(2),\r\n        Op.contains(Fields.keywords, searchTerm).weight(2),\r\n        Op.contains(Fields.sys.uri, searchTerm).weight(2),\r\n        Op.contains(Fields.sys.allUris, searchTerm),\r\n        Op.freeText(Fields.searchContent, searchTerm)\r\n      ),\r\n    ];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n","import { Query, OrderBy } from 'contensis-core-api';\r\n// import { Query, OrderBy } from 'contensis-delivery-api';\r\nimport {\r\n  contentTypeIdExpression,\r\n  customWhereExpressions,\r\n  defaultExpressions,\r\n  excludeIdsExpression,\r\n  featuredResultsExpression,\r\n  filterExpressions,\r\n  includeInSearchExpressions,\r\n  languagesExpression,\r\n  orderByExpression,\r\n  termExpressions,\r\n} from '../search/expressions';\r\nimport { Fields } from '../search/schema';\r\nimport { FilterQuery, SearchQuery } from '../models/Queries';\r\n\r\nexport const filterQuery: FilterQuery = (\r\n  contentTypeIds,\r\n  versionStatus,\r\n  customWhere\r\n) => {\r\n  const query = new Query(\r\n    ...[\r\n      ...contentTypeIdExpression(contentTypeIds),\r\n      ...defaultExpressions(versionStatus),\r\n      ...customWhereExpressions(customWhere),\r\n    ]\r\n  );\r\n  query.orderBy = OrderBy.asc(Fields.entryTitle);\r\n  query.pageSize = 100;\r\n\r\n  return query;\r\n};\r\n\r\nexport const searchQuery: SearchQuery = (\r\n  {\r\n    assetTypes,\r\n    contentTypeIds,\r\n    customWhere,\r\n    dynamicOrderBy,\r\n    excludeIds,\r\n    featuredResults,\r\n    fields,\r\n    filters,\r\n    includeInSearchFields,\r\n    languages,\r\n    pageSize,\r\n    pageIndex,\r\n    orderBy,\r\n    searchTerm,\r\n    versionStatus,\r\n    webpageTemplates,\r\n    weightedSearchFields,\r\n  },\r\n  isFeatured = false\r\n) => {\r\n  let expressions = [\r\n    ...termExpressions(searchTerm, weightedSearchFields),\r\n    ...defaultExpressions(versionStatus),\r\n    ...includeInSearchExpressions(webpageTemplates, includeInSearchFields),\r\n    ...languagesExpression(languages),\r\n    ...customWhereExpressions(customWhere),\r\n    ...excludeIdsExpression(excludeIds),\r\n  ];\r\n  if (isFeatured)\r\n    expressions = [\r\n      ...expressions,\r\n      ...featuredResultsExpression(featuredResults),\r\n    ];\r\n\r\n  if (!isFeatured || (featuredResults && !featuredResults.contentTypeId))\r\n    expressions = [\r\n      ...expressions,\r\n      ...filterExpressions(filters),\r\n      ...contentTypeIdExpression(contentTypeIds, webpageTemplates, assetTypes),\r\n    ];\r\n\r\n  const query = new Query(...expressions);\r\n\r\n  if (!searchTerm) query.orderBy = orderByExpression(orderBy);\r\n  if (dynamicOrderBy && dynamicOrderBy.length)\r\n    query.orderBy = orderByExpression(dynamicOrderBy);\r\n\r\n  if (fields && fields.length > 0 && !isFeatured) {\r\n    query.fields = fields;\r\n  }\r\n\r\n  query.pageIndex = isFeatured ? 0 : pageIndex;\r\n  query.pageSize =\r\n    isFeatured && typeof featuredResults.count === 'number'\r\n      ? featuredResults.count\r\n      : pageSize;\r\n  return query;\r\n};\r\n","import { List, fromJS } from 'immutable';\r\nimport queryString from 'query-string';\r\n\r\nimport mapJson from 'jsonpath-mapper';\r\nimport { removeEmptyAttributes } from '../search/util';\r\nimport {\r\n  getSelectedFilters,\r\n  getSearchTerm,\r\n  getCurrentFacet,\r\n  getSearchContext,\r\n  selectCurrentPath,\r\n} from '../redux/selectors';\r\nimport { AppState } from '../models/SearchState';\r\nimport { Context } from '../models/Enums';\r\n\r\ntype SearchStateParams = {\r\n  state: AppState;\r\n  facet?: string;\r\n  orderBy?: string;\r\n  pageIndex: number;\r\n  term?: string;\r\n};\r\n\r\nconst searchUriTemplate = {\r\n  path: ({ state, facet, pageIndex }: SearchStateParams) => {\r\n    const currentFacet =\r\n      getSearchContext(state) !== Context.listings &&\r\n      (facet || getCurrentFacet(state));\r\n    const currentPath = selectCurrentPath(state) || '/search';\r\n    const newPath = currentFacet\r\n      ? `${currentPath}/${currentFacet}`\r\n      : currentPath;\r\n    if (pageIndex) return `${newPath}/${pageIndex + 1}`;\r\n    return newPath;\r\n  },\r\n  search: ({ state, facet, orderBy, term }: SearchStateParams) => {\r\n    const searchContext = getSearchContext(state);\r\n    // Lose stateFilters and currentSearch if a new\r\n    // term is passed via an argument\r\n    const stateFilters = term\r\n      ? List()\r\n      : getSelectedFilters(state, facet, searchContext).map(f => f?.join(','));\r\n    const currentSearch =\r\n      !term && state.getIn(['routing', 'location', 'search']);\r\n    const currentQs = removeEmptyAttributes(queryString.parse(currentSearch));\r\n\r\n    if (orderBy) currentQs.orderBy = orderBy;\r\n\r\n    const searchTerm = getSearchTerm(state);\r\n    // Use Immutable's merge to merge the stateFilters with any current Qs\r\n    // to build the new Qs.\r\n    const mergedSearch = removeEmptyAttributes(\r\n      fromJS(currentQs).merge(stateFilters).set('term', searchTerm).toJS()\r\n    );\r\n    return queryString.stringify(mergedSearch);\r\n  },\r\n  hash: {\r\n    $path: 'state',\r\n    $formatting: (state: AppState) =>\r\n      state.getIn(['routing', 'location', 'hash'], '').replace('#', ''),\r\n  },\r\n};\r\n\r\nconst mapStateToSearchUri = (params: SearchStateParams) =>\r\n  mapJson(params, searchUriTemplate) as {\r\n    path: Location['pathname'];\r\n    search: Location['search'];\r\n    hash: Location['hash'];\r\n  };\r\n\r\nexport default mapStateToSearchUri;\r\n","import { default as mapSearchResultToState } from 'jsonpath-mapper';\r\nimport { List } from 'immutable';\r\n// eslint-disable-next-line import/default\r\nimport MappingTemplate from 'jsonpath-mapper/dist/models/Template';\r\nimport { Context } from '../models/Enums';\r\nimport { QueryParams } from '../models/Queries';\r\nimport { Mappers } from '../models/Search';\r\nimport {\r\n  LoadFiltersSearchResults,\r\n  SearchResults,\r\n} from '../models/SearchActions';\r\nimport { AppState } from '../models/SearchState';\r\nimport {\r\n  SET_SEARCH_ENTRIES,\r\n  LOAD_FILTERS_COMPLETE,\r\n  LOAD_FILTERS_ERROR,\r\n} from '../redux/types';\r\nimport { getItemsFromResult } from '../search/util';\r\n\r\nconst mapEntriesToSearchResults = (\r\n  {\r\n    mappers,\r\n    mapper,\r\n    context,\r\n    facet,\r\n  }: {\r\n    mappers?: Mappers;\r\n    mapper?: Mappers['results'];\r\n    context: Context;\r\n    facet: string;\r\n  },\r\n  items: any[],\r\n  state: AppState\r\n) => {\r\n  const mapperFunc = mapper || (mappers && mappers.results);\r\n  return items && typeof mapperFunc === 'function'\r\n    ? mapperFunc(items, facet, context, state)\r\n    : [];\r\n};\r\n\r\nexport const facetTemplate = {\r\n  type: () => SET_SEARCH_ENTRIES,\r\n  context: 'action.context',\r\n  facet: 'action.facet',\r\n  mappers: 'action.mappers',\r\n  nextFacet: {\r\n    entries: {\r\n      isLoading: () => false,\r\n      isError: () => false,\r\n    },\r\n    featuredEntries: {\r\n      isLoading: () => false,\r\n      isError: () => false,\r\n    },\r\n    featuredResults: ({ action, featuredResult, state }: SearchResults) =>\r\n      mapEntriesToSearchResults(\r\n        action,\r\n        getItemsFromResult(featuredResult),\r\n        state\r\n      ),\r\n    queryDuration: 'result.duration',\r\n    pagingInfo: {\r\n      isLoading: () => false,\r\n      pageCount: {\r\n        $path: 'result.payload.pageCount',\r\n        $default: 0,\r\n      },\r\n      totalCount: {\r\n        $path: 'result.payload.totalCount',\r\n        $default: 0,\r\n      },\r\n      pageSize: {\r\n        $path: 'result.payload.pageSize',\r\n        $default: 0,\r\n      },\r\n      pageIndex: 'pageIndex',\r\n      pagesLoaded: {\r\n        $path: 'action.queryParams',\r\n        $formatting: ({ pageIndex, pagesLoaded }: QueryParams) => {\r\n          const loaded = List(pagesLoaded || []);\r\n          const pages = isNaN(loaded.find(l => l === pageIndex) as any)\r\n            ? loaded.push(pageIndex)\r\n            : loaded;\r\n          return pages.toList().sort((a, b) => a - b);\r\n        },\r\n      },\r\n      prevPageIndex: 'action.queryParams.prevPageIndex',\r\n    },\r\n    preloaded: { $path: 'preload', $default: false },\r\n    results: ({\r\n      action,\r\n      pageIndex,\r\n      result,\r\n      prevResults,\r\n      state,\r\n    }: SearchResults) => {\r\n      const { loadMorePaging, pagesLoaded, prevPageIndex } = action.queryParams;\r\n\r\n      const results = mapEntriesToSearchResults(\r\n        action,\r\n        getItemsFromResult(result),\r\n        state\r\n      );\r\n\r\n      if (!loadMorePaging) return results;\r\n\r\n      // add a _pageIndex property to the returned results to help us later\r\n      const nextResults = results.map((r, idx) => ({\r\n        _pageIndex: pageIndex,\r\n        _pagePosition: idx,\r\n        ...r,\r\n      }));\r\n\r\n      const loadedPages = List(pagesLoaded);\r\n\r\n      // if pageIndex is found in loadedPages, we have already loaded this page\r\n      if (!isNaN(loadedPages.find(l => l === pageIndex) as any))\r\n        return prevResults;\r\n\r\n      // Determine where we put the results depending on if we\r\n      // are paging forwards, backwards, or doing a new search\r\n      const firstResultSet = (\r\n        pageIndex > prevPageIndex ? prevResults || [] : nextResults\r\n      ) as any[];\r\n      const secondResultSet = (\r\n        pageIndex > prevPageIndex ? nextResults : prevResults || []\r\n      ) as any[];\r\n      const onlyResultSet = loadedPages.size === 0 ? nextResults : false;\r\n      return onlyResultSet || [...firstResultSet, ...secondResultSet];\r\n    },\r\n  },\r\n  preload: 'action.preload',\r\n  ogState: 'action.ogState',\r\n  debug: 'action.debug',\r\n} as any;\r\n\r\nexport const filterTemplate = {\r\n  type: ({ type }) => type || LOAD_FILTERS_COMPLETE,\r\n  context: 'context',\r\n  facetKey: 'facetKey',\r\n  filterKey: 'filterKey',\r\n  nextFilter: {\r\n    isLoading: () => false,\r\n    isError: ({ type }) => type === LOAD_FILTERS_ERROR,\r\n    items: ({ payload, selectedKeys, mapper }) => {\r\n      if (payload && (payload.items || payload.children)) {\r\n        const items = (payload.items || payload.children).map((item: any) => {\r\n          item.isSelected = selectedKeys?.includes(item?.sys?.id || item.key);\r\n          return item;\r\n        });\r\n        return mapper(items);\r\n      }\r\n      return [];\r\n    },\r\n  },\r\n  error: { $path: 'error', $disable: e => !e },\r\n} as MappingTemplate<LoadFiltersSearchResults>;\r\n\r\nexport default mapSearchResultToState;\r\n","import { FilterExpressionTypes } from '../search/schema';\r\nimport mapJson from 'jsonpath-mapper';\r\n\r\nconst filterExpressionMapper = {\r\n  // Expression type: so we can identify how to build the query\r\n  expressionType: ({ filter }) =>\r\n    filter.contentTypeId\r\n      ? FilterExpressionTypes.contentType\r\n      : FilterExpressionTypes.field,\r\n  // Key: so we can target the query to a specific field\r\n  key: 'filter.fieldId',\r\n  // Value: so we can filter a specific field by an array of values\r\n  // e.g. taxonomy key or contentTypeId array\r\n  value: 'selectedValue',\r\n  operator: 'filter.fieldOperator',\r\n};\r\n\r\nconst mapFilterToFilterExpression = filter =>\r\n  mapJson(filter, filterExpressionMapper);\r\n\r\nexport default mapFilterToFilterExpression;\r\n","import mapFilterToFilterExpression from './filters-to-filterexpression.mapper';\r\n\r\nexport const mapFiltersToFilterExpression = (filters, selectedFilters) => {\r\n  if (!selectedFilters || Object.keys(selectedFilters).length === 0) return [];\r\n  const filterExpressions = [];\r\n\r\n  // Iterate through the keys in selectedFilters and locate\r\n  // the items that are selected and queryable\r\n  Object.entries(selectedFilters).map(([fkey, selectedValue]) => {\r\n    const filter = filters[fkey];\r\n    if (selectedValue && filter) {\r\n      const selectedItems =\r\n        (filter.items && filter.items.filter(itm => itm.isSelected)) || [];\r\n\r\n      // Where we have a value for a selectedFilter\r\n      // and a filter is found for the current key\r\n      // map the filter to a filterExpression object\r\n      const expr = mapFilterToFilterExpression({\r\n        filter,\r\n        selectedItems,\r\n        selectedValue,\r\n      });\r\n      filterExpressions.push(expr);\r\n    }\r\n  });\r\n  return filterExpressions;\r\n};\r\n","import mapJson from 'jsonpath-mapper';\r\n\r\nimport { fromJS, List, Map } from 'immutable';\r\nimport {\r\n  getFacet,\r\n  getSelectedFilters,\r\n  getQueryParameter,\r\n  getSearchTerm,\r\n  getPageIndex,\r\n  getFilters,\r\n  getCustomEnv,\r\n  getPrevPageIndex,\r\n  getPagesLoaded,\r\n  selectVersionStatus,\r\n} from '../redux/selectors';\r\nimport { mapFiltersToFilterExpression } from './filters-to-filterexpression';\r\nimport { UPDATE_PAGE_INDEX } from '../redux/types';\r\nimport { QueryParams } from '../models/Queries';\r\nimport { AppState } from '../models/SearchState';\r\nimport { Context } from '../models/Enums';\r\nimport {\r\n  EnsureSearchAction,\r\n  SetSearchEntriesAction,\r\n} from '../models/SearchActions';\r\nimport { WeightedSearchField } from '../models/Search';\r\n\r\ntype QueryParamsMapperParams = {\r\n  context: Context;\r\n  facet: string;\r\n  action: EnsureSearchAction | SetSearchEntriesAction;\r\n  state: AppState;\r\n};\r\n\r\nconst queryParamsTemplate = {\r\n  assetTypes: (root: QueryParamsMapperParams) =>\r\n    getQueryParameter(root, 'assetTypes', List()),\r\n  contentTypeIds: (root: QueryParamsMapperParams) =>\r\n    getQueryParameter(root, 'contentTypeIds', List()),\r\n  customWhere: (root: QueryParamsMapperParams) =>\r\n    getQueryParameter(root, 'customWhere', List()),\r\n  dynamicOrderBy: (root: QueryParamsMapperParams) =>\r\n    getQueryParameter(root, 'dynamicOrderBy', List()),\r\n  env: ({ state, facet, context }: QueryParamsMapperParams) =>\r\n    getCustomEnv(state, facet, context),\r\n  excludeIds: ({\r\n    action: { excludeIds },\r\n  }: {\r\n    action: { excludeIds: string | string[] };\r\n  }) => {\r\n    // Exclude current route entry id from minilist searches or any supplied ids\r\n    if (excludeIds)\r\n      return Array.isArray(excludeIds)\r\n        ? excludeIds\r\n        : excludeIds.split(',').map(id => id.trim());\r\n    return null;\r\n  },\r\n  featuredResults: (root: QueryParamsMapperParams) =>\r\n    getQueryParameter(root, 'featuredResults', null),\r\n  fields: (root: QueryParamsMapperParams) =>\r\n    getQueryParameter(root, 'fields', List()),\r\n  filters: ({ state, facet, context }: QueryParamsMapperParams) => {\r\n    const stateFilters = getFilters(state, facet, context).toJS();\r\n    const selectedFilters = getSelectedFilters(state, facet, context).toJS();\r\n    // Use another mapping function to map the filter parameters for the query\r\n    const filterParams = mapFiltersToFilterExpression(\r\n      stateFilters,\r\n      selectedFilters\r\n    );\r\n    return filterParams;\r\n  },\r\n  includeInSearchFields: (root: QueryParamsMapperParams) =>\r\n    getQueryParameter(root, 'includeInSearch', List()),\r\n  internalPageIndex: ({ action, state }: QueryParamsMapperParams) =>\r\n    getPageIndex(state, '', action.context),\r\n  internalPaging: (root: QueryParamsMapperParams) =>\r\n    getQueryParameter(root, 'internalPaging', false),\r\n  languages: ({ action }: QueryParamsMapperParams) =>\r\n    action.defaultLang ? [action.defaultLang] : [],\r\n  linkDepth: (root: QueryParamsMapperParams) =>\r\n    getQueryParameter(root, 'linkDepth', 0),\r\n  loadMorePaging: (root: QueryParamsMapperParams) =>\r\n    getQueryParameter(root, 'loadMorePaging', false),\r\n  orderBy: (root: QueryParamsMapperParams) =>\r\n    getQueryParameter(root, 'orderBy', List()),\r\n  pageIndex: (root: QueryParamsMapperParams) => {\r\n    const { action, state } = root;\r\n    if (getQueryParameter(root, 'internalPaging', false)) return 0;\r\n    if (action.type === UPDATE_PAGE_INDEX) return action.params.pageIndex;\r\n    return !action.preload ? getPageIndex(state, '', action.context) : 0;\r\n  },\r\n  pageSize: (root: QueryParamsMapperParams) =>\r\n    getQueryParameter(root, 'pageSize'),\r\n  pagesLoaded: ({ state, facet, context }: QueryParamsMapperParams) =>\r\n    getPagesLoaded(state, facet, context),\r\n  prevPageIndex: ({ state, facet, context }: QueryParamsMapperParams) =>\r\n    getPrevPageIndex(state, facet, context),\r\n  projectId: ({ state, facet, context }: QueryParamsMapperParams) =>\r\n    getFacet(state, facet, context).get('projectId'),\r\n  searchTerm: (root: QueryParamsMapperParams) =>\r\n    root.context !== Context.minilist ||\r\n    getQueryParameter(root, 'useSearchTerm', false)\r\n      ? getSearchTerm(root.state)\r\n      : '',\r\n  selectedFilters: ({ state, facet, context }: QueryParamsMapperParams) =>\r\n    getSelectedFilters(state, facet, context).map(f => f?.join(',')),\r\n  versionStatus: ({ state }: QueryParamsMapperParams) =>\r\n    selectVersionStatus(state),\r\n  weightedSearchFields: (root: QueryParamsMapperParams) => {\r\n    const wsf = getQueryParameter(root, 'weightedSearchFields', List()) as List<\r\n      Map<string, keyof WeightedSearchField>\r\n    >;\r\n    const deduped = wsf\r\n      .groupBy((v = Map()) => v.get('fieldId'))\r\n      .map((v = Map()) => v.first())\r\n      .toList();\r\n    return deduped;\r\n    // return wsf;\r\n  },\r\n  webpageTemplates: (root: QueryParamsMapperParams) =>\r\n    getQueryParameter(root, 'webpageTemplates', List()),\r\n};\r\n\r\nconst mapStateToQueryParams = (sourceJson: QueryParamsMapperParams) =>\r\n  fromJS(mapJson(sourceJson, queryParamsTemplate)).toJS() as QueryParams;\r\n\r\nexport default mapStateToQueryParams;\r\n","import { areArraysEqualSets } from '../search/util';\r\nimport {\r\n  getSelectedFilters,\r\n  getIsLoaded,\r\n  getQueryParams,\r\n  getPageIndex,\r\n  getIsInternalPaging,\r\n  getSearchTerm,\r\n} from './selectors';\r\nimport { Context } from '../models/Enums';\r\nimport mapStateToQueryParams from '../transformations/state-to-queryparams.mapper';\r\nimport { QueryParams, SearchQueryOptions } from '../models/Queries';\r\nimport { AppState } from '../models/SearchState';\r\nimport {\r\n  EnsureSearchAction,\r\n  SetSearchEntriesAction,\r\n} from '../models/SearchActions';\r\n\r\n/**\r\n * 1, Generates all the parameters required to run the search query.\r\n * 2, Tells us if we should run the search.\r\n * @param {object} action\r\n * @param {ImmutableMap} state\r\n * @returns [queryParams, runSearch]\r\n */\r\nexport const generateQueryParams = (\r\n  action: EnsureSearchAction | SetSearchEntriesAction,\r\n  state: AppState\r\n): [SearchQueryOptions, boolean] => {\r\n  const { context, facet } = action;\r\n  // Map parameters using state and some additional\r\n  // inputs from the action\r\n  const queryParams = mapStateToQueryParams({\r\n    context,\r\n    facet,\r\n    action,\r\n    state,\r\n  });\r\n\r\n  return [queryParams, runSearch(action, state, queryParams)];\r\n};\r\n\r\n/**\r\n * Checks if we have already loaded everything we're asking for and tells us to run the search or not\r\n * @param action\r\n * @param state\r\n */\r\nexport const runSearch = (\r\n  action: EnsureSearchAction | SetSearchEntriesAction,\r\n  state: AppState,\r\n  queryParams: SearchQueryOptions\r\n) => {\r\n  const {\r\n    context,\r\n    defaultLang,\r\n    facet,\r\n    ogState = state,\r\n    preload,\r\n    ssr,\r\n  } = action as EnsureSearchAction & SetSearchEntriesAction;\r\n\r\n  let willRun = false;\r\n\r\n  const facetIsLoaded = defaultLang\r\n    ? false\r\n    : getIsLoaded(state, context, facet);\r\n  const stateParams = getQueryParams(\r\n    ogState,\r\n    facet,\r\n    context\r\n  ).toJS() as QueryParams;\r\n  stateParams.pageIndex = getPageIndex(ogState, facet, context);\r\n  stateParams.searchTerm = getSearchTerm(ogState);\r\n\r\n  if (\r\n    (context === Context.facets && ssr) ||\r\n    // context === Context.minilist ||\r\n    preload ||\r\n    !facetIsLoaded ||\r\n    filterParamsChanged(action) ||\r\n    defaultLang\r\n  ) {\r\n    willRun = true;\r\n  } else {\r\n    // Don't execute the search if the inbound query params\r\n    // are the same as what we already have in state\r\n    Object.entries(stateParams).forEach(([param, value]) => {\r\n      const queryParam = queryParams[param as keyof SearchQueryOptions];\r\n      if (JSON.stringify(value) !== JSON.stringify(queryParam)) {\r\n        willRun = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  const internalPaging = getIsInternalPaging(ogState, facet, context);\r\n  if (internalPaging && facetIsLoaded) {\r\n    willRun = false;\r\n  }\r\n\r\n  return willRun;\r\n};\r\n\r\n/**\r\n * This will tell us if filter parameters have been\r\n * changed by some external event such as a route change\r\n * @param action\r\n * @returns true or false\r\n */\r\nexport const filterParamsChanged = (\r\n  action: EnsureSearchAction | SetSearchEntriesAction,\r\n  state?: AppState\r\n) => {\r\n  const {\r\n    context,\r\n    facet,\r\n    params,\r\n    ogState = state,\r\n  } = action as EnsureSearchAction & SetSearchEntriesAction;\r\n  const selectedFilters = getSelectedFilters(\r\n    ogState as AppState,\r\n    facet,\r\n    context\r\n  ).toJS() as { [key: string]: string[] };\r\n\r\n  const paramsChanged = Object.entries(selectedFilters).map(\r\n    ([filterKey, selectedValues]) => {\r\n      const inboundValues =\r\n        (params && params[filterKey] && params[filterKey].split(',')) || [];\r\n\r\n      if (!areArraysEqualSets(selectedValues, inboundValues)) return true;\r\n    }\r\n  );\r\n\r\n  return paramsChanged.filter(f => f === true).length > 0;\r\n};\r\n\r\n/* eslint-disable no-console */\r\nexport const debugExecuteSearch = (\r\n  action: EnsureSearchAction | SetSearchEntriesAction,\r\n  state: AppState\r\n) => {\r\n  const [queryParams, runSearch] = generateQueryParams(action, state);\r\n\r\n  console.log(\r\n    'runSearch',\r\n    runSearch,\r\n    'action',\r\n    action,\r\n    'filterParamsChanged',\r\n    filterParamsChanged(action, state),\r\n    'getIsLoaded(state, context, facet)',\r\n    getIsLoaded(state, action.context, action.facet)\r\n  );\r\n  const stateParams = getQueryParams(\r\n    action.ogState || state,\r\n    action.facet,\r\n    action.context\r\n  ).toJS() as QueryParams;\r\n  stateParams.pageIndex = getPageIndex(\r\n    action.ogState || state,\r\n    action.facet,\r\n    action.context\r\n  );\r\n  stateParams.searchTerm = getSearchTerm(action.ogState || state);\r\n  console.log(stateParams, queryParams);\r\n\r\n  console.log(\r\n    'getSelectedFilters',\r\n    getSelectedFilters(\r\n      action.ogState || state,\r\n      action.facet,\r\n      action.context\r\n    ).toJS(),\r\n    'params',\r\n    action.params\r\n  );\r\n};\r\n","import { default as mapEntry } from 'jsonpath-mapper';\r\nimport { Fields } from '../search/schema';\r\n\r\n// *** FILTER ITEM MAPPING ***\r\n\r\n// Base mapping, fields that are the same across all mappings\r\n// to save repeating these elements in every mapper, spread this\r\n// into your discrete mappings\r\nconst base = {\r\n  contentTypeId: Fields.sys.contentTypeId,\r\n  title: 'entryTitle',\r\n  key: 'sys.id',\r\n  path: 'sys.slug',\r\n  isSelected: 'isSelected',\r\n};\r\n\r\nconst mapEntriesToFilterItems = entries => {\r\n  if (!entries) return [];\r\n  return entries.map(entry => {\r\n    const template = base;\r\n    if (template) {\r\n      return mapEntry(entry, template);\r\n    }\r\n    return entry;\r\n  });\r\n};\r\n\r\nexport default mapEntriesToFilterItems;\r\n","import * as log from 'loglevel';\r\nimport { takeEvery, put, select, call, all } from 'redux-saga/effects';\r\nimport { List, Map } from 'immutable';\r\nimport { PagedList, Query, VersionStatus } from 'contensis-core-api/lib/models';\r\nimport { Entry, TaxonomyNode } from 'contensis-delivery-api/lib/models';\r\n\r\nimport { cachedSearch } from '../search/ContensisDeliveryApi';\r\nimport { callCustomApi, timedSearch, getItemsFromResult } from '../search/util';\r\n\r\nimport {\r\n  CLEAR_FILTERS,\r\n  DO_SEARCH,\r\n  EXECUTE_SEARCH,\r\n  EXECUTE_SEARCH_PRELOAD,\r\n  LOAD_FILTERS,\r\n  LOAD_FILTERS_COMPLETE,\r\n  LOAD_FILTERS_ERROR,\r\n  SET_ROUTE_FILTERS,\r\n  SET_SEARCH_ENTRIES,\r\n  UPDATE_SEARCH_TERM,\r\n  UPDATE_PAGE_INDEX,\r\n  UPDATE_CURRENT_FACET,\r\n  UPDATE_SELECTED_FILTERS,\r\n  UPDATE_CURRENT_TAB,\r\n  UPDATE_SORT_ORDER,\r\n  SET_SEARCH_FILTERS,\r\n  APPLY_CONFIG,\r\n} from './types';\r\nimport {\r\n  navigate,\r\n  updateCurrentFacet as updateCurrentFacetAction,\r\n  withMappers,\r\n} from './actions';\r\nimport {\r\n  getCurrentFacet,\r\n  getPageIndex,\r\n  getFacets,\r\n  getSearchTabs,\r\n  getCustomApi,\r\n  getSelectedFilters,\r\n  getFacet,\r\n  getIsSsr,\r\n  getFiltersToLoad,\r\n  getResults,\r\n  selectVersionStatus,\r\n} from './selectors';\r\nimport { searchQuery, filterQuery } from './queries';\r\nimport mapStateToSearchUri from '../transformations/state-to-searchuri';\r\nimport mapSearchResultToState, {\r\n  facetTemplate,\r\n  filterTemplate,\r\n} from '../transformations/searchresult-to-state.mapper';\r\nimport { filtering, searchFacet } from './schema';\r\nimport { generateQueryParams, debugExecuteSearch } from './util';\r\nimport mapEntriesToFilterItems from '../transformations/entry-to-filteritem.mapper';\r\nimport { AppState, Filter } from '../models/SearchState';\r\nimport {\r\n  ApplySearchFilterAction,\r\n  ClearFiltersAction,\r\n  EnsureSearchAction,\r\n  ExecuteSearchAction,\r\n  InitListingAction,\r\n  LoadFiltersCompleteAction,\r\n  LoadFiltersSearchResults,\r\n  SearchResults,\r\n  SetSearchEntriesAction,\r\n  SetSearchEntriesParams,\r\n  TriggerSearchAction,\r\n  UpdateCurrentFacetAction,\r\n  UpdateCurrentTabAction,\r\n  UpdatePageIndexAction,\r\n  UpdateSearchTermAction,\r\n  UpdateSortOrderAction,\r\n  WithMappers,\r\n} from '../models/SearchActions';\r\nimport { Mappers } from '../models/Search';\r\nimport { Context } from '../models/Enums';\r\nimport { TimedSearchResponse } from '../models/SearchUtil';\r\n\r\nexport const searchSagas = [\r\n  takeEvery(CLEAR_FILTERS, clearFilters),\r\n  takeEvery(DO_SEARCH, doSearch),\r\n  takeEvery(SET_ROUTE_FILTERS, loadFilters),\r\n  takeEvery(SET_SEARCH_ENTRIES, preloadOtherFacets),\r\n  takeEvery(UPDATE_CURRENT_FACET, updateCurrentFacet),\r\n  takeEvery(UPDATE_CURRENT_TAB, updateCurrentTab),\r\n  takeEvery(UPDATE_PAGE_INDEX, updatePageIndex),\r\n  takeEvery(UPDATE_SEARCH_TERM, updateSearchTerm),\r\n  takeEvery(UPDATE_SORT_ORDER, updateSortOrder),\r\n  takeEvery(UPDATE_SELECTED_FILTERS, applySearchFilter),\r\n];\r\n\r\nexport function* setRouteFilters(action: InitListingAction) {\r\n  const { mappers, params, listingType, defaultLang, debug } = action;\r\n  const context = listingType ? Context.listings : Context.facets;\r\n  const state: AppState = yield select();\r\n  const ssr = getIsSsr(state);\r\n\r\n  // Get current facet from params or state\r\n  let currentFacet = (params && params.facet) || listingType;\r\n\r\n  // Pick the default facet from initialState\r\n  if (!currentFacet) {\r\n    const tabs = getSearchTabs(state);\r\n    currentFacet =\r\n      tabs.getIn([0, 'defaultFacet'], '') || getFacets(state).keySeq().first();\r\n  }\r\n\r\n  const nextAction = {\r\n    type: SET_ROUTE_FILTERS,\r\n    context,\r\n    facet: currentFacet,\r\n    mappers,\r\n    params,\r\n    defaultLang,\r\n    ssr,\r\n    debug,\r\n  } as InitListingAction;\r\n  yield put(nextAction);\r\n\r\n  // Using call instead of triggering from the put\r\n  // to allow this exported saga to continue during SSR\r\n  yield call(ensureSearch, { ...nextAction, ogState: state });\r\n}\r\n\r\nexport function* doSearch(action: TriggerSearchAction) {\r\n  const state: AppState = yield select();\r\n  if (action.config) {\r\n    // If the action contains a config object, we can add this to the\r\n    // state at runtime\r\n    yield put({ ...action, type: APPLY_CONFIG });\r\n  }\r\n\r\n  const nextAction = {\r\n    ...action,\r\n    type: SET_SEARCH_FILTERS,\r\n    ssr: getIsSsr(state),\r\n  } as InitListingAction;\r\n  yield put(nextAction);\r\n\r\n  yield call(ensureSearch, { ...nextAction, ogState: state });\r\n}\r\n\r\nfunction* loadFilters(action: InitListingAction) {\r\n  const { facet: facetKey, context, mappers = {} as Mappers } = action;\r\n  const filtersToLoad = (yield select(\r\n    getFiltersToLoad,\r\n    facetKey,\r\n    context\r\n  )) as List<string>;\r\n  if (filtersToLoad.size > 0) {\r\n    yield put({\r\n      type: LOAD_FILTERS,\r\n      filtersToLoad,\r\n      facetKey,\r\n      context,\r\n    });\r\n    const selectedKeys = (yield select(\r\n      getSelectedFilters,\r\n      facetKey,\r\n      context\r\n    )) as Map<string, List<string>>;\r\n    const facet = (yield select(\r\n      getFacet,\r\n      facetKey,\r\n      context\r\n    )) as typeof searchFacet;\r\n    const filters = facet.get('filters', Map()) as Map<\r\n      string,\r\n      typeof filtering\r\n    >;\r\n    const projectId = facet.get('projectId', '') as string;\r\n\r\n    const filtersToLoadSagas =\r\n      filters &&\r\n      filtersToLoad\r\n        .map((filterKey = '') => {\r\n          return call(loadFilter, {\r\n            facetKey,\r\n            filterKey,\r\n            filter: filters.get(filterKey) as typeof filtering,\r\n            projectId,\r\n            selectedKeys: selectedKeys.get(filterKey) as List<string>,\r\n            context,\r\n            mapper:\r\n              ('filterItems' in mappers && mappers.filterItems) ||\r\n              mapEntriesToFilterItems,\r\n          } as LoadFilterAction);\r\n        })\r\n        .toJS();\r\n    if (filtersToLoadSagas) yield all(filtersToLoadSagas);\r\n  }\r\n}\r\n\r\ntype LoadFilterAction = {\r\n  facetKey: string;\r\n  filterKey: string;\r\n  filter: typeof filtering;\r\n  projectId: string;\r\n  selectedKeys: List<string>;\r\n  context: Context;\r\n  mapper: Mappers['filterItems'];\r\n};\r\n\r\nfunction* loadFilter(action: LoadFilterAction) {\r\n  const {\r\n    facetKey,\r\n    filterKey,\r\n    filter,\r\n    projectId,\r\n    selectedKeys,\r\n    context,\r\n    mapper,\r\n  } = action;\r\n  const { contentTypeId, customWhere, path } =\r\n    'toJS' in filter\r\n      ? (filter.toJS() as Filter)\r\n      : (filter as unknown as Filter);\r\n  const createStateFrom: LoadFiltersSearchResults = {\r\n    type: LOAD_FILTERS_COMPLETE,\r\n    context,\r\n    error: undefined,\r\n    facetKey,\r\n    filterKey,\r\n    payload: {} as TaxonomyNode | PagedList<Entry>,\r\n    selectedKeys,\r\n    mapper,\r\n  };\r\n\r\n  try {\r\n    if (contentTypeId) {\r\n      const versionStatus = (yield select(\r\n        selectVersionStatus\r\n      )) as VersionStatus;\r\n      const query = filterQuery(\r\n        Array.isArray(contentTypeId) ? contentTypeId : [contentTypeId],\r\n        versionStatus,\r\n        customWhere\r\n      );\r\n      const payload = (yield cachedSearch.search(\r\n        query,\r\n        0,\r\n        projectId\r\n      )) as PagedList<Entry>;\r\n\r\n      if (!payload) throw new Error('No payload returned by search');\r\n      if ((payload as any).type === 'error') throw payload;\r\n\r\n      createStateFrom.payload = payload;\r\n    }\r\n    if (path) {\r\n      const payload = (yield cachedSearch.getTaxonomyNodeByPath(\r\n        path,\r\n        projectId\r\n      )) as TaxonomyNode;\r\n\r\n      if (!payload)\r\n        throw new Error(`No payload returned for taxonomy path: '${path}'`);\r\n      if ((payload as any).type === 'error') throw payload;\r\n\r\n      createStateFrom.payload = payload;\r\n    }\r\n  } catch (error) {\r\n    createStateFrom.type = LOAD_FILTERS_ERROR;\r\n    createStateFrom.error = error;\r\n  }\r\n\r\n  const nextAction = mapSearchResultToState<\r\n    LoadFiltersSearchResults,\r\n    LoadFiltersCompleteAction\r\n  >(createStateFrom, filterTemplate);\r\n  yield put(nextAction);\r\n}\r\n\r\nfunction* ensureSearch(action: EnsureSearchAction) {\r\n  const { context, facet, debug } = action;\r\n  try {\r\n    const state = (yield select()) as AppState;\r\n    const nextAction = { ...action, ogState: action.ogState || state };\r\n\r\n    const [queryParams, runSearch] = generateQueryParams(nextAction, state);\r\n\r\n    if (debug && (debug === true || debug.executeSearch))\r\n      debugExecuteSearch(nextAction, state);\r\n\r\n    if (runSearch) {\r\n      yield put({ type: EXECUTE_SEARCH, facet, context });\r\n      yield call(executeSearch, {\r\n        ...nextAction,\r\n        context,\r\n        facet,\r\n        queryParams,\r\n        debug,\r\n      } as ExecuteSearchAction);\r\n    }\r\n  } catch (error: any) {\r\n    log.error(...['Error running search saga:', error, error.stack]);\r\n  }\r\n}\r\n\r\nfunction* executeSearch(action: ExecuteSearchAction) {\r\n  const { context, facet, queryParams, mappers } = action;\r\n  try {\r\n    const state = (yield select()) as AppState;\r\n    let result = {} as TimedSearchResponse;\r\n    let featuredResult: TimedSearchResponse | undefined;\r\n    let featuredQuery: Query;\r\n    const customApi = getCustomApi(state, facet, context);\r\n\r\n    if (customApi) {\r\n      const apiParams =\r\n        (typeof mappers === 'object' &&\r\n          typeof mappers.customApi === 'function' &&\r\n          mappers.customApi(queryParams)) ||\r\n        ({} as { [key: string]: string });\r\n\r\n      result.payload = (yield callCustomApi<any>(\r\n        customApi,\r\n        apiParams\r\n      )) as any[];\r\n      result.duration = 1;\r\n    } else {\r\n      if (queryParams.featuredResults) {\r\n        featuredQuery = searchQuery(queryParams, true);\r\n        featuredResult = (yield timedSearch(\r\n          featuredQuery,\r\n          queryParams.linkDepth,\r\n          queryParams.projectId,\r\n          queryParams.env\r\n        )) as TimedSearchResponse;\r\n        // eslint-disable-next-line require-atomic-updates\r\n        queryParams.excludeIds = getItemsFromResult(featuredResult)\r\n          .map(fi => fi?.sys?.id)\r\n          .filter(fi => typeof fi === 'string') as string[];\r\n      }\r\n      const query = searchQuery(queryParams);\r\n\r\n      result = yield timedSearch(\r\n        query,\r\n        queryParams.linkDepth,\r\n        queryParams.projectId,\r\n        queryParams.env\r\n      );\r\n    }\r\n\r\n    const createStateFrom: SearchResults = {\r\n      action,\r\n      featuredResult,\r\n      pageIndex:\r\n        (queryParams.internalPaging && queryParams.internalPageIndex) ||\r\n        queryParams.pageIndex,\r\n      prevResults: getResults(state, facet, action.context),\r\n      result,\r\n      state,\r\n    };\r\n\r\n    const nextAction = mapSearchResultToState<\r\n      SearchResults,\r\n      SetSearchEntriesParams\r\n    >(createStateFrom, facetTemplate);\r\n    yield put(nextAction);\r\n  } catch (error: any) {\r\n    log.error(...['Error running search saga:', error, error.stack]);\r\n  }\r\n}\r\n\r\nfunction* preloadOtherFacets(action: SetSearchEntriesAction) {\r\n  const { preload, context, facet, debug } = action;\r\n  const state = (yield select()) as AppState;\r\n  const currentFacet = getCurrentFacet(state);\r\n\r\n  if (!preload && facet === currentFacet && context !== Context.listings) {\r\n    const allFacets = getFacets(state).toJS();\r\n    const otherFacets = Object.keys(allFacets).filter(f => f !== currentFacet);\r\n\r\n    yield all(\r\n      otherFacets.map((preloadFacet = '') => {\r\n        const preloadAction = {\r\n          ...action,\r\n          facet: preloadFacet,\r\n          preload: true,\r\n        };\r\n        const [queryParams, runSearch] = generateQueryParams(\r\n          preloadAction,\r\n          state\r\n        );\r\n\r\n        if (debug && (debug === true || debug.preloadOtherFacets))\r\n          debugExecuteSearch(preloadAction, state);\r\n\r\n        return (\r\n          runSearch &&\r\n          call(executeSearch, {\r\n            ...action,\r\n            type: EXECUTE_SEARCH_PRELOAD,\r\n            preload: true,\r\n            facet: preloadFacet,\r\n            queryParams,\r\n          } as ExecuteSearchAction & SetSearchEntriesParams)\r\n        );\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nfunction* updateCurrentTab(action: WithMappers<UpdateCurrentTabAction>) {\r\n  const { id, mappers } = action;\r\n  const state = (yield select()) as AppState;\r\n  const facets = getFacets(state);\r\n  const tabs = getSearchTabs(state);\r\n  let nextFacet = tabs.getIn([id, 'currentFacet']);\r\n  if (!nextFacet) {\r\n    facets.map((facet = Map(), facetName) => {\r\n      if (\r\n        facet.get('tabId') === id &&\r\n        tabs.getIn([id, 'defaultFacet']) === facetName\r\n      )\r\n        nextFacet = facetName;\r\n    });\r\n  }\r\n  // If the next Tab does not have a defaultFacet,\r\n  // take the first facet for that tab\r\n  if (!nextFacet)\r\n    nextFacet = facets\r\n      .filter((f = Map()) => f.get('tabId') === id)\r\n      .keySeq()\r\n      .first();\r\n\r\n  yield put(withMappers(updateCurrentFacetAction(nextFacet), mappers));\r\n}\r\n\r\nfunction* clearFilters(action: WithMappers<ClearFiltersAction>) {\r\n  const { mappers } = action;\r\n  const uri = (yield buildUri({}, mappers)) as string;\r\n  yield put(navigate(uri));\r\n}\r\n\r\nfunction* updateCurrentFacet(action: WithMappers<UpdateCurrentFacetAction>) {\r\n  const { facet, mappers } = action;\r\n  const pageIndex = (yield select(getPageIndex, facet)) as number;\r\n  const uri = (yield buildUri({ facet, pageIndex }, mappers)) as string;\r\n  yield put(navigate(uri));\r\n}\r\n\r\nfunction* updateSearchTerm(action: WithMappers<UpdateSearchTermAction>) {\r\n  const { term, mappers } = action;\r\n  const uri = (yield buildUri({ term }, mappers)) as string;\r\n  yield put(navigate(uri));\r\n}\r\n\r\nfunction* updateSortOrder(action: WithMappers<UpdateSortOrderAction>) {\r\n  const { orderBy, facet, mappers } = action;\r\n  const uri = (yield buildUri({ orderBy, facet }, mappers)) as string;\r\n  yield put(navigate(uri));\r\n}\r\n\r\nfunction* updatePageIndex(action: WithMappers<UpdatePageIndexAction>) {\r\n  const { pageIndex, mappers } = action;\r\n  const uri = (yield buildUri({ pageIndex }, mappers)) as string;\r\n  yield put(navigate(uri));\r\n}\r\n\r\nfunction* applySearchFilter(action: WithMappers<ApplySearchFilterAction>) {\r\n  const { mappers } = action;\r\n  const uri = (yield buildUri({}, mappers)) as string;\r\n  yield put(navigate(uri));\r\n}\r\n\r\nfunction* buildUri(\r\n  {\r\n    facet,\r\n    orderBy,\r\n    pageIndex = 0,\r\n    term,\r\n  }: { facet?: string; orderBy?: string; pageIndex?: number; term?: string },\r\n  mappers: Mappers\r\n) {\r\n  const state = (yield select()) as AppState;\r\n  const mapUri = (mappers && mappers.navigate) || mapStateToSearchUri;\r\n  const uri = mapUri({ state, facet, orderBy, pageIndex, term });\r\n  // return uri;\r\n  return `${uri.path}${(uri.search && `?${uri.search}`) || ''}${\r\n    (uri.hash && `#${uri.hash}`) || ''\r\n  }`;\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Context } from '../models/Enums';\r\nimport { Facet, Mappers } from '../models/Search';\r\nimport { DebugFlags } from '../models/SearchActions';\r\nimport { AppState } from '../models/SearchState';\r\nimport { triggerSearch } from '../redux/actions';\r\nimport {\r\n  getResults,\r\n  getIsLoading,\r\n  getFacet,\r\n  getPaging,\r\n  getSearchTerm,\r\n  getFilters,\r\n} from '../redux/selectors';\r\n\r\ntype UseMiniListProps = {\r\n  id: string;\r\n  config?: Facet;\r\n  debug?: DebugFlags;\r\n  defaultLang?: string;\r\n  excludeIds?: string[];\r\n  mapper?: Mappers['results'];\r\n  mappers?: Mappers;\r\n  params?: { [key: string]: string };\r\n};\r\n\r\nconst useMinilist = (\r\n  {\r\n    id,\r\n    config,\r\n    excludeIds,\r\n    mapper,\r\n    mappers,\r\n    params,\r\n    defaultLang,\r\n    debug,\r\n  }: UseMiniListProps = { id: '' }\r\n) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { facet, filters, isLoading, pagingInfo, results, searchTerm } =\r\n    useSelector((state: AppState) => ({\r\n      facet: getFacet(state, id, Context.minilist).toJS(),\r\n      filters: getFilters(state, id, Context.minilist).toJS(),\r\n      isLoading: getIsLoading(state, Context.minilist, id),\r\n      pagingInfo: getPaging(state, id, Context.minilist).toJS(),\r\n      results: getResults(state, id, Context.minilist).toJS(),\r\n      searchTerm: getSearchTerm(state),\r\n    }));\r\n\r\n  useEffect(() => {\r\n    if (id && (mapper || (mappers && mappers.results))) {\r\n      dispatch(\r\n        triggerSearch({\r\n          config,\r\n          context: Context.minilist,\r\n          defaultLang,\r\n          facet: id,\r\n          mapper,\r\n          mappers,\r\n          params,\r\n          excludeIds,\r\n          debug,\r\n        })\r\n      );\r\n    }\r\n  }, [dispatch, excludeIds, id, defaultLang, params]);\r\n\r\n  return {\r\n    filters,\r\n    isLoading,\r\n    pagingInfo,\r\n    results,\r\n    searchTerm,\r\n    title: facet.title,\r\n  };\r\n};\r\n\r\nexport default useMinilist;\r\n","import { List, Map, OrderedMap } from 'immutable';\r\nimport { CustomWhereClause } from '../models/Search';\r\nimport { Filter, FilterItem, SearchState } from '../models/SearchState';\r\n\r\nexport const entries = Map({\r\n  isLoading: false,\r\n  isError: false,\r\n  items: List(),\r\n});\r\n\r\nexport const pagingInfo = Map({\r\n  isLoading: false,\r\n  pageCount: 0,\r\n  pageIndex: 0,\r\n  pageSize: 0,\r\n  pagesLoaded: List(),\r\n  prevPageIndex: 0,\r\n  totalCount: 0,\r\n});\r\n\r\nexport const searchFacet = OrderedMap({\r\n  title: null,\r\n  featuredEntries: entries,\r\n  featuredResults: List(),\r\n  entries,\r\n  results: List(),\r\n  queryParams: Map(),\r\n  filters: Map(),\r\n  queryDuration: 0,\r\n  pagingInfo,\r\n  projectId: '',\r\n});\r\n\r\nexport const searchTab = Map({\r\n  currentFacet: undefined,\r\n  facets: OrderedMap(),\r\n  id: 0,\r\n  label: undefined,\r\n  totalCount: '',\r\n});\r\n\r\nexport const filtering = Map({\r\n  isLoading: false,\r\n  isError: false,\r\n  isGrouped: false,\r\n  title: undefined,\r\n  contentTypeId: undefined,\r\n  customWhere: List(),\r\n  fieldId: undefined,\r\n  items: List<typeof filterItem>(),\r\n} as Omit<Filter, 'customWhere' | 'items'> & { customWhere?: List<CustomWhereClause>; items?: List<typeof filterItem> });\r\n\r\nexport const filterItem = Map({\r\n  key: '',\r\n  type: undefined,\r\n  title: undefined,\r\n  path: undefined,\r\n  isSelected: false,\r\n} as FilterItem);\r\n\r\nconst config = Map({\r\n  isLoaded: false,\r\n  isError: false,\r\n});\r\n\r\nconst searchState: SearchState = {\r\n  currentFacet: '',\r\n  term: '',\r\n  facets: OrderedMap(),\r\n  tabs: List(),\r\n  config,\r\n};\r\n\r\nexport const initialState = OrderedMap(searchState);\r\n","// eslint-disable no-console\r\nimport { List, Map, OrderedMap, fromJS } from 'immutable';\r\n\r\nimport {\r\n  entries,\r\n  filterItem,\r\n  searchFacet,\r\n  initialState,\r\n  filtering,\r\n} from './schema';\r\nimport {\r\n  APPLY_CONFIG,\r\n  CLEAR_FILTERS,\r\n  EXECUTE_SEARCH,\r\n  EXECUTE_SEARCH_ERROR,\r\n  LOAD_FILTERS,\r\n  LOAD_FILTERS_COMPLETE,\r\n  LOAD_FILTERS_ERROR,\r\n  SET_ROUTE_FILTERS,\r\n  SET_SEARCH_FILTERS,\r\n  SET_SEARCH_ENTRIES,\r\n  UPDATE_SEARCH_TERM,\r\n  UPDATE_SELECTED_FILTERS,\r\n  UPDATE_SORT_ORDER,\r\n  UPDATE_PAGE_INDEX,\r\n} from './types';\r\nimport { toArray } from '../search/util';\r\nimport { ConfigTypes, Facet, Listing, SearchConfig } from '../models/Search';\r\nimport { Context } from '../models/Enums';\r\n\r\nconst addConfigToState = (state: typeof initialState, action: any) => {\r\n  const { context, facet, config } = action;\r\n  // Adding or changing the config of a single facet, listing or minilist\r\n  if (context && facet && config) {\r\n    return state.setIn([context, facet], fromJS(config));\r\n  } else if (config) {\r\n    // Changing the entire search config\r\n    const newState = fromJS(config);\r\n    return newState;\r\n  }\r\n  return state;\r\n};\r\n\r\nconst generateSearchFacets = (context: Context, config: SearchConfig) => {\r\n  let facets = OrderedMap<string, OrderedMap<string, typeof searchFacet>>();\r\n  if (config) {\r\n    const thisConfig: ConfigTypes = config[context] || {};\r\n    if (Object.keys(thisConfig).length > 0) {\r\n      Object.entries(thisConfig).map(\r\n        ([facetName, facet]: [string, Facet | Listing]) => {\r\n          const newFacet = searchFacet.merge(fromJS(facet));\r\n          if (!('isDisabled' in facet) || facet.isDisabled !== true)\r\n            facets = facets.set(\r\n              facetName,\r\n              newFacet as OrderedMap<string, typeof searchFacet>\r\n            );\r\n        }\r\n      );\r\n    }\r\n  }\r\n  return facets;\r\n};\r\n\r\nconst generateFiltersState = (\r\n  {\r\n    facet,\r\n    params,\r\n    context,\r\n    isCurrentFacet,\r\n  }: {\r\n    facet: string;\r\n    params: { [k: string]: string };\r\n    context: Context;\r\n    isCurrentFacet: boolean;\r\n  },\r\n  state: typeof initialState\r\n) => {\r\n  // Remove filters we know about from params\r\n  const filterParams = fromJS({\r\n    ...params,\r\n    facet: undefined,\r\n    orderBy: undefined,\r\n    pageIndex: undefined,\r\n    term: undefined,\r\n  }) as Map<string, string>;\r\n\r\n  // Get any existing filters and normalise the items[]\r\n  // so we can start off with isSelected is false\r\n  let filters = state\r\n    .getIn([context, facet, 'filters'], Map({}))\r\n    .map((filter: typeof filtering) =>\r\n      isCurrentFacet || filter.get('isGrouped')\r\n        ? filter.set(\r\n            'items',\r\n            (filter.get('items') as List<typeof filterItem>).map(item =>\r\n              item?.set('isSelected', false)\r\n            ) as List<typeof filterItem>\r\n          )\r\n        : filter\r\n    );\r\n\r\n  const addFilterItem = (\r\n    filters: Map<string, typeof filtering>,\r\n    paramKey: string,\r\n    paramValue: string\r\n  ) =>\r\n    // Iterate through all filters within the facet,\r\n    // if the paramKey matches the filter key\r\n    // get the existing items list, and see if that filter\r\n    // already exists, if so set isSelected to true,\r\n    // if not create a new filterItem, setting the key only\r\n    // so we can match this key later on when we load the filters\r\n    filters.map((filter = Map(), key) => {\r\n      if (paramKey !== key || (!isCurrentFacet && !filter.get('isGrouped'))) {\r\n        return filter;\r\n      } else {\r\n        const items = (filter.get('items') || List()) as List<\r\n          typeof filterItem\r\n        >;\r\n        const itemIndex = items.findIndex(\r\n          item => (item?.get('key') as unknown as string) === paramValue\r\n        );\r\n        if (items.size > 0 && itemIndex !== -1)\r\n          return filter.setIn(['items', itemIndex, 'isSelected'], true);\r\n\r\n        return filter.set(\r\n          'items',\r\n          ((filter.get('items') || List()) as List<typeof filterItem>).push(\r\n            filterItem.set('key', paramValue as any).set('isSelected', true)\r\n          )\r\n        );\r\n      }\r\n    });\r\n\r\n  // For each value found in filterParams\r\n  // we are looking to split that value into multiple by any comma\r\n  // and then either set isSelected for an existing filterItem\r\n  // or push an item to the filters.{ key }.items[] array\r\n  // giving it only the key (entry guid) that can be taken to filter\r\n  // the search results during SSR without needing to fetch the filters first\r\n  filterParams.map(\r\n    (paramValue, paramName = '') =>\r\n      paramValue &&\r\n      paramValue\r\n        .split(',')\r\n        .map(pVal => (filters = addFilterItem(filters, paramName, pVal)))\r\n  );\r\n\r\n  return filters;\r\n};\r\n\r\nconst resetFacets = (state: typeof initialState, context: Context) =>\r\n  OrderedMap(\r\n    (state.get(context) as Map<string, typeof searchFacet>).map(\r\n      (v = OrderedMap()) => resetFacet(v)\r\n    )\r\n  );\r\n\r\nconst resetFacet = (facet: typeof searchFacet) =>\r\n  facet\r\n    .setIn(['pagingInfo', 'pagesLoaded'], fromJS([]))\r\n    .setIn(['pagingInfo', 'pageIndex'], 0)\r\n    .setIn(['queryDuration'], 0);\r\n\r\nexport default (config: SearchConfig) => {\r\n  // Add facets from SearchConfig to initialState\r\n  const initState = initialState\r\n    .set('tabs', fromJS(config.tabs))\r\n    .set('facets', generateSearchFacets(Context.facets, config))\r\n    .set('listings', generateSearchFacets(Context.listings, config))\r\n    .set('minilist', generateSearchFacets(Context.minilist, config));\r\n\r\n  return (state: typeof initState = initState, action: any) => {\r\n    const context = state.get('context') as Context;\r\n    const current = state.get(\r\n      context !== 'listings' ? 'currentFacet' : 'currentListing'\r\n    ) as string;\r\n\r\n    switch (action.type) {\r\n      case APPLY_CONFIG: {\r\n        return addConfigToState(state, action);\r\n      }\r\n      case CLEAR_FILTERS: {\r\n        const currentFilters = state.getIn([\r\n          context,\r\n          current,\r\n          'filters',\r\n        ]) as Map<string, typeof filtering>;\r\n        return state\r\n          .setIn(\r\n            [context, current, 'filters'],\r\n            currentFilters.map(filter => {\r\n              const filterItems = ((filter && filter.get('items')) ||\r\n                []) as List<typeof filterItem>;\r\n              return filter?.set(\r\n                'items',\r\n                filterItems.map(item => item?.set('isSelected', false)) as List<\r\n                  typeof filterItem\r\n                >\r\n              );\r\n            })\r\n          )\r\n          .setIn([context, current, 'queryDuration'], 0)\r\n          .setIn([context, current, 'pagingInfo', 'pagesLoaded'], fromJS([]));\r\n      }\r\n      case EXECUTE_SEARCH: {\r\n        return state.setIn(\r\n          [action.context, action.facet, 'entries', 'isLoading'],\r\n          true\r\n        );\r\n      }\r\n      case EXECUTE_SEARCH_ERROR: {\r\n        return state.setIn(\r\n          [action.context, action.facet, 'entries'],\r\n          entries.set('isError', true).set('error', fromJS(action.error))\r\n        );\r\n      }\r\n      case LOAD_FILTERS: {\r\n        const { facetKey, filtersToLoad } = action;\r\n        const filters = state.getIn([\r\n          action.context,\r\n          facetKey,\r\n          'filters',\r\n        ]) as Map<string, typeof filtering>;\r\n\r\n        return state.setIn(\r\n          [action.context, facetKey, 'filters'],\r\n          filters.map((filter = Map(), filterKey) =>\r\n            filtersToLoad.find((f: string) => f === filterKey)\r\n              ? filter.set('isLoading', true)\r\n              : filter\r\n          )\r\n        );\r\n      }\r\n      case LOAD_FILTERS_ERROR:\r\n      case LOAD_FILTERS_COMPLETE: {\r\n        const { facetKey, filterKey, nextFilter } = action;\r\n        const filter = state.getIn([\r\n          action.context,\r\n          facetKey,\r\n          'filters',\r\n          filterKey,\r\n        ]);\r\n\r\n        if (\r\n          !(nextFilter.items && nextFilter.items.length > 0) &&\r\n          filter.get('items').size >= nextFilter.items.length\r\n        )\r\n          // Preserve items already in state\r\n          return state.setIn(\r\n            [action.context, facetKey, 'filters', filterKey],\r\n            filter.set('isLoading', false).set('isError', nextFilter.isError)\r\n          );\r\n\r\n        return state.setIn(\r\n          [action.context, facetKey, 'filters', filterKey],\r\n          filter.merge(fromJS(nextFilter))\r\n        );\r\n      }\r\n      case SET_ROUTE_FILTERS: {\r\n        const { facet, params, context } = action;\r\n        const { term = '', pageIndex, orderBy } = params;\r\n\r\n        const stateTerm = state.get('term');\r\n        const tabId = state.getIn([context, facet, 'tabId'], 0);\r\n\r\n        // Reset the facet if the search term has changed, or if the any of\r\n        // the filters have changed\r\n        const resetAllFacets = stateTerm && term !== stateTerm;\r\n        let resetCurrentFacet = false;\r\n\r\n        // Add filter values in params to the matched filters in state for the current facet\r\n        // causing unfetched filter items to be generated with isSelected: true\r\n        // or existing filter items to be tagged with isSelected: true\r\n        const nextFacets = (\r\n          state.get(context) as OrderedMap<string, typeof searchFacet>\r\n        ).map((stateFacet = Map(), facetName = '') => {\r\n          const isCurrentFacet = facetName === facet;\r\n          const nextFilters = generateFiltersState(\r\n            {\r\n              facet: facetName,\r\n              params,\r\n              context,\r\n              isCurrentFacet,\r\n            },\r\n            state\r\n          );\r\n\r\n          resetCurrentFacet =\r\n            state.getIn(['config', 'isLoaded'], false) === true &&\r\n            !nextFilters.equals(stateFacet.get('filters'));\r\n\r\n          return (resetCurrentFacet ? resetFacet(stateFacet) : stateFacet)\r\n            .set('filters', nextFilters)\r\n            .setIn(['queryParams', 'dynamicOrderBy'], toArray(orderBy));\r\n        });\r\n\r\n        const nextState = state\r\n          .set('context', context)\r\n          .set(context, nextFacets as any)\r\n          .set(\r\n            action.context === Context.facets\r\n              ? 'currentFacet'\r\n              : 'currentListing',\r\n            facet\r\n          )\r\n          .set('term', term)\r\n          .setIn(['tabs', tabId, 'currentFacet'], facet)\r\n          .setIn(\r\n            [context, facet, 'pagingInfo', 'pageIndex'],\r\n            Number(pageIndex) - 1 ||\r\n              (state.getIn([context, facet, 'queryParams', 'loadMorePaging'])\r\n                ? state.getIn([context, facet, 'pagingInfo', 'pageIndex'], 0)\r\n                : 0)\r\n          )\r\n          .setIn(['config', 'isLoaded'], true)\r\n          .setIn(['config', 'ssr'], typeof window === 'undefined');\r\n\r\n        return resetAllFacets\r\n          ? nextState.set(context, resetFacets(nextState, context) as any)\r\n          : nextState;\r\n      }\r\n      case SET_SEARCH_ENTRIES: {\r\n        const thisContext = action.context || context;\r\n        const currentFacet = state.getIn([thisContext, action.facet]);\r\n        return state.setIn(\r\n          [thisContext, action.facet],\r\n          currentFacet.merge(fromJS(action.nextFacet))\r\n        );\r\n      }\r\n      case SET_SEARCH_FILTERS: {\r\n        // DO SEARCH then SET_SEARCH_FILTERS is for when we cannot use SET_ROUTE_FILTERS\r\n        // for example in a minilist scenario where the route filters\r\n        // are used for the primary page / listing navigation\r\n\r\n        // Add filter values in params to the matched filters in state\r\n        // causing unfetched filter items to be generated with isSelected: true\r\n        const filters = generateFiltersState(\r\n          { ...action, isCurrentFacet: true },\r\n          state\r\n        );\r\n\r\n        const term = action?.params?.term;\r\n        const useSearchTerm = state.getIn(\r\n          [\r\n            action.context || Context.minilist,\r\n            action.facet,\r\n            'queryParams',\r\n            'useSearchTerm',\r\n          ],\r\n          false\r\n        );\r\n\r\n        return state\r\n          .setIn(\r\n            [action.context || Context.minilist, action.facet, 'filters'],\r\n            filters\r\n          )\r\n          .setIn(\r\n            [\r\n              action.context || Context.minilist,\r\n              action.facet,\r\n              'queryParams',\r\n              'excludeIds',\r\n            ],\r\n            fromJS(action.excludeIds)\r\n          )\r\n          .set('term', useSearchTerm ? term : state.get('term'))\r\n          .setIn(['config', 'ssr'], typeof window === 'undefined');\r\n      }\r\n      case UPDATE_PAGE_INDEX: {\r\n        const { pageIndex } = action;\r\n        const internalPaging = state.getIn(\r\n          [context, current, 'queryParams', 'internalPaging'],\r\n          false\r\n        );\r\n\r\n        const currentPageIndex = state.getIn(\r\n          [context, current, 'pagingInfo', 'pageIndex'],\r\n          0\r\n        );\r\n\r\n        const nextState = state\r\n          .setIn(\r\n            [context, current, 'pagingInfo', 'pageIndex'],\r\n            Number(pageIndex) || 0\r\n          )\r\n          .setIn(\r\n            [context, current, 'pagingInfo', 'prevPageIndex'],\r\n            currentPageIndex\r\n          )\r\n          .setIn([context, current, 'pagingInfo', 'isLoading'], true);\r\n\r\n        if (internalPaging) return nextState;\r\n\r\n        return nextState.setIn([context, current, 'queryDuration'], 0);\r\n      }\r\n      case UPDATE_SEARCH_TERM: {\r\n        return state\r\n          .set('term', action.term)\r\n          .set(context, resetFacets(state, context) as any);\r\n      }\r\n      case UPDATE_SELECTED_FILTERS: {\r\n        const { filter, key } = action;\r\n\r\n        const isSingleSelect = state.getIn(\r\n          [context, current, 'filters', filter, 'isSingleSelect'],\r\n          false\r\n        );\r\n        const isGrouped = state.getIn(\r\n          [context, current, 'filters', filter, 'isGrouped'],\r\n          false\r\n        );\r\n\r\n        const currentItems = state.getIn([\r\n          context,\r\n          current,\r\n          'filters',\r\n          filter,\r\n          'items',\r\n        ]) as List<typeof filterItem>;\r\n        return state\r\n          .set(\r\n            context,\r\n            isGrouped\r\n              ? (resetFacets(state, context) as any)\r\n              : (state.get(context) as OrderedMap<string, typeof searchFacet>)\r\n          )\r\n          .setIn(\r\n            [context, current],\r\n            resetFacet(state.getIn([context, current]))\r\n          )\r\n          .setIn(\r\n            [context, current, 'filters', filter, 'items'],\r\n            currentItems.map((item = Map()) => {\r\n              if (item.get('key') === key) {\r\n                return item.set('isSelected', !item.get('isSelected'));\r\n              }\r\n              return isSingleSelect ? item.set('isSelected', false) : item;\r\n            })\r\n          );\r\n      }\r\n      case UPDATE_SORT_ORDER: {\r\n        const { orderBy, facet } = action;\r\n        return state\r\n          .set(context, resetFacets(state, context) as any)\r\n          .setIn(\r\n            [context, facet || current, 'queryParams', 'dynamicOrderBy'],\r\n            orderBy ? fromJS(toArray(orderBy)) : ''\r\n          );\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};\r\n","// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport const Context = {\r\n  facets: 'facets',\r\n  listings: 'listings',\r\n  minilist: 'minilist',\r\n};\r\nexport * from './models';\r\n\r\nexport { default as withSearch } from './containers/withSearch';\r\nexport { default as withListing } from './containers/withListing';\r\nexport { doSearch, setRouteFilters, searchSagas as sagas } from './redux/sagas';\r\n\r\nexport { default as useMinilist } from './hooks/useMinilist.hook';\r\n\r\nexport * as actions from './redux/actions';\r\nexport * as queries from './redux/queries';\r\nexport { default as reducer } from './redux/reducers';\r\nexport * as schema from './redux/schema';\r\nexport * as selectors from './redux/selectors';\r\nexport * as types from './redux/types';\r\n"],"names":["toJS","WrappedComponent","wrappedComponentProps","KEY","VALUE","propsJS","Object","entries","reduce","newProps","wrappedComponentProp","propKey","propValue","ACTION_PREFIX","APPLY_CONFIG","CLEAR_FILTERS","DO_SEARCH","EXECUTE_SEARCH","EXECUTE_SEARCH_ERROR","EXECUTE_SEARCH_PRELOAD","LOAD_FILTERS","LOAD_FILTERS_COMPLETE","LOAD_FILTERS_ERROR","SET_FEATURED_ENTRIES","SET_ROUTE_FILTERS","SET_SEARCH_FILTERS","SET_SEARCH_ENTRIES","SET_SELECTED_FILTER","UPDATE_CURRENT_FACET","UPDATE_CURRENT_TAB","UPDATE_SORT_ORDER","UPDATE_PAGE_INDEX","UPDATE_SEARCH_TERM","UPDATE_SELECTED_FILTERS","withMappers","action","mappers","triggerSearch","config","context","debug","defaultLang","excludeIds","facet","mapper","params","type","initListing","navigate","path","state","clearFilters","updatePageIndex","pageIndex","updateCurrentFacet","updateCurrentTab","id","updateSearchTerm","term","updateSelectedFilters","filter","key","updateSortOrder","orderBy","Context","getSearchContext","getIn","facets","getCurrent","getCurrentFacet","getCurrentListing","getCurrentTab","getFacets","OrderedMap","getTabFacets","v","getFacetTitles","map","Map","title","get","totalCount","toIndexedSeq","toArray","getFacet","facetName","currentFacet","getListing","listing","currentListing","listings","getFilters","getRenderableFilters","f","getFiltersToLoad","filters","loadedFilters","List","i","size","isLoaded","filterKey","toList","getSelectedFilters","isoDateRegex","RegExp","selectedFilters","item","isIsoDate","test","toLowerCase","getResults","current","getIsInternalPaging","getIsLoaded","getIsLoading","getIsSsr","getFeaturedResults","getPaging","getPageIndex","getPrevPageIndex","getPageIsLoading","getPagesLoaded","Set","getTotalCount","getFacetAuthentication","getFeaturedEntryIds","entryIds","entry","getSearchTerm","getSearchTabs","getQueryParams","getQueryParameter","ifnull","getCustomApi","getCustomEnv","getTabsAndFacets","tabs","tab","fieldsToCount","countFields","thisTabFacets","thisTabTotal","find","first","a","b","set","getSearchTotalCount","tabsAndFacets","wholeSearchTotal","t","getFacetsTotalCount","selectFacets","selectListing","selectCurrentPath","selectVersionStatus","withSearch","SearchComponent","Wrapper","props","displayName","name","mapStateToProps","currentPageIndex","currentTabIndex","facetsTotalCount","facetTitles","featuredResults","isLoading","paging","pageIsLoading","results","resultsInfo","searchTerm","searchTotalCount","sortOrder","mapDispatchToProps","connector","connect","withListing","ListingComponent","featured","getClientConfig","project","env","DELIVERY_API_CONFIG","projectId","window","PROXY_DELIVERY_API","rootUrl","responseHandler","CacheNode","constructor","value","next","prev","LruCache","limit","head","tail","node","remove","setHead","CachedSearch","cache","taxonomyLookup","search","query","linkDepth","client","Client","create","request","JSON","stringify","toString","getTaxonomyNodeByPath","taxonomy","getNodeByPath","order","childDepth","then","extendTaxonomyNode","execute","promise","catch","getTaxonomyId","children","n","parts","split","length","cachedSearch","now","Date","performance","fixFreeTextForElastic","s","illegalChars","illegalRegEx","c","join","replace","timedSearch","duration","start","payload","end","getItemsFromResult","result","Array","isArray","items","extractQuotedPhrases","pattern","match","buildUrl","route","qs","queryString","callCustomApi","customApi","apiUri","uri","Error","startsWith","response","fetch","json","removeEmptyAttributes","obj","forEach","val","seperator","areArraysEqualSets","a1","a2","superSet","ai","e","DataFormats","asset","webpage","FilterExpressionTypes","contentType","field","sys","allUris","contentTypeId","dataFormat","filename","includeInSearch","language","versionStatus","Fields","entryDescription","entryTitle","keywords","searchContent","wildcard","fieldExpression","operator","weight","Op","or","fieldId","flat","between","equalToOrIn","undefined","contentTypeIdExpression","contentTypeIds","webpageTemplates","assetTypes","expressions","push","dataFormatExpression","filterExpressions","param","withContentTypeIds","notContentTypeIds","substring","andExpr","and","dataFormatExpr","withExpr","notExpr","not","add","featuredResultsExpression","fieldValue","languagesExpression","languages","includeInSearchExpressions","includeInSearchFields","includeInSearchField","exists","equalTo","defaultExpressions","excludeIdsExpression","expr","orderByExpression","expression","OrderBy","ob","desc","asc","in","handle","betweenValue","valArr","minimum","maximum","console","log","bc","op","customWhereExpressions","where","clause","keys","idx","k","includes","recurseExpr","notKey","notIdx","innerOperator","innerValue","innerField","clauseKey","termExpressions","weightedSearchFields","quotedPhrases","modifiedSearchTerm","qp","trim","operators","containsOp","freeTextOp","wsf","fieldOperators","addRange","freeText","contains","filterQuery","customWhere","Query","pageSize","searchQuery","dynamicOrderBy","fields","isFeatured","count","searchUriTemplate","currentPath","newPath","searchContext","stateFilters","currentSearch","currentQs","parse","mergedSearch","fromJS","merge","hash","$path","$formatting","mapStateToSearchUri","mapJson","mapEntriesToSearchResults","mapperFunc","facetTemplate","nextFacet","isError","featuredEntries","featuredResult","queryDuration","pagingInfo","pageCount","$default","pagesLoaded","loaded","pages","isNaN","l","sort","prevPageIndex","preloaded","prevResults","loadMorePaging","queryParams","nextResults","r","_pageIndex","_pagePosition","loadedPages","firstResultSet","secondResultSet","onlyResultSet","preload","ogState","filterTemplate","facetKey","nextFilter","selectedKeys","isSelected","error","$disable","filterExpressionMapper","expressionType","mapFilterToFilterExpression","mapFiltersToFilterExpression","fkey","selectedValue","selectedItems","itm","queryParamsTemplate","root","filterParams","internalPageIndex","internalPaging","minilist","deduped","groupBy","mapStateToQueryParams","sourceJson","generateQueryParams","runSearch","ssr","willRun","facetIsLoaded","stateParams","filterParamsChanged","queryParam","paramsChanged","selectedValues","inboundValues","debugExecuteSearch","base","mapEntriesToFilterItems","template","mapEntry","searchSagas","takeEvery","doSearch","loadFilters","preloadOtherFacets","applySearchFilter","setRouteFilters","listingType","select","keySeq","nextAction","put","call","ensureSearch","filtersToLoad","filtersToLoadSagas","loadFilter","filterItems","all","createStateFrom","mapSearchResultToState","executeSearch","stack","featuredQuery","apiParams","fi","allFacets","otherFacets","preloadFacet","preloadAction","updateCurrentFacetAction","buildUri","mapUri","useMinilist","dispatch","useDispatch","useSelector","useEffect","searchFacet","searchTab","label","filtering","isGrouped","filterItem","searchState","initialState","addConfigToState","setIn","newState","generateSearchFacets","thisConfig","newFacet","isDisabled","generateFiltersState","isCurrentFacet","addFilterItem","paramKey","paramValue","itemIndex","findIndex","paramName","pVal","resetFacets","resetFacet","initState","currentFilters","stateTerm","tabId","resetAllFacets","resetCurrentFacet","nextFacets","stateFacet","nextFilters","equals","nextState","Number","thisContext","useSearchTerm","isSingleSelect","currentItems"],"mappings":"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"}