{"version":3,"file":"App-919a5a30.js","sources":["../src/app/core/redux/history.js","../src/app/core/util/pickProject.js","../src/app/core/util/ContensisDeliveryApi.js","../src/app/core/redux/reducers/routing.js","../src/app/core/redux/reducers/version.js","../src/app/core/redux/reducers/navigation.js","../src/app/core/redux/routerMiddleware.js","../src/app/core/redux/store.js","../src/app/core/schema.js","../src/app/core/search/expressions.js","../src/app/core/redux/sagas/queries.js","../src/app/core/redux/sagas/routing.js","../src/app/core/redux/sagas/navigation.js","../src/app/core/redux/sagas/index.js","../src/app/App.js"],"sourcesContent":["import { createBrowserHistory, createMemoryHistory } from 'history';\n\n// Create a history depending on the environment\nconst selectedHistory =\n  typeof window !== 'undefined' ? createBrowserHistory : createMemoryHistory;\n\nexport const history = (options = {}) => selectedHistory(options);\nexport const browserHistory = selectedHistory();\n","const servers = SERVERS; /* global SERVERS */\nconst alias = servers.alias.toLowerCase();\nconst publicUri = PUBLIC_URI; /* global PUBLIC_URI */\nconst projects = PROJECTS; /* global PROJECTS */\n\n// return a projectId via the request hostname\nconst pickProject = (hostname, query) => {\n  // if localhost we can only infer via a querystring, and take your word for it\n  if (hostname == 'localhost') {\n    return (query && query.p) || projects[0].id;\n  }\n\n  // if hostname is the actual public uri we can return the first project from the list\n  if (hostname == publicUri) {\n    return projects[0].id;\n  }\n\n  let project = 'unknown';\n\n  // // go through all the defined projects\n  // Object.entries(projects).map(([, p]) => {\n  const p = projects[0];\n\n  // check if we're accessing via the project's public uri\n  if (hostname.includes(p.publicUri)) project = p.id;\n\n  // the url structure is different for website (we don't prefix)\n  if (p.id.startsWith('website')) {\n    // check for internal and external hostnames\n    // we check live and preview distinctly so our rule does not clash with\n    // hostnames that use a project prefix\n    if (\n      hostname.includes(`live-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`live.${alias}.contensis.cloud`) ||\n      hostname.includes(`preview-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`preview.${alias}.contensis.cloud`)\n    )\n      project = p.id;\n  } else {\n    // check for internal and external hostnames, prefixed with the projectId\n    if (\n      hostname.includes(`${p.id.toLowerCase()}-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`${p.id.toLowerCase()}.${alias}.contensis.cloud`)\n    )\n      project = p.id;\n  }\n  // });\n  return project === 'unknown' ? p.id : project;\n};\n\nexport default pickProject;\n","import { Client } from 'contensis-delivery-api';\n\nconst getClientConfig = project => {\n  let config = DELIVERY_API_CONFIG; /* global DELIVERY_API_CONFIG */\n  if (project) {\n    config.projectId = project;\n  }\n\n  if (\n    typeof window != 'undefined' &&\n    PROXY_DELIVERY_API /* global PROXY_DELIVERY_API */\n  ) {\n    // ensure a relative url is used to bypass the need for CORS (separate OPTIONS calls)\n    config.rootUrl = '';\n    config.responseHandler = {\n      404: () => null,\n    };\n  }\n  return config;\n};\n\nexport * from 'contensis-delivery-api';\n\n// This should only be executed on the client as it relies on the window.\nexport const GetClientSideDeliveryApiStatus = () => {\n  if (typeof window != 'undefined') {\n    const currentHostname = window.location.hostname;\n    return GetDeliveryApiStatusFromHostname(currentHostname);\n  }\n  return null;\n};\n\nexport const GetDeliveryApiStatusFromHostname = currentHostname => {\n  if (currentHostname.indexOf('localhost') > -1) return 'latest';\n\n  if (currentHostname.endsWith('contensis.cloud')) {\n    if (currentHostname.indexOf('preview.') > -1) {\n      return 'latest';\n    } else {\n      return 'published';\n    }\n  }\n\n  if (currentHostname.endsWith('cloud.contensis.com')) {\n    if (currentHostname.indexOf('preview-') > -1) {\n      return 'latest';\n    } else {\n      return 'published';\n    }\n  }\n\n  return 'published';\n};\n\nexport const GetResponseGuids = object => {\n  let Ids = [];\n  Object.keys(object).some(function(k) {\n    if (k === 'sys') {\n      //Should always have an ID, but lets check...\n      if (object[k].id && object[k].language) {\n        // We can exclude assets here i think... ?\n        if (object[k].dataFormat) {\n          if (object[k].dataFormat !== 'asset') {\n            Ids.push(`${object[k].id}_${object[k].language.toLowerCase()}`);\n          }\n        } else {\n          // If we don't have a dataformat add it anyhow, for safety\n          Ids.push(`${object[k].id}_${object[k].language.toLowerCase()}`);\n        }\n      }\n      return false;\n    }\n    if (object[k] && typeof object[k] === 'object') {\n      let subIds = GetResponseGuids(object[k]);\n      if (subIds.length > 0) {\n        Ids.push(...subIds);\n      }\n      return false;\n    }\n  });\n  return Ids;\n};\n\nexport const GetAllResponseGuids = object => {\n  if (!object) return [];\n  let returnItems = GetResponseGuids(object);\n  let unique = new Set(returnItems);\n  return unique;\n};\nclass DeliveryApi {\n  search(query, linkDepth, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return client.entries.search(\n      query,\n      typeof linkDepth !== 'undefined' ? linkDepth : 1\n    );\n  }\n\n  getClient(deliveryApiStatus = 'published', project, env) {\n    const baseConfig = getClientConfig(project, env);\n    baseConfig.versionStatus = deliveryApiStatus;\n    return Client.create(baseConfig);\n  }\n  getEntry(id, linkDepth = 0, deliveryApiStatus = 'published', project, env) {\n    const baseConfig = getClientConfig(project, env);\n    baseConfig.versionStatus = deliveryApiStatus;\n    const client = Client.create(baseConfig);\n    // return client.entries.get(id, linkDepth);\n    return client.entries.get({ id, linkDepth });\n  }\n}\n\nexport const deliveryApi = new DeliveryApi();\n\nclass CacheNode {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n    this.next = null;\n    this.prev = null;\n  }\n}\n\nclass LruCache {\n  constructor(limit = 100) {\n    this.map = {};\n    this.head = null;\n    this.tail = null;\n    this.limit = limit || 100;\n    this.size = 0;\n  }\n\n  get(key) {\n    if (this.map[key]) {\n      let value = this.map[key].value;\n      let node = new CacheNode(key, value);\n      this.remove(key);\n      this.setHead(node);\n      return value;\n    }\n  }\n\n  set(key, value) {\n    let node = new CacheNode(key, value);\n    if (this.map[key]) {\n      this.remove(key);\n    } else {\n      if (this.size >= this.limit) {\n        delete this.map[this.tail.key];\n        this.size--;\n        this.tail = this.tail.prev;\n        this.tail.next = null;\n      }\n    }\n    this.setHead(node);\n  }\n\n  setHead(node) {\n    node.next = this.head;\n    node.prev = null;\n    if (this.head) {\n      this.head.prev = node;\n    }\n    this.head = node;\n    if (!this.tail) {\n      this.tail = node;\n    }\n    this.size++;\n    this.map[node.key] = node;\n  }\n\n  remove(key) {\n    let node = this.map[key];\n    if (node.prev) {\n      node.prev.next = node.next;\n    } else {\n      this.head = node.next;\n    }\n    if (node.next) {\n      node.next.prev = node.prev;\n    } else {\n      this.tail = node.prev;\n    }\n    delete this.map[key];\n    this.size--;\n  }\n}\n\nclass CachedSearch {\n  cache = new LruCache();\n  taxonomyLookup = {};\n\n  search(query, linkDepth, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      project + JSON.stringify(query) + linkDepth.toString(),\n      () => client.entries.search(query, linkDepth)\n    );\n  }\n\n  get(id, linkDepth, versionStatus, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    client.clientConfig.versionStatus = versionStatus;\n    return this.request(id, () => client.entries.get({ id, linkDepth }));\n  }\n\n  getContentType(id, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(`[CONTENT TYPE] ${id} ${project}`, () =>\n      client.contentTypes.get(id)\n    );\n  }\n\n  getTaxonomyNode(key, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(`[TAXONOMY NODE] ${key}`, () =>\n      client.taxonomy\n        .resolveChildren(key)\n        .then(node => this.extendTaxonomyNode(node))\n    );\n  }\n\n  getRootNode(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(`${project} / ${JSON.stringify(options)}`, () =>\n      client.nodes.getRoot(options)\n    );\n  }\n\n  getNode(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} ${(options && options.path) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.get(options)\n    );\n  }\n\n  getAncestors(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} [A] ${(options && options.id) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.getAncestors(options)\n    );\n  }\n\n  getChildren(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} [C] ${(options && options.id) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.getChildren(options)\n    );\n  }\n\n  getSiblings(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} [S] ${(options && options.id) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.getSiblings(options)\n    );\n  }\n\n  request(key, execute) {\n    if (!this.cache.get(key) || typeof window == 'undefined') {\n      let promise = execute();\n      this.cache.set(key, promise);\n      promise.catch(() => {\n        this.cache.remove(key);\n      });\n    }\n    return this.cache.get(key);\n  }\n\n  extendTaxonomyNode(node) {\n    let id = this.getTaxonomyId(node);\n    this.taxonomyLookup[id] = node.key;\n    return {\n      ...node,\n      id,\n      children: node.children\n        ? node.children.map(n => this.extendTaxonomyNode(n))\n        : null,\n    };\n  }\n\n  getTaxonomyId(node) {\n    if (node.key) {\n      let parts = node.key.split('/');\n      return parts[parts.length - 1];\n    }\n    return '';\n  }\n\n  getTaxonomyKey(id) {\n    return this.taxonomyLookup[id];\n  }\n}\n\nexport const cachedSearch = new CachedSearch();\n","import { OrderedMap, fromJS, List, Set } from 'immutable';\nimport {\n  MAP_ENTRY,\n  SET_ENTRY,\n  SET_NAVIGATION_PATH,\n  SET_ANCESTORS,\n  SET_TARGET_PROJECT,\n  SET_ROUTE,\n  SET_SIBLINGS,\n} from '~/core/redux/types/routing';\nimport { GetAllResponseGuids } from '~/core/util/ContensisDeliveryApi';\n\nlet initialState = OrderedMap({\n  contentTypeId: null,\n  currentPath: '/',\n  currentNode: [],\n  currentNodeAncestors: List(),\n  currentProject: 'unknown',\n  currentTreeId: null,\n  entry: null,\n  entryDepends: List(),\n  entryID: null,\n  isLoading: false,\n  location: null,\n  mappedEntry: null,\n  nodeDepends: List(),\n  notFound: false,\n  staticRoute: null,\n});\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case MAP_ENTRY: {\n      return state.set('mappedEntry', fromJS(action.mappedEntry));\n    }\n    case SET_ANCESTORS: {\n      if (action.ancestors) {\n        let ancestorIDs = action.ancestors.map(node => {\n          return node.id;\n        });\n\n        let currentNodeDepends = state.get('nodeDepends');\n        const allNodeDepends = Set.union([\n          Set(ancestorIDs),\n          currentNodeDepends,\n        ]);\n        return state\n          .set('nodeDepends', allNodeDepends)\n          .set('currentNodeAncestors', fromJS(action.ancestors));\n      }\n      return state.set('currentNodeAncestors', fromJS(action.ancestors));\n    }\n    case SET_ENTRY: {\n      const { entry, node = {}, isLoading = false, notFound } = action;\n      let nextState;\n\n      if (!entry) {\n        nextState = state\n          .set('entryID', null)\n          .set('entryDepends', null)\n          .set('entry', null)\n          .set('mappedEntry', null)\n          .set('isLoading', isLoading)\n          .set('notFound', notFound);\n      } else {\n        const entryDepends = GetAllResponseGuids(entry);\n        nextState = state\n          .set('entryID', action.id)\n          .set('entryDepends', fromJS(entryDepends))\n          .set('entry', fromJS(entry))\n          .set('isLoading', isLoading)\n          .set('notFound', notFound);\n      }\n\n      if (!node) {\n        return nextState.set('nodeDepends', null).set('currentNode', null);\n      } else {\n        // On Set Node, we reset all dependants.\n        const nodeDepends = Set([node.id]);\n        return nextState\n          .set('nodeDepends', nodeDepends)\n          .set('currentNode', fromJS(node))\n          .removeIn(['currentNode', 'entry']); // We have the entry stored elsewhere, so lets not keep it twice.\n      }\n    }\n    // case SET_ENTRY_ID: {\n    //   if (action.id === '') {\n    //     return state;\n    //   }\n    //   return state.set('entryID', action.id);\n    // }\n    case SET_NAVIGATION_PATH: {\n      let staticRoute = false;\n      if (action.staticRoute) {\n        staticRoute = { ...action.staticRoute };\n      }\n      if (action.path) {\n        return state\n          .set('currentPath', fromJS(action.path))\n          .set('location', fromJS(action.location))\n          .set(\n            'staticRoute',\n            fromJS({\n              ...staticRoute,\n              route: { ...staticRoute.route, component: null },\n            })\n          )\n          .set('isLoading', typeof window !== 'undefined');\n      }\n      return state;\n    }\n    // case SET_NAVIGATION_NOT_FOUND: {\n    //   return state\n    //     .set('notFound', fromJS(action.notFound))\n    //     .set('isLoading', false);\n    // }\n    // case SET_NODE: {\n    //   const { node } = action;\n    //   if (!node) return state;\n    //   // On Set Node, we reset all dependants.\n    //   const nodeDepends = Set([node.id]);\n    //   return state\n    //     .set('nodeDepends', nodeDepends)\n    //     .set('currentNode', fromJS(action.node))\n    //     .removeIn(['currentNode', 'entry']); // We have the entry stored elsewhere, so lets not keep it twice.\n    // }\n    case SET_ROUTE: {\n      return state.set('nextPath', action.path);\n    }\n    case SET_SIBLINGS: {\n      // Can be null in some cases like the homepage.\n      let currentNodeSiblingParent = null;\n      let siblingIDs = [];\n      if (action.siblings && action.siblings.length > 0) {\n        currentNodeSiblingParent = action.siblings[0].parentId;\n        siblingIDs = action.siblings.map(node => {\n          return node.id;\n        });\n      }\n      let currentNodeDepends = state.get('nodeDepends');\n      const allNodeDepends = Set.union([Set(siblingIDs), currentNodeDepends]);\n      return state\n        .set('nodeDepends', allNodeDepends)\n        .set('currentNodeSiblings', fromJS(action.siblings))\n        .set('currentNodeSiblingsParent', currentNodeSiblingParent);\n    }\n    case SET_TARGET_PROJECT: {\n      return state\n        .set('currentProject', action.project)\n        .set('currentTreeId', '') //getTreeID(action.project))\n        .set('allowedGroups', fromJS(action.allowedGroups));\n    }\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport { SET_VERSION, SET_VERSION_STATUS } from '~/core/redux/types/version';\n\nlet initialState = Map({\n  commitRef: null,\n  buildNo: null,\n  contensisVersionStatus: 'published',\n});\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_VERSION_STATUS: {\n      return state.set('contensisVersionStatus', action.status);\n    }\n    case SET_VERSION: {\n      return state\n        .set('commitRef', action.commitRef)\n        .set('buildNo', action.buildNo);\n    }\n    default:\n      return state;\n  }\n};\n","import { Map, fromJS, List } from 'immutable';\n\nimport {\n  SET_NODE_TREE,\n  GET_NODE_TREE_ERROR,\n} from '~/core/redux/types/navigation';\n\nconst initialState = Map({\n  root: null,\n  treeDepends: new List([]),\n  isError: false,\n  isReady: false,\n});\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_NODE_TREE: {\n      return state.set('root', fromJS(action.nodes)).set('isReady', true);\n    }\n    case GET_NODE_TREE_ERROR: {\n      return state.set('isError', true);\n    }\n    default:\n      return state;\n  }\n};\n","import { CALL_HISTORY_METHOD } from '~/core/redux/types/routing';\n\n/**\n * This middleware captures CALL_HISTORY_METHOD actions to redirect to the\n * provided history object. This will prevent these actions from reaching your\n * reducer or any middleware that comes after this one.\n */\n/* eslint-disable no-unused-vars */\nconst routerMiddleware = history => store => next => action => {\n  if (action.type !== CALL_HISTORY_METHOD) {\n    return next(action);\n  }\n\n  const {\n    payload: { method, args },\n  } = action;\n  history[method](...args);\n};\n\nexport default routerMiddleware;\n","import { compose, createStore, applyMiddleware } from 'redux';\nimport { combineReducers } from 'redux-immutable';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware, { END } from 'redux-saga';\n\n// Core reducers\nimport RoutingReducer from './reducers/routing';\nimport { reducer as UserReducer } from '~/features/login';\nimport VersionReducer from './reducers/version';\nimport NavigationReducer from './reducers/navigation';\nimport routerMiddleware from './routerMiddleware';\n\nexport default (featureReducers, initialState, history) => {\n  const thunkMiddleware = [thunk];\n\n  let reduxDevToolsMiddleware = f => f;\n\n  if (typeof window != 'undefined') {\n    reduxDevToolsMiddleware = window.__REDUX_DEVTOOLS_EXTENSION__\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\n      : f => f;\n  }\n\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = compose(\n    applyMiddleware(\n      ...thunkMiddleware,\n      sagaMiddleware,\n      routerMiddleware(history)\n    ),\n    reduxDevToolsMiddleware\n  );\n\n  let reducers = {\n    navigation: NavigationReducer,\n    routing: RoutingReducer,\n    user: UserReducer,\n    version: VersionReducer,\n    ...featureReducers,\n  };\n\n  const combinedReducers = combineReducers(reducers);\n\n  const store = initialState => {\n    const store = createStore(combinedReducers, initialState, middleware);\n    store.runSaga = sagaMiddleware.run;\n    store.close = () => store.dispatch(END);\n    return store;\n  };\n\n  return store(initialState);\n};\n","export const DataFormats = {\n  entry: 'entry',\n  webpage: 'webpage',\n};\n\nconst sys = {\n  contentTypeId: 'sys.contentTypeId',\n  dataFormat: 'sys.dataFormat',\n  filename: 'sys.properties.filename',\n  id: 'sys.id',\n  includeInSearch: 'sys.metadata.includeInSearch',\n  slug: 'sys.slug',\n  uri: 'sys.uri',\n  versionStatus: 'sys.versionStatus',\n};\n\nexport const Fields = {\n  entryTitle: 'entryTitle',\n  entryDescription: 'entryDescription',\n  keywords: 'keywords',\n  sys,\n  contentTypeId: 'sys.contentTypeId',\n  wildcard: '*',\n};\n\nexport const Projects = {\n  website: 'website',\n};\n\nexport const VersionStatus = {\n  published: 'published',\n  latest: 'latest',\n};\n\nexport const ContentTypes = {\n  contentPage: 'contentPage',\n};\n\nexport const WebpageFormats = {};\n\nexport const FilterExpressionTypes = {\n  contentType: 'contentType',\n  field: 'field',\n};\n","import { Op, OrderBy } from 'contensis-delivery-api';\nimport { Fields, DataFormats } from '~/core/schema';\nimport {\n  fixFreeTextForElastic,\n  extractQuotedPhrases,\n} from '~/core/search/util';\n\nexport const fieldExpression = (\n  field,\n  value,\n  operator = 'equalTo',\n  weight = null\n) => {\n  if (!field || !value) return [];\n  if (Array.isArray(value)) return equalToOrIn(field, value, operator);\n  else\n    return !weight\n      ? [Op[operator](field, value)]\n      : [Op[operator](field, value).weight(weight)];\n};\n\nexport const contentTypeIdExpression = (contentTypeIds, webpageTemplates) => {\n  const expressions = [];\n  if (!contentTypeIds && !webpageTemplates) return expressions;\n\n  if (contentTypeIds && contentTypeIds.length > 0) {\n    expressions.push(\n      ...dataFormatExpression(contentTypeIds, DataFormats.entry)\n    );\n  }\n\n  if (webpageTemplates && webpageTemplates.length > 0) {\n    expressions.push(\n      ...dataFormatExpression(webpageTemplates, DataFormats.webpage)\n    );\n  }\n\n  if (expressions.length > 1) return [Op.or(...expressions)];\n\n  return expressions;\n};\n\nexport const filterExpressions = filters => {\n  if (!filters) return [];\n  const expressions = [];\n\n  filters.map(param => {\n    expressions.push(...fieldExpression(param.key, param.value, 'contains'));\n  });\n\n  return expressions;\n};\n\nexport const dataFormatExpression = (\n  contentTypeIds,\n  dataFormat = DataFormats.entry\n) => {\n  if (contentTypeIds && contentTypeIds.length > 0) {\n    /**\n     * We have an array of contentTypeIds some may be prefixed with a \"!\"\n     * to indicate this is a \"not\" expression\n     */\n    const withContentTypeIds = contentTypeIds.filter(c => !c.startsWith('!'));\n    const notContentTypeIds = contentTypeIds\n      .filter(c => c.startsWith('!'))\n      .map(id => id.substring(1));\n\n    const andExpr = Op.and();\n\n    const dataFormatExpr = fieldExpression(Fields.sys.dataFormat, dataFormat);\n\n    const withExpr = fieldExpression(\n      Fields.sys.contentTypeId,\n      withContentTypeIds\n    );\n\n    const notExpr = [\n      Op.not(...fieldExpression(Fields.sys.contentTypeId, notContentTypeIds)),\n    ];\n\n    andExpr.add(...dataFormatExpr);\n    if (withContentTypeIds.length > 0) andExpr.add(...withExpr);\n    if (notContentTypeIds.length > 0) andExpr.add(...notExpr);\n\n    return [andExpr];\n  }\n  return [];\n};\n\nexport const defaultExpressions = versionStatus => {\n  return [Op.equalTo(Fields.sys.versionStatus, versionStatus)];\n};\n\nexport const defaultSearchExpressions = versionStatus => {\n  return [\n    ...defaultExpressions(versionStatus),\n    ...includeInSearchExpressions(),\n  ];\n};\nexport const includeInSearchExpressions = () => [\n  Op.or(\n    Op.and(\n      Op.exists(Fields.sys.includeInSearch, true),\n      Op.equalTo(Fields.sys.includeInSearch, true)\n    ),\n    Op.exists(Fields.sys.includeInSearch, false)\n  ),\n];\n\nexport const orderByExpression = orderBy => {\n  let expression = OrderBy;\n  if (orderBy && orderBy.length > 0) {\n    orderBy.map(\n      ob =>\n        (expression = ob.startsWith('-')\n          ? expression.desc(ob.substring(1))\n          : expression.asc(ob))\n    );\n  }\n  return expression;\n};\n\nconst equalToOrIn = (field, arr, operator = 'equalTo') =>\n  arr.length === 0\n    ? []\n    : arr.length === 1\n    ? [Op[operator](field, arr[0])]\n    : [Op.in(field, ...arr)];\n\nexport const customWhereExpressions = where => {\n  if (!where || !Array.isArray(where)) return [];\n\n  // Accept HTTP style objects and map them to\n  // their equivalent JS client \"Op\" expressions\n  return where.map(clause => {\n    let expression;\n    Object.keys(clause).map((key, idx) => {\n      if (idx === 1) {\n        const operator = key;\n        const value = clause[key];\n        expression = Op[operator](clause.field, value, clause.weight);\n      }\n    });\n    return expression;\n  });\n};\n\nexport const termExpressions = (searchTerm, weightedSearchFields) => {\n  if (searchTerm && weightedSearchFields && weightedSearchFields.length > 0) {\n    // Extract any phrases in quotes to array\n    const quotedPhrases = extractQuotedPhrases(searchTerm);\n\n    // Modify the search term to remove any quoted phrases to leave any remaining terms\n    let modifiedSearchTerm = searchTerm;\n    quotedPhrases.forEach(\n      qp =>\n        (modifiedSearchTerm = modifiedSearchTerm\n          .replace(qp, '')\n          .replace('\"\"', '')\n          .trim())\n    );\n\n    // Push to the operators array to include in the query\n    const operators = [];\n\n    // Helper functions to generate Op expressions\n    const containsOp = (f, term) =>\n      fieldExpression(\n        f.fieldId,\n        fixFreeTextForElastic(term),\n        'contains',\n        f.weight\n      );\n    const freeTextOp = (f, term) =>\n      fieldExpression(\n        f.fieldId,\n        fixFreeTextForElastic(term),\n        'freeText',\n        f.weight\n      );\n\n    // For each weighted search field\n    weightedSearchFields.forEach(f => {\n      // Push to field operators\n      const fieldOperators = [];\n\n      // Add operator expressions for modified search term\n      if (modifiedSearchTerm) {\n        if (\n          [Fields.keywords, Fields.sys.filename, Fields.sys.uri].includes(\n            f.fieldId\n          )\n        ) {\n          fieldOperators.push(...containsOp(f, modifiedSearchTerm));\n        } else {\n          if ([Fields.entryTitle].includes(f.fieldId)) {\n            fieldOperators.push(\n              Op.or(\n                ...containsOp(f, modifiedSearchTerm),\n                ...freeTextOp(f, modifiedSearchTerm)\n              )\n            );\n          } else {\n            fieldOperators.push(...freeTextOp(f, modifiedSearchTerm));\n          }\n        }\n      }\n\n      // Add operator expressions for any quoted phrases\n      quotedPhrases.forEach(qp => fieldOperators.push(...containsOp(f, qp)));\n\n      // If we are using multiple operators for a field we will\n      // wrap each field inside an And operator so we will match\n      // all terms/phrases rather than any terms/phrases\n      if (fieldOperators.length > 1) {\n        operators.push(Op.and(...fieldOperators));\n      } else {\n        operators.push(...fieldOperators);\n      }\n    });\n\n    // Wrap operators in an Or operator\n    return [Op.or().addRange(operators)];\n  } else if (searchTerm) {\n    return [Op.contains(Fields.wildcard, searchTerm)];\n  } else {\n    return [];\n  }\n};\n","// eslint-disable-next-line import/named\nimport { Query } from '~/core/util/ContensisDeliveryApi';\nimport { fieldExpression, defaultExpressions } from '~/core/search/expressions';\n\nexport const routeEntryByFieldsQuery = (\n  id,\n  fields = [],\n  versionStatus = 'published'\n) => {\n  const query = new Query(\n    ...[...fieldExpression('sys.id', id), ...defaultExpressions(versionStatus)]\n  );\n  query.fields = fields;\n  return query;\n};\n","// load-entries.js\nimport * as log from 'loglevel';\nimport { takeEvery, put, select, call, all } from 'redux-saga/effects';\nimport {\n  // SET_ENTRY_ID,\n  // SET_NAVIGATION_NOT_FOUND,\n  // SET_NODE,\n  SET_ENTRY,\n  SET_ANCESTORS,\n  SET_NAVIGATION_PATH,\n  SET_ROUTE,\n  CALL_HISTORY_METHOD,\n  SET_SIBLINGS,\n  MAP_ENTRY,\n} from '~/core/redux/types/routing';\nimport { cachedSearch, deliveryApi } from '~/core/util/ContensisDeliveryApi';\nimport { selectVersionStatus } from '~/core/redux/selectors/version';\nimport {\n  selectCurrentNode,\n  selectCurrentPath,\n  selectCurrentProject,\n  selectRouteEntry,\n} from '~/core/redux/selectors/routing';\nimport { GET_NODE_TREE } from '../types/navigation';\nimport { hasNavigationTree } from '../selectors/navigation';\nimport { routeEntryByFieldsQuery } from './queries';\n\nexport const routingSagas = [\n  takeEvery(SET_NAVIGATION_PATH, getRouteSaga),\n  takeEvery(SET_ROUTE, setRouteSaga),\n];\n\n/**\n * To navigate / push a specific route via redux middleware\n * @param {path, state} action\n */\nfunction* setRouteSaga(action) {\n  yield put({\n    type: CALL_HISTORY_METHOD,\n    payload: {\n      method: 'push',\n      args: [action.path, action.state],\n    },\n  });\n}\n\nfunction* getRouteSaga(action) {\n  let entry = null;\n  try {\n    const {\n      withEvents,\n      routes: { ContentTypeMappings = {} } = {},\n      staticRoute,\n    } = action;\n    let appsays;\n    if (withEvents && withEvents.onRouteLoad) {\n      appsays = yield withEvents.onRouteLoad(action);\n    }\n    // if appsays customNavigation: true, we will set doNavigation to false\n    // if appsays customNavigation: { ... }, we will set doNavigation to the customNavigation object and check for child elements\n    // if appsays nothing we will set doNavigation to true and continue to do navigation calls\n    const doNavigation =\n      !appsays ||\n      (appsays && appsays.customNavigation === true\n        ? false\n        : (appsays && appsays.customNavigation) || true);\n\n    const entryLinkDepth = (appsays && appsays.entryLinkDepth) || 3;\n    const setContentTypeLimits = !!ContentTypeMappings.find(\n      ct => ct.fields || ct.linkDepth\n    );\n\n    const state = yield select();\n    const routeEntry = selectRouteEntry(state);\n    const routeNode = selectCurrentNode(state);\n    const currentPath = selectCurrentPath(state);\n    const deliveryApiStatus = selectVersionStatus(state);\n    const project = selectCurrentProject(state);\n    const isHome = currentPath === '/';\n    const isPreview = currentPath && currentPath.startsWith('/preview/');\n\n    if (\n      !isPreview &&\n      ((appsays && appsays.customRouting) ||\n        (staticRoute && !staticRoute.route.fetchNode) ||\n        (routeEntry && action.statePath === action.path))\n    ) {\n      // To prevent erroneous 404s and wasted network calls, this covers\n      // - appsays customRouting and does SET_ENTRY etc. via the consuming app\n      // - all staticRoutes (where custom 'route.fetchNode' attribute is falsey)\n      // - standard Contensis SiteView Routing where we already have that entry in state\n      if (\n        routeEntry &&\n        (!staticRoute || (staticRoute.route && staticRoute.route.fetchNode))\n      ) {\n        entry = routeEntry.toJS();\n        yield put({\n          type: SET_ENTRY,\n          entry,\n          node: routeNode,\n          isLoading: false,\n        });\n      } else\n        yield call(\n          setRouteEntry,\n          null, // entry = null\n          null, // pathNode = null\n          null, // ancestors = null\n          null, // siblings = null\n          false // notFound = false\n        );\n    } else {\n      let pathNode = null,\n        ancestors = null,\n        siblings = null;\n\n      // Handle homepage\n      if (isHome) {\n        pathNode = yield cachedSearch.getRootNode(\n          {\n            depth: 0,\n            entryFields: '*',\n            entryLinkDepth,\n            language: 'en-GB',\n            versionStatus: deliveryApiStatus,\n          },\n          project\n        );\n      } else {\n        // Handle preview routes\n        if (isPreview) {\n          let splitPath = currentPath.split('/');\n          let entryGuid = splitPath[2];\n          if (splitPath.length == 3) {\n            // According to product dev we cannot use Node API\n            // for previewing entries as it gives a response of []\n            // -- apparently it is not correct to request latest content\n            // with Node API\n            let previewEntry = yield deliveryApi\n              .getClient(deliveryApiStatus, project)\n              .entries.get({ id: entryGuid, linkDepth: 3 });\n            if (previewEntry) {\n              pathNode = { entry: previewEntry };\n              // yield call(setRouteEntry, previewEntry);\n              // } else {\n              // yield call(do404);\n            }\n          }\n        } else {\n          // Handle all other routes\n          pathNode = yield cachedSearch.getNode(\n            {\n              depth:\n                doNavigation === true || doNavigation.children === true\n                  ? 3\n                  : (doNavigation && doNavigation.children) || 0,\n              path: currentPath,\n              entryFields: setContentTypeLimits\n                ? ['sys.contentTypeId', 'sys.id']\n                : '*',\n              entryLinkDepth: setContentTypeLimits ? 0 : entryLinkDepth,\n              versionStatus: deliveryApiStatus,\n            },\n            project\n          );\n          if (\n            setContentTypeLimits &&\n            pathNode &&\n            pathNode.entry &&\n            pathNode.entry.sys &&\n            pathNode.entry.sys.id\n          ) {\n            const contentType = ContentTypeMappings.find(\n              ct => ct.contentTypeID === pathNode.entry.sys.contentTypeId\n            );\n            const query = routeEntryByFieldsQuery(\n              pathNode.entry.sys.id,\n              contentType && contentType.fields,\n              deliveryApiStatus\n            );\n            const payload = yield cachedSearch.search(\n              query,\n              contentType && typeof contentType.linkDepth !== 'undefined'\n                ? contentType.linkDepth\n                : 3,\n              project\n            );\n            if (payload && payload.items && payload.items.length > 0) {\n              pathNode.entry = payload.items[0];\n            }\n          }\n        }\n\n        if (\n          pathNode &&\n          pathNode.id &&\n          (doNavigation === true || doNavigation.ancestors)\n        ) {\n          ancestors = yield cachedSearch.getAncestors(pathNode.id, project);\n\n          if (doNavigation === true || doNavigation.siblings) {\n            siblings = yield cachedSearch.getSiblings(\n              {\n                id: pathNode.id,\n                entryFields: ['sys.contentTypeId', 'url'],\n              },\n              project\n            );\n          }\n        }\n      }\n\n      if (\n        pathNode &&\n        pathNode.entry &&\n        pathNode.entry.sys &&\n        pathNode.entry.sys.id\n      ) {\n        entry = pathNode.entry;\n        const entryMapper = (\n          ContentTypeMappings.find(\n            ct => ct.contentTypeID === pathNode.entry.sys.contentTypeId\n          ) || {}\n        ).entryMapper;\n\n        yield all([\n          call(\n            mapRouteEntry,\n            entryMapper,\n            { ...pathNode, ancestors, siblings },\n            state\n          ),\n          call(setRouteEntry, entry, pathNode, ancestors, siblings, false),\n        ]);\n      } else {\n        if (pathNode)\n          yield call(setRouteEntry, null, pathNode, ancestors, siblings, false);\n        else yield call(do404);\n      }\n      if (!appsays || !appsays.preventScrollTop) {\n        // Scroll into View\n        if (typeof window !== 'undefined') {\n          window.scroll({\n            top: 0,\n          });\n        }\n      }\n    }\n    if (withEvents && withEvents.onRouteLoaded) {\n      yield withEvents.onRouteLoaded({ ...action, entry });\n    }\n\n    if (\n      !hasNavigationTree(state) &&\n      (doNavigation === true || doNavigation.tree)\n    )\n      // Load navigation clientside only, a put() should help that work\n      yield put({\n        type: GET_NODE_TREE,\n        treeDepth:\n          doNavigation === true ||\n          !doNavigation.tree ||\n          doNavigation.tree === true\n            ? 2\n            : doNavigation.tree,\n      });\n  } catch (e) {\n    log.error(...['Error running route saga:', e, e.stack]);\n    yield call(do404);\n  }\n}\n\nfunction* setRouteEntry(entry, node, ancestors, siblings, notFound) {\n  yield all([\n    put({\n      type: SET_ENTRY,\n      id: (entry && entry.sys.id) || null,\n      entry,\n      node,\n      notFound,\n    }),\n    ancestors &&\n      put({\n        type: SET_ANCESTORS,\n        ancestors,\n      }),\n    siblings &&\n      put({\n        type: SET_SIBLINGS,\n        siblings,\n      }),\n  ]);\n}\n\nfunction* mapRouteEntry(entryMapper, node, state) {\n  if (typeof entryMapper === 'function') {\n    const mappedEntry = yield call(entryMapper, node, state);\n    yield put({ type: MAP_ENTRY, mappedEntry, node, entryMapper });\n  }\n}\nfunction* do404() {\n  yield put({\n    type: SET_ENTRY,\n    id: null,\n    entry: null,\n    notFound: true,\n  });\n}\n","import { takeEvery, put, select } from 'redux-saga/effects';\n\nimport { deliveryApi } from '~/core/util/ContensisDeliveryApi';\nimport {\n  GET_NODE_TREE,\n  SET_NODE_TREE,\n  GET_NODE_TREE_ERROR,\n} from '~/core/redux/types/navigation';\nimport { hasNavigationTree } from '~/core/redux/selectors/navigation';\nimport { selectVersionStatus } from '../selectors/version';\nimport { selectCurrentProject } from '../selectors/routing';\n\nexport const navigationSagas = [takeEvery(GET_NODE_TREE, ensureNodeTreeSaga)];\n\nexport function* ensureNodeTreeSaga(action) {\n  const state = yield select();\n  try {\n    if (!hasNavigationTree(state)) {\n      const deliveryApiVersionStatus = yield select(selectVersionStatus);\n      const project = yield select(selectCurrentProject);\n      const nodes = yield deliveryApi\n        .getClient(deliveryApiVersionStatus, project)\n        .nodes.getRoot({\n          depth: action.treeDepth || 2,\n          entryFields: 'entryTitle, metaInformation, sys.contentTypeId',\n        });\n      if (nodes) {\n        yield put({ type: SET_NODE_TREE, nodes });\n      } else {\n        yield put({ type: GET_NODE_TREE_ERROR });\n      }\n    }\n  } catch (ex) {\n    yield put({ type: GET_NODE_TREE_ERROR, error: ex.toString() });\n  }\n}\n","// index.js\nimport { all } from 'redux-saga/effects';\nimport { routingSagas } from './routing';\nimport { sagas as userSagas } from '~/features/login';\nimport { navigationSagas } from './navigation';\nimport { validateUserSaga } from '~/features/login/redux/sagas';\n\nexport default function(featureSagas = []) {\n  return function* rootSaga() {\n    const subSagas = [...routingSagas, ...navigationSagas, ...userSagas];\n    yield all([validateUserSaga({}), ...subSagas, ...featureSagas]);\n  };\n}\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport RouteLoader from '~/core/routes/RouteLoader';\n\nconst AppRoot = props => {\n  return <RouteLoader {...props} />;\n};\n\nexport default hot(module)(AppRoot);\n"],"names":["selectedHistory","window","createBrowserHistory","createMemoryHistory","history","options","browserHistory","servers","SERVERS","alias","toLowerCase","publicUri","PUBLIC_URI","projects","PROJECTS","pickProject","hostname","query","p","id","project","includes","startsWith","getClientConfig","config","DELIVERY_API_CONFIG","projectId","PROXY_DELIVERY_API","rootUrl","responseHandler","GetClientSideDeliveryApiStatus","currentHostname","location","GetDeliveryApiStatusFromHostname","indexOf","endsWith","GetResponseGuids","object","Ids","Object","keys","some","k","language","dataFormat","push","subIds","length","GetAllResponseGuids","returnItems","unique","Set","DeliveryApi","search","linkDepth","env","client","Client","create","entries","getClient","deliveryApiStatus","baseConfig","versionStatus","getEntry","get","deliveryApi","CacheNode","constructor","key","value","next","prev","LruCache","limit","map","head","tail","size","node","remove","setHead","set","CachedSearch","cache","taxonomyLookup","request","JSON","stringify","toString","clientConfig","getContentType","contentTypes","getTaxonomyNode","taxonomy","resolveChildren","then","extendTaxonomyNode","getRootNode","nodes","getRoot","getNode","path","getAncestors","getChildren","getSiblings","execute","promise","catch","getTaxonomyId","children","n","parts","split","getTaxonomyKey","cachedSearch","initialState","OrderedMap","contentTypeId","currentPath","currentNode","currentNodeAncestors","List","currentProject","currentTreeId","entry","entryDepends","entryID","isLoading","mappedEntry","nodeDepends","notFound","staticRoute","state","action","type","MAP_ENTRY","fromJS","SET_ANCESTORS","ancestors","ancestorIDs","currentNodeDepends","allNodeDepends","union","SET_ENTRY","nextState","removeIn","SET_NAVIGATION_PATH","route","component","SET_ROUTE","SET_SIBLINGS","currentNodeSiblingParent","siblingIDs","siblings","parentId","SET_TARGET_PROJECT","allowedGroups","Map","commitRef","buildNo","contensisVersionStatus","SET_VERSION_STATUS","status","SET_VERSION","root","treeDepends","isError","isReady","SET_NODE_TREE","GET_NODE_TREE_ERROR","routerMiddleware","store","CALL_HISTORY_METHOD","payload","method","args","featureReducers","thunkMiddleware","thunk","reduxDevToolsMiddleware","f","__REDUX_DEVTOOLS_EXTENSION__","sagaMiddleware","createSagaMiddleware","middleware","compose","applyMiddleware","reducers","navigation","NavigationReducer","routing","RoutingReducer","user","UserReducer","version","VersionReducer","combinedReducers","combineReducers","createStore","runSaga","run","close","dispatch","END","sys","filename","includeInSearch","slug","uri","Fields","entryTitle","entryDescription","keywords","wildcard","fieldExpression","field","operator","weight","Array","isArray","equalToOrIn","Op","defaultExpressions","equalTo","arr","in","routeEntryByFieldsQuery","fields","Query","routingSagas","takeEvery","getRouteSaga","setRouteSaga","put","withEvents","routes","ContentTypeMappings","appsays","onRouteLoad","doNavigation","customNavigation","entryLinkDepth","setContentTypeLimits","find","ct","select","routeEntry","selectRouteEntry","routeNode","selectCurrentNode","selectCurrentPath","selectVersionStatus","selectCurrentProject","isHome","isPreview","customRouting","fetchNode","statePath","toJS","call","setRouteEntry","pathNode","depth","entryFields","splitPath","entryGuid","previewEntry","contentType","contentTypeID","items","entryMapper","all","mapRouteEntry","do404","preventScrollTop","scroll","top","onRouteLoaded","hasNavigationTree","tree","GET_NODE_TREE","treeDepth","e","log","stack","navigationSagas","ensureNodeTreeSaga","deliveryApiVersionStatus","ex","error","featureSagas","rootSaga","subSagas","userSagas","validateUserSaga","AppRoot","props"],"mappings":"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"}