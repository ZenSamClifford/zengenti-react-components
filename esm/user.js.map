{"version":3,"file":"user.js","sources":["../src/user/redux/actions.js","../src/user/hooks/useLogin.js","../src/user/containers/Login.container.js","../src/user/hooks/useRegistration.js","../src/user/containers/Registration.container.js","../src/user/hooks/useForgotPassword.js","../src/user/containers/ForgotPassword.container.js","../src/user/hooks/useChangePassword.js","../src/user/containers/ChangePassword.container.js","../src/user/hocs/withLogin.js","../src/user/hocs/withRegistration.js"],"sourcesContent":["import { action } from '~/redux/util';\r\nimport {\r\n  CHANGE_USER_PASSWORD,\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  REQUEST_USER_PASSWORD_RESET,\r\n  RESET_USER_PASSWORD,\r\n} from './types';\r\n\r\nexport const loginUser = (username, password) =>\r\n  action(LOGIN_USER, { username, password });\r\n\r\nexport const logoutUser = redirectPath => action(LOGOUT_USER, { redirectPath });\r\n\r\nexport const registerUser = (user, mappers) =>\r\n  action(REGISTER_USER, {\r\n    user,\r\n    mappers,\r\n  });\r\n\r\nexport const requestPasswordReset = userEmailObject =>\r\n  action(REQUEST_USER_PASSWORD_RESET, { userEmailObject });\r\n\r\nexport const resetPassword = resetPasswordObject =>\r\n  action(RESET_USER_PASSWORD, { resetPasswordObject });\r\n\r\nexport const changePassword = (userId, currentPassword, newPassword) =>\r\n  action(CHANGE_USER_PASSWORD, { userId, currentPassword, newPassword });\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser, logoutUser } from '../redux/actions';\r\nimport {\r\n  selectUser,\r\n  selectUserAuthenticationError,\r\n  selectUserAuthenticationErrorMessage,\r\n  selectUserError,\r\n  selectUserErrorMessage,\r\n  selectUserIsAuthenticated,\r\n  selectUserIsLoading,\r\n} from '../redux/selectors';\r\n\r\nconst useLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    loginUser: (username, password) => dispatch(loginUser(username, password)),\r\n    logoutUser: redirectPath => dispatch(logoutUser(redirectPath)),\r\n    authenticationError: select(selectUserAuthenticationError),\r\n    authenticationErrorMessage: select(selectUserAuthenticationErrorMessage),\r\n    error: select(selectUserError),\r\n    errorMessage: select(selectUserErrorMessage),\r\n    isAuthenticated: select(selectUserIsAuthenticated),\r\n    isLoading: select(selectUserIsLoading),\r\n    user: select(selectUser),\r\n  };\r\n};\r\n\r\nexport default useLogin;\r\n","import useLogin from '../hooks/useLogin';\r\nimport { toJS } from '~/util/ToJs';\r\n\r\nconst LoginContainer = ({ children, ...props }) => {\r\n  const userProps = useLogin(props);\r\n  return children(userProps);\r\n};\r\n\r\nLoginContainer.propTypes = {};\r\n\r\nexport default toJS(LoginContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { registerUser } from '../redux/actions';\r\nimport {\r\n  selectUserRegistration,\r\n  selectUserRegistrationError,\r\n  selectUserRegistrationIsLoading,\r\n  selectUserRegistrationIsSuccess,\r\n} from '../redux/selectors';\r\n\r\nconst useRegistration = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    registerUser: (user, mappers) => dispatch(registerUser(user, mappers)),\r\n    error: select(selectUserRegistrationError),\r\n    isLoading: select(selectUserRegistrationIsLoading),\r\n    isSuccess: select(selectUserRegistrationIsSuccess),\r\n    user: select(selectUserRegistration),\r\n  };\r\n};\r\n\r\nexport default useRegistration;\r\n","import useRegistration from '../hooks/useRegistration';\r\nimport { toJS } from '~/util/ToJs';\r\n\r\nconst RegistrationContainer = ({ children, ...props }) => {\r\n  const userProps = useRegistration(props);\r\n  return children(userProps);\r\n};\r\n\r\nRegistrationContainer.propTypes = {};\r\n\r\nexport default toJS(RegistrationContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { requestPasswordReset, resetPassword } from '../redux/actions';\r\nimport {\r\n  selectPasswordResetRequestError,\r\n  selectPasswordResetRequestSending,\r\n  selectPasswordResetRequestSent,\r\n  selectResetPasswordSending,\r\n  selectResetPasswordSent,\r\n  selectResetPasswordError,\r\n} from '../redux/selectors';\r\nimport { selectCurrentSearch } from '~/routing/redux/selectors';\r\n\r\nconst useForgotPassword = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    isLoading: select(selectPasswordResetRequestSending),\r\n    isSuccess: select(selectPasswordResetRequestSent),\r\n    error: select(selectPasswordResetRequestError),\r\n    requestPasswordReset: userEmailObject =>\r\n      dispatch(requestPasswordReset(userEmailObject)),\r\n\r\n    setNewPassword: {\r\n      queryString: select(selectCurrentSearch),\r\n      isLoading: select(selectResetPasswordSending),\r\n      isSuccess: select(selectResetPasswordSent),\r\n      error: select(selectResetPasswordError),\r\n      submit: resetPasswordObject =>\r\n        dispatch(resetPassword(resetPasswordObject)),\r\n    },\r\n  };\r\n};\r\n\r\nexport default useForgotPassword;\r\n","import useForgotPassword from '../hooks/useForgotPassword';\r\nimport { toJS } from '~/util/ToJs';\r\n\r\nconst ForgotPasswordContainer = ({ children, ...props }) => {\r\n  const userProps = useForgotPassword(props);\r\n  return children(userProps);\r\n};\r\n\r\nForgotPasswordContainer.propTypes = {};\r\n\r\nexport default toJS(ForgotPasswordContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { changePassword } from '../redux/actions';\r\nimport {\r\n  selectChangePasswordSending,\r\n  selectChangePasswordSent,\r\n  selectChangePasswordError,\r\n  selectUserIsAuthenticated,\r\n  selectUserAuthenticationErrorMessage,\r\n} from '../redux/selectors';\r\n\r\nconst useChangePassword = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    isLoading: select(selectChangePasswordSending),\r\n    isSuccess: select(selectChangePasswordSent),\r\n    isLoggedIn: select(selectUserIsAuthenticated),\r\n    error: select(selectChangePasswordError),\r\n    authenticationErrorMessage: select(selectUserAuthenticationErrorMessage),\r\n    changePassword: (userId, currentPassword, newPassword) =>\r\n      dispatch(changePassword(userId, currentPassword, newPassword)),\r\n  };\r\n};\r\n\r\nexport default useChangePassword;\r\n","import useChangePassword from '../hooks/useChangePassword';\r\nimport { toJS } from '~/util/ToJs';\r\n\r\nconst ChangePasswordContainer = ({ children, ...props }) => {\r\n  const userProps = useChangePassword(props);\r\n  return children(userProps);\r\n};\r\n\r\nChangePasswordContainer.propTypes = {};\r\n\r\nexport default toJS(ChangePasswordContainer);\r\n","import { connect } from 'react-redux';\r\nimport { loginUser, logoutUser } from '../redux/actions';\r\nimport {\r\n  selectUser,\r\n  selectUserAuthenticationError,\r\n  selectUserError,\r\n  selectUserIsAuthenticated,\r\n  selectUserIsLoading,\r\n} from '../redux/selectors';\r\nimport { toJS } from '~/util/ToJs';\r\n\r\nconst getDisplayName = WrappedComponent => {\r\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\r\n};\r\n\r\nconst withLogin = WrappedComponent => {\r\n  const mapStateToProps = state => {\r\n    return {\r\n      authenticationError: selectUserAuthenticationError(state),\r\n      error: selectUserError(state),\r\n      isAuthenticated: selectUserIsAuthenticated(state),\r\n      isLoading: selectUserIsLoading(state),\r\n      user: selectUser(state),\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps = {\r\n    loginUser,\r\n    logoutUser,\r\n  };\r\n\r\n  const ConnectedComponent = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(toJS(WrappedComponent));\r\n\r\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\r\n\r\n  return ConnectedComponent;\r\n};\r\n\r\nexport default withLogin;\r\n","import { connect } from 'react-redux';\r\nimport { registerUser } from '../redux/actions';\r\nimport {\r\n  selectUserRegistration,\r\n  selectUserRegistrationError,\r\n  selectUserRegistrationIsLoading,\r\n  selectUserRegistrationIsSuccess,\r\n} from '../redux/selectors';\r\nimport { toJS } from '~/util/ToJs';\r\n\r\nconst getDisplayName = WrappedComponent => {\r\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\r\n};\r\n\r\nconst withRegistration = WrappedComponent => {\r\n  const mapStateToProps = state => {\r\n    return {\r\n      error: selectUserRegistrationError(state),\r\n      isLoading: selectUserRegistrationIsLoading(state),\r\n      isSuccess: selectUserRegistrationIsSuccess(state),\r\n      user: selectUserRegistration(state),\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps = {\r\n    registerUser,\r\n  };\r\n\r\n  const ConnectedComponent = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(toJS(WrappedComponent));\r\n\r\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\r\n\r\n  return ConnectedComponent;\r\n};\r\n\r\nexport default withRegistration;\r\n"],"names":["loginUser","username","password","action","LOGIN_USER","logoutUser","redirectPath","LOGOUT_USER","registerUser","user","mappers","REGISTER_USER","requestPasswordReset","userEmailObject","REQUEST_USER_PASSWORD_RESET","resetPassword","resetPasswordObject","RESET_USER_PASSWORD","changePassword","userId","currentPassword","newPassword","CHANGE_USER_PASSWORD","useLogin","dispatch","useDispatch","select","useSelector","authenticationError","selectUserAuthenticationError","authenticationErrorMessage","selectUserAuthenticationErrorMessage","error","selectUserError","errorMessage","selectUserErrorMessage","isAuthenticated","selectUserIsAuthenticated","isLoading","selectUserIsLoading","selectUser","LoginContainer","children","props","userProps","propTypes","toJS","useRegistration","selectUserRegistrationError","selectUserRegistrationIsLoading","isSuccess","selectUserRegistrationIsSuccess","selectUserRegistration","RegistrationContainer","useForgotPassword","selectPasswordResetRequestSending","selectPasswordResetRequestSent","selectPasswordResetRequestError","setNewPassword","queryString","selectCurrentSearch","selectResetPasswordSending","selectResetPasswordSent","selectResetPasswordError","submit","ForgotPasswordContainer","useChangePassword","selectChangePasswordSending","selectChangePasswordSent","isLoggedIn","selectChangePasswordError","ChangePasswordContainer","getDisplayName","WrappedComponent","displayName","name","withLogin","mapStateToProps","state","mapDispatchToProps","ConnectedComponent","connect","withRegistration"],"mappings":"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"}