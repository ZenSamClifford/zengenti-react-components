{"version":3,"file":"user.js","sources":["../src/app/features/login/redux/actions.js","../src/app/features/login/containers/useLogin.js","../src/app/features/login/containers/Login.container.js","../src/app/features/login/containers/useRegistration.js","../src/app/features/login/containers/Registration.container.js","../src/app/features/login/containers/useForgotPassword.js","../src/app/features/login/containers/ForgotPassword.container.js","../src/app/features/login/containers/useResetPassword.js","../src/app/features/login/containers/ResetPassword.container.js","../src/app/features/login/containers/useUser.js","../src/app/features/login/containers/User.container.js","../src/app/features/login/containers/withLogin.js","../src/app/features/login/containers/withRegistration.js"],"sourcesContent":["import { action } from '~/core/util/helpers';\r\nimport {\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  REQUEST_USER_PASSWORD_RESET,\r\n  RESET_USER_PASSWORD,\r\n} from './types';\r\n\r\nexport const loginUser = (username, password) =>\r\n  action(LOGIN_USER, { username, password });\r\n\r\nexport const logoutUser = redirectPath => action(LOGOUT_USER, { redirectPath });\r\n\r\nexport const registerUser = (user, mappers) =>\r\n  action(REGISTER_USER, {\r\n    user,\r\n    mappers,\r\n  });\r\n\r\nexport const requestPasswordReset = userEmailObject =>\r\n  action(REQUEST_USER_PASSWORD_RESET, { userEmailObject });\r\n\r\nexport const resetPassword = resetPasswordObject =>\r\n  action(RESET_USER_PASSWORD, { resetPasswordObject });\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser, logoutUser } from '../redux/actions';\r\nimport {\r\n  selectUser,\r\n  selectUserAuthenticationError,\r\n  selectUserAuthenticationErrorMessage,\r\n  selectUserError,\r\n  selectUserErrorMessage,\r\n  selectUserIsAuthenticated,\r\n  selectUserIsLoading,\r\n} from '../redux/selectors';\r\n\r\nconst useLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    loginUser: (username, password) => dispatch(loginUser(username, password)),\r\n    logoutUser: redirectPath => dispatch(logoutUser(redirectPath)),\r\n    authenticationError: select(selectUserAuthenticationError),\r\n    authenticationErrorMessage: select(selectUserAuthenticationErrorMessage),\r\n    error: select(selectUserError),\r\n    errorMessage: select(selectUserErrorMessage),\r\n    isAuthenticated: select(selectUserIsAuthenticated),\r\n    isLoading: select(selectUserIsLoading),\r\n    user: select(selectUser).toJS(),\r\n  };\r\n};\r\n\r\nexport default useLogin;\r\n","import useLogin from './useLogin';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst LoginContainer = ({ children, ...props }) => {\r\n  const userProps = useLogin(props);\r\n  return children(userProps);\r\n};\r\n\r\nLoginContainer.propTypes = {};\r\n\r\nexport default toJS(LoginContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { registerUser } from '../redux/actions';\r\nimport {\r\n  selectUserRegistration,\r\n  selectUserRegistrationError,\r\n  selectUserRegistrationIsLoading,\r\n  selectUserRegistrationIsSuccess,\r\n} from '../redux/selectors';\r\n\r\nconst useRegistration = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    registerUser: (user, mappers) => dispatch(registerUser(user, mappers)),\r\n    error: select(selectUserRegistrationError),\r\n    isLoading: select(selectUserRegistrationIsLoading),\r\n    isSuccess: select(selectUserRegistrationIsSuccess),\r\n    user: select(selectUserRegistration).toJS(),\r\n  };\r\n};\r\n\r\nexport default useRegistration;\r\n","import useRegistration from './useRegistration';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst RegistrationContainer = ({ children, ...props }) => {\r\n  const userProps = useRegistration(props);\r\n  return children(userProps);\r\n};\r\n\r\nRegistrationContainer.propTypes = {};\r\n\r\nexport default toJS(RegistrationContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { requestPasswordReset } from '../redux/actions';\r\nimport {\r\n  selectPasswordResetRequestError,\r\n  selectPasswordResetRequestSending,\r\n  selectPasswordResetRequestSent,\r\n} from '../redux/selectors';\r\n\r\nconst useForgotPassword = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    isLoading: select(selectPasswordResetRequestSending),\r\n    isSuccess: select(selectPasswordResetRequestSent),\r\n    error: select(selectPasswordResetRequestError),\r\n    requestPasswordReset: userEmailObject =>\r\n      dispatch(requestPasswordReset(userEmailObject)),\r\n  };\r\n};\r\n\r\nexport default useForgotPassword;\r\n","import useForgotPassword from './useForgotPassword';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst ForgotPasswordContainer = ({ children, ...props }) => {\r\n  const userProps = useForgotPassword(props);\r\n  return children(userProps);\r\n};\r\n\r\nForgotPasswordContainer.propTypes = {};\r\n\r\nexport default toJS(ForgotPasswordContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCurrentSearch } from '~/core/redux/selectors/routing';\r\nimport { resetPassword } from '../redux/actions';\r\nimport {\r\n  selectResetPasswordSending,\r\n  selectResetPasswordSent,\r\n  selectResetPasswordError,\r\n} from '../redux/selectors';\r\n\r\nconst useResetPassword = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    queryString: select(selectCurrentSearch),\r\n    isLoading: select(selectResetPasswordSending),\r\n    isSuccess: select(selectResetPasswordSent),\r\n    error: select(selectResetPasswordError),\r\n    resetPassword: resetPasswordObject =>\r\n      dispatch(resetPassword(resetPasswordObject)),\r\n  };\r\n};\r\n\r\nexport default useResetPassword;\r\n","import useResetPassword from './useResetPassword';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst ResetPasswordContainer = ({ children, ...props }) => {\r\n  const userProps = useResetPassword(props);\r\n  return children(userProps);\r\n};\r\n\r\nResetPasswordContainer.propTypes = {};\r\n\r\nexport default toJS(ResetPasswordContainer);\r\n","import {\r\n  useLogin,\r\n  useRegistration,\r\n  useForgotPassword,\r\n  useResetPassword,\r\n} from '-/src/lib/user';\r\n\r\nconst useUser = () => {\r\n  return {\r\n    ...useLogin(),\r\n    ...useRegistration(),\r\n    ...useForgotPassword(),\r\n    ...useResetPassword(),\r\n  };\r\n};\r\n\r\nexport default useUser;\r\n","import { toJS } from '~/core/util/ToJs';\r\nimport useUser from './useUser';\r\n\r\nconst UserContainer = ({ children, ...props }) => {\r\n  const userProps = useUser(props);\r\n  return children(userProps);\r\n};\r\n\r\nUserContainer.propTypes = {};\r\n\r\nexport default toJS(UserContainer);\r\n","import { connect } from 'react-redux';\r\nimport { loginUser, logoutUser } from '../redux/actions';\r\nimport {\r\n  selectUser,\r\n  selectUserAuthenticationError,\r\n  selectUserError,\r\n  selectUserIsAuthenticated,\r\n  selectUserIsLoading,\r\n} from '../redux/selectors';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst getDisplayName = WrappedComponent => {\r\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\r\n};\r\n\r\nconst withLogin = WrappedComponent => {\r\n  // Returns a redux-connected component with the following props:\r\n  // this.propTypes = {\r\n  //   loading: PropTypes.bool,\r\n  //   authenticated: PropTypes.bool,\r\n  //   authenticationError: PropTypes.bool,\r\n  //   error: PropTypes.bool,\r\n  //   user: PropTypes.object,\r\n  //   logoutUser: PropTypes.func,\r\n  //   isHeaderLogin: PropTypes.bool,\r\n  // };\r\n\r\n  const mapStateToProps = state => {\r\n    return {\r\n      authenticationError: selectUserAuthenticationError(state),\r\n      error: selectUserError(state),\r\n      isAuthenticated: selectUserIsAuthenticated(state),\r\n      isLoading: selectUserIsLoading(state),\r\n      user: selectUser(state),\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps = {\r\n    loginUser,\r\n    logoutUser,\r\n  };\r\n\r\n  const ConnectedComponent = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(toJS(WrappedComponent));\r\n\r\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\r\n\r\n  return ConnectedComponent;\r\n};\r\n\r\nexport default withLogin;\r\n","import { connect } from 'react-redux';\r\nimport { registerUser } from '../redux/actions';\r\nimport {\r\n  selectUserRegistration,\r\n  selectUserRegistrationError,\r\n  selectUserRegistrationIsLoading,\r\n  selectUserRegistrationIsSuccess,\r\n} from '../redux/selectors';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst getDisplayName = WrappedComponent => {\r\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\r\n};\r\n\r\nconst withRegistration = WrappedComponent => {\r\n  // Returns a redux-connected component with the following props:\r\n  // this.propTypes = {\r\n  //   registerUser: PropTypes.func,\r\n  //   isLoading: PropTypes.bool,\r\n  //   isSuccess: PropTypes.bool,\r\n  //   error: PropTypes.bool | PropTypes.object,\r\n  //   user: PropTypes.object,\r\n  // };\r\n\r\n  const mapStateToProps = state => {\r\n    return {\r\n      error: selectUserRegistrationError(state),\r\n      isLoading: selectUserRegistrationIsLoading(state),\r\n      isSuccess: selectUserRegistrationIsSuccess(state),\r\n      user: selectUserRegistration(state),\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps = {\r\n    registerUser,\r\n  };\r\n\r\n  const ConnectedComponent = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(toJS(WrappedComponent));\r\n\r\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\r\n\r\n  return ConnectedComponent;\r\n};\r\n\r\nexport default withRegistration;\r\n"],"names":["loginUser","username","password","action","LOGIN_USER","logoutUser","redirectPath","LOGOUT_USER","registerUser","user","mappers","REGISTER_USER","requestPasswordReset","userEmailObject","REQUEST_USER_PASSWORD_RESET","resetPassword","resetPasswordObject","RESET_USER_PASSWORD","useLogin","dispatch","useDispatch","select","useSelector","authenticationError","selectUserAuthenticationError","authenticationErrorMessage","selectUserAuthenticationErrorMessage","error","selectUserError","errorMessage","selectUserErrorMessage","isAuthenticated","selectUserIsAuthenticated","isLoading","selectUserIsLoading","selectUser","toJS","LoginContainer","children","props","userProps","propTypes","useRegistration","selectUserRegistrationError","selectUserRegistrationIsLoading","isSuccess","selectUserRegistrationIsSuccess","selectUserRegistration","RegistrationContainer","useForgotPassword","selectPasswordResetRequestSending","selectPasswordResetRequestSent","selectPasswordResetRequestError","ForgotPasswordContainer","useResetPassword","queryString","selectCurrentSearch","selectResetPasswordSending","selectResetPasswordSent","selectResetPasswordError","ResetPasswordContainer","useUser","UserContainer","getDisplayName","WrappedComponent","displayName","name","withLogin","mapStateToProps","state","mapDispatchToProps","ConnectedComponent","connect","withRegistration"],"mappings":"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"}