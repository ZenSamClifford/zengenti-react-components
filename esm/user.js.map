<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
{"version":3,"file":"user.js","sources":["../src/app/features/login/redux/actions.js","../src/app/features/login/containers/useLogin.js","../src/app/features/login/containers/Login.container.js","../src/app/features/login/containers/useRegistration.js","../src/app/features/login/containers/Registration.container.js","../src/app/features/login/containers/withLogin.js","../src/app/features/login/containers/withRegistration.js"],"sourcesContent":["import { action } from '~/core/util/helpers';\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER } from './types';\n\nexport const loginUser = (username, password) =>\n  action(LOGIN_USER, { username, password });\n\nexport const logoutUser = redirectPath => action(LOGOUT_USER, { redirectPath });\n\nexport const registerUser = (user, mappers) =>\n  action(REGISTER_USER, {\n    user,\n    mappers,\n  });\n","import { useDispatch, useSelector } from 'react-redux';\nimport { loginUser, logoutUser } from '../redux/actions';\nimport {\n  selectUser,\n  selectUserAuthenticationError,\n  selectUserError,\n  selectUserIsAuthenticated,\n  selectUserIsLoading,\n} from '../redux/selectors';\n\nconst useLogin = () => {\n  const dispatch = useDispatch();\n  const select = useSelector;\n\n  return {\n    loginUser: (username, password) => dispatch(loginUser(username, password)),\n    logoutUser: redirectPath => dispatch(logoutUser(redirectPath)),\n    authenticationError: select(selectUserAuthenticationError),\n    error: select(selectUserError),\n    isAuthenticated: select(selectUserIsAuthenticated),\n    isLoading: select(selectUserIsLoading),\n    user: select(selectUser).toJS(),\n  };\n};\n\nexport default useLogin;\n","import useLogin from './useLogin';\nimport { toJS } from '~/core/util/ToJs';\n\nconst LoginContainer = ({ children, ...props }) => {\n  const userProps = useLogin(props);\n  return children(userProps);\n};\n\nLoginContainer.propTypes = {};\n\nexport default toJS(LoginContainer);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { registerUser } from '../redux/actions';\nimport {\n  selectUserRegistration,\n  selectUserRegistrationError,\n  selectUserRegistrationIsLoading,\n  selectUserRegistrationIsSuccess,\n} from '../redux/selectors';\n\nconst useLogin = () => {\n  const dispatch = useDispatch();\n  const select = useSelector;\n\n  return {\n    registerUser: (user, mappers) => dispatch(registerUser(user, mappers)),\n    error: select(selectUserRegistrationError),\n    isLoading: select(selectUserRegistrationIsLoading),\n    isSuccess: select(selectUserRegistrationIsSuccess),\n    user: select(selectUserRegistration).toJS(),\n  };\n};\n\nexport default useLogin;\n","import useRegistration from './useRegistration';\nimport { toJS } from '~/core/util/ToJs';\n\nconst RegistrationContainer = ({ children, ...props }) => {\n  const userProps = useRegistration(props);\n  return children(userProps);\n};\n\nRegistrationContainer.propTypes = {};\n\nexport default toJS(RegistrationContainer);\n","import { connect } from 'react-redux';\nimport { loginUser, logoutUser } from '../redux/actions';\nimport {\n  selectUser,\n  selectUserAuthenticationError,\n  selectUserError,\n  selectUserIsAuthenticated,\n  selectUserIsLoading,\n} from '../redux/selectors';\nimport { toJS } from '~/core/util/ToJs';\n\nconst getDisplayName = WrappedComponent => {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n};\n\nconst withLogin = WrappedComponent => {\n  // Returns a redux-connected component with the following props:\n  // this.propTypes = {\n  //   loading: PropTypes.bool,\n  //   authenticated: PropTypes.bool,\n  //   authenticationError: PropTypes.bool,\n  //   error: PropTypes.bool,\n  //   user: PropTypes.object,\n  //   logoutUser: PropTypes.func,\n  //   isHeaderLogin: PropTypes.bool,\n  // };\n\n  const mapStateToProps = state => {\n    return {\n      authenticationError: selectUserAuthenticationError(state),\n      error: selectUserError(state),\n      isAuthenticated: selectUserIsAuthenticated(state),\n      isLoading: selectUserIsLoading(state),\n      user: selectUser(state),\n    };\n  };\n\n  const mapDispatchToProps = {\n    loginUser,\n    logoutUser,\n  };\n\n  const ConnectedComponent = connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(toJS(WrappedComponent));\n\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\n\n  return ConnectedComponent;\n};\n\nexport default withLogin;\n","import { connect } from 'react-redux';\nimport { registerUser } from '../redux/actions';\nimport {\n  selectUserRegistration,\n  selectUserRegistrationError,\n  selectUserRegistrationIsLoading,\n  selectUserRegistrationIsSuccess,\n} from '../redux/selectors';\nimport { toJS } from '~/core/util/ToJs';\n\nconst getDisplayName = WrappedComponent => {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n};\n\nconst withRegistration = WrappedComponent => {\n  // Returns a redux-connected component with the following props:\n  // this.propTypes = {\n  //   registerUser: PropTypes.func,\n  //   isLoading: PropTypes.bool,\n  //   isSuccess: PropTypes.bool,\n  //   error: PropTypes.bool | PropTypes.object,\n  //   user: PropTypes.object,\n  // };\n\n  const mapStateToProps = state => {\n    return {\n      error: selectUserRegistrationError(state),\n      isLoading: selectUserRegistrationIsLoading(state),\n      isSuccess: selectUserRegistrationIsSuccess(state),\n      user: selectUserRegistration(state),\n    };\n  };\n\n  const mapDispatchToProps = {\n    registerUser,\n  };\n\n  const ConnectedComponent = connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(toJS(WrappedComponent));\n\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\n\n  return ConnectedComponent;\n};\n\nexport default withRegistration;\n"],"names":["loginUser","username","password","action","LOGIN_USER","logoutUser","redirectPath","LOGOUT_USER","registerUser","user","mappers","REGISTER_USER","useLogin","dispatch","useDispatch","select","useSelector","authenticationError","selectUserAuthenticationError","error","selectUserError","isAuthenticated","selectUserIsAuthenticated","isLoading","selectUserIsLoading","selectUser","toJS","LoginContainer","children","props","userProps","propTypes","selectUserRegistrationError","selectUserRegistrationIsLoading","isSuccess","selectUserRegistrationIsSuccess","selectUserRegistration","RegistrationContainer","useRegistration","getDisplayName","WrappedComponent","displayName","name","withLogin","mapStateToProps","state","mapDispatchToProps","ConnectedComponent","connect","withRegistration"],"mappings":"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"}
=======
{"version":3,"file":"user.js","sources":["../src/app/features/login/redux/actions.js","../src/app/features/login/containers/useLogin.js","../src/app/features/login/containers/Login.container.js","../src/app/features/login/containers/useRegistration.js","../src/app/features/login/containers/Registration.container.js","../src/app/features/login/containers/useForgotPassword.js","../src/app/features/login/containers/ForgotPassword.container.js","../src/app/features/login/containers/useResetPassword.js","../src/app/features/login/containers/ResetPassword.container.js","../src/app/features/login/containers/useUser.js","../src/app/features/login/containers/User.container.js","../src/app/features/login/containers/withLogin.js","../src/app/features/login/containers/withRegistration.js"],"sourcesContent":["import { action } from '~/core/util/helpers';\r\nimport {\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  REQUEST_USER_PASSWORD_RESET,\r\n  RESET_USER_PASSWORD,\r\n} from './types';\r\n\r\nexport const loginUser = (username, password) =>\r\n  action(LOGIN_USER, { username, password });\r\n\r\nexport const logoutUser = redirectPath => action(LOGOUT_USER, { redirectPath });\r\n\r\nexport const registerUser = (user, mappers) =>\r\n  action(REGISTER_USER, {\r\n    user,\r\n    mappers,\r\n  });\r\n\r\nexport const requestPasswordReset = userEmailObject =>\r\n  action(REQUEST_USER_PASSWORD_RESET, { userEmailObject });\r\n\r\nexport const resetPassword = resetPasswordObject =>\r\n  action(RESET_USER_PASSWORD, { resetPasswordObject });\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser, logoutUser } from '../redux/actions';\r\nimport {\r\n  selectUser,\r\n  selectUserAuthenticationError,\r\n  selectUserError,\r\n  selectUserIsAuthenticated,\r\n  selectUserIsLoading,\r\n} from '../redux/selectors';\r\n\r\nconst useLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    loginUser: (username, password) => dispatch(loginUser(username, password)),\r\n    logoutUser: redirectPath => dispatch(logoutUser(redirectPath)),\r\n    authenticationError: select(selectUserAuthenticationError),\r\n    error: select(selectUserError),\r\n    isAuthenticated: select(selectUserIsAuthenticated),\r\n    isLoading: select(selectUserIsLoading),\r\n    user: select(selectUser).toJS(),\r\n  };\r\n};\r\n\r\nexport default useLogin;\r\n","import useLogin from './useLogin';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst LoginContainer = ({ children, ...props }) => {\r\n  const userProps = useLogin(props);\r\n  return children(userProps);\r\n};\r\n\r\nLoginContainer.propTypes = {};\r\n\r\nexport default toJS(LoginContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { registerUser } from '../redux/actions';\r\nimport {\r\n  selectUserRegistration,\r\n  selectUserRegistrationError,\r\n  selectUserRegistrationIsLoading,\r\n  selectUserRegistrationIsSuccess,\r\n} from '../redux/selectors';\r\n\r\nconst useLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    registerUser: (user, mappers) => dispatch(registerUser(user, mappers)),\r\n    error: select(selectUserRegistrationError),\r\n    isLoading: select(selectUserRegistrationIsLoading),\r\n    isSuccess: select(selectUserRegistrationIsSuccess),\r\n    user: select(selectUserRegistration).toJS(),\r\n  };\r\n};\r\n\r\nexport default useLogin;\r\n","import useRegistration from './useRegistration';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst RegistrationContainer = ({ children, ...props }) => {\r\n  const userProps = useRegistration(props);\r\n  return children(userProps);\r\n};\r\n\r\nRegistrationContainer.propTypes = {};\r\n\r\nexport default toJS(RegistrationContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { requestPasswordReset } from '../redux/actions';\r\nimport {\r\n  selectPasswordResetRequestError,\r\n  selectPasswordResetRequestSending,\r\n  selectPasswordResetRequestSent,\r\n} from '../redux/selectors';\r\n\r\nconst useLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    isLoading: select(selectPasswordResetRequestSending),\r\n    isSuccess: select(selectPasswordResetRequestSent),\r\n    error: select(selectPasswordResetRequestError),\r\n    requestPasswordReset: userEmailObject =>\r\n      dispatch(requestPasswordReset(userEmailObject)),\r\n  };\r\n};\r\n\r\nexport default useLogin;\r\n","import useForgotPassword from './useForgotPassword';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst ForgotPasswordContainer = ({ children, ...props }) => {\r\n  const userProps = useForgotPassword(props);\r\n  return children(userProps);\r\n};\r\n\r\nForgotPasswordContainer.propTypes = {};\r\n\r\nexport default toJS(ForgotPasswordContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCurrentSearch } from '~/core/redux/selectors/routing';\r\nimport { resetPassword } from '../redux/actions';\r\nimport {\r\n  selectResetPasswordSending,\r\n  selectResetPasswordSent,\r\n  selectResetPasswordError,\r\n} from '../redux/selectors';\r\n\r\nconst useLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    queryString: select(selectCurrentSearch),\r\n    isLoading: select(selectResetPasswordSending),\r\n    isSuccess: select(selectResetPasswordSent),\r\n    error: select(selectResetPasswordError),\r\n    resetPassword: resetPasswordObject =>\r\n      dispatch(resetPassword(resetPasswordObject)),\r\n  };\r\n};\r\n\r\nexport default useLogin;\r\n","import useResetPassword from './useResetPassword';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst ResetPasswordContainer = ({ children, ...props }) => {\r\n  const userProps = useResetPassword(props);\r\n  return children(userProps);\r\n};\r\n\r\nResetPasswordContainer.propTypes = {};\r\n\r\nexport default toJS(ResetPasswordContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCurrentSearch } from '~/core/redux/selectors/routing';\r\nimport {\r\n  loginUser,\r\n  logoutUser,\r\n  registerUser,\r\n  requestPasswordReset,\r\n  resetPassword,\r\n} from '../redux/actions';\r\nimport {\r\n  selectUser,\r\n  selectUserAuthenticationError,\r\n  selectUserError,\r\n  selectUserIsAuthenticated,\r\n  selectUserIsLoading,\r\n  selectUserRegistrationError,\r\n  selectUserRegistrationIsLoading,\r\n  selectUserRegistrationIsSuccess,\r\n  selectUserRegistration,\r\n  selectPasswordResetRequestSending,\r\n  selectPasswordResetRequestSent,\r\n  selectPasswordResetRequestError,\r\n  selectResetPasswordSending,\r\n  selectResetPasswordSent,\r\n  selectResetPasswordError,\r\n} from '../redux/selectors';\r\n\r\nconst useUser = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    loginUser: (username, password) => dispatch(loginUser(username, password)),\r\n    logoutUser: redirectPath => dispatch(logoutUser(redirectPath)),\r\n    authenticationError: select(selectUserAuthenticationError),\r\n    userError: select(selectUserError),\r\n    isAuthenticated: select(selectUserIsAuthenticated),\r\n    userIsLoading: select(selectUserIsLoading),\r\n    user: select(selectUser).toJS(),\r\n\r\n    registerUser: (user, mappers) => dispatch(registerUser(user, mappers)),\r\n    registrationError: select(selectUserRegistrationError),\r\n    registrationIsLoading: select(selectUserRegistrationIsLoading),\r\n    registrationIsSuccess: select(selectUserRegistrationIsSuccess),\r\n    userRegistration: select(selectUserRegistration).toJS(),\r\n\r\n    passwordResetRequestIsLoading: select(selectPasswordResetRequestSending),\r\n    passwordResetRequestIsSuccess: select(selectPasswordResetRequestSent),\r\n    passwordResetRequestError: select(selectPasswordResetRequestError),\r\n    requestPasswordReset: userEmailObject =>\r\n      dispatch(requestPasswordReset(userEmailObject)),\r\n\r\n    queryString: select(selectCurrentSearch),\r\n    passwordResetIsLoading: select(selectResetPasswordSending),\r\n    passwordResetIsSuccess: select(selectResetPasswordSent),\r\n    passwordResetError: select(selectResetPasswordError),\r\n    resetPassword: resetPasswordObject =>\r\n      dispatch(resetPassword(resetPasswordObject)),\r\n  };\r\n};\r\n\r\nexport default useUser;\r\n","import { toJS } from '~/core/util/ToJs';\r\nimport useUser from './useUser';\r\n\r\nconst UserContainer = ({ children, ...props }) => {\r\n  const userProps = useUser(props);\r\n  return children(userProps);\r\n};\r\n\r\nUserContainer.propTypes = {};\r\n\r\nexport default toJS(UserContainer);\r\n","import { connect } from 'react-redux';\r\nimport { loginUser, logoutUser } from '../redux/actions';\r\nimport {\r\n  selectUser,\r\n  selectUserAuthenticationError,\r\n  selectUserError,\r\n  selectUserIsAuthenticated,\r\n  selectUserIsLoading,\r\n} from '../redux/selectors';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst getDisplayName = WrappedComponent => {\r\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\r\n};\r\n\r\nconst withLogin = WrappedComponent => {\r\n  // Returns a redux-connected component with the following props:\r\n  // this.propTypes = {\r\n  //   loading: PropTypes.bool,\r\n  //   authenticated: PropTypes.bool,\r\n  //   authenticationError: PropTypes.bool,\r\n  //   error: PropTypes.bool,\r\n  //   user: PropTypes.object,\r\n  //   logoutUser: PropTypes.func,\r\n  //   isHeaderLogin: PropTypes.bool,\r\n  // };\r\n\r\n  const mapStateToProps = state => {\r\n    return {\r\n      authenticationError: selectUserAuthenticationError(state),\r\n      error: selectUserError(state),\r\n      isAuthenticated: selectUserIsAuthenticated(state),\r\n      isLoading: selectUserIsLoading(state),\r\n      user: selectUser(state),\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps = {\r\n    loginUser,\r\n    logoutUser,\r\n  };\r\n\r\n  const ConnectedComponent = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(toJS(WrappedComponent));\r\n\r\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\r\n\r\n  return ConnectedComponent;\r\n};\r\n\r\nexport default withLogin;\r\n","import { connect } from 'react-redux';\r\nimport { registerUser } from '../redux/actions';\r\nimport {\r\n  selectUserRegistration,\r\n  selectUserRegistrationError,\r\n  selectUserRegistrationIsLoading,\r\n  selectUserRegistrationIsSuccess,\r\n} from '../redux/selectors';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst getDisplayName = WrappedComponent => {\r\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\r\n};\r\n\r\nconst withRegistration = WrappedComponent => {\r\n  // Returns a redux-connected component with the following props:\r\n  // this.propTypes = {\r\n  //   registerUser: PropTypes.func,\r\n  //   isLoading: PropTypes.bool,\r\n  //   isSuccess: PropTypes.bool,\r\n  //   error: PropTypes.bool | PropTypes.object,\r\n  //   user: PropTypes.object,\r\n  // };\r\n\r\n  const mapStateToProps = state => {\r\n    return {\r\n      error: selectUserRegistrationError(state),\r\n      isLoading: selectUserRegistrationIsLoading(state),\r\n      isSuccess: selectUserRegistrationIsSuccess(state),\r\n      user: selectUserRegistration(state),\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps = {\r\n    registerUser,\r\n  };\r\n\r\n  const ConnectedComponent = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(toJS(WrappedComponent));\r\n\r\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\r\n\r\n  return ConnectedComponent;\r\n};\r\n\r\nexport default withRegistration;\r\n"],"names":["loginUser","username","password","action","LOGIN_USER","logoutUser","redirectPath","LOGOUT_USER","registerUser","user","mappers","REGISTER_USER","requestPasswordReset","userEmailObject","REQUEST_USER_PASSWORD_RESET","resetPassword","resetPasswordObject","RESET_USER_PASSWORD","useLogin","dispatch","useDispatch","select","useSelector","authenticationError","selectUserAuthenticationError","error","selectUserError","isAuthenticated","selectUserIsAuthenticated","isLoading","selectUserIsLoading","selectUser","toJS","LoginContainer","children","props","userProps","propTypes","selectUserRegistrationError","selectUserRegistrationIsLoading","isSuccess","selectUserRegistrationIsSuccess","selectUserRegistration","RegistrationContainer","useRegistration","selectPasswordResetRequestSending","selectPasswordResetRequestSent","selectPasswordResetRequestError","ForgotPasswordContainer","useForgotPassword","queryString","selectCurrentSearch","selectResetPasswordSending","selectResetPasswordSent","selectResetPasswordError","ResetPasswordContainer","useResetPassword","useUser","userError","userIsLoading","registrationError","registrationIsLoading","registrationIsSuccess","userRegistration","passwordResetRequestIsLoading","passwordResetRequestIsSuccess","passwordResetRequestError","passwordResetIsLoading","passwordResetIsSuccess","passwordResetError","UserContainer","getDisplayName","WrappedComponent","displayName","name","withLogin","mapStateToProps","state","mapDispatchToProps","ConnectedComponent","connect","withRegistration"],"mappings":"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"}
>>>>>>> 10419d5... commit bundles
=======
{"version":3,"file":"user.js","sources":["../src/app/features/login/redux/actions.js","../src/app/features/login/containers/useLogin.js","../src/app/features/login/containers/Login.container.js","../src/app/features/login/containers/useRegistration.js","../src/app/features/login/containers/Registration.container.js","../src/app/features/login/containers/useForgotPassword.js","../src/app/features/login/containers/ForgotPassword.container.js","../src/app/features/login/containers/useResetPassword.js","../src/app/features/login/containers/ResetPassword.container.js","../src/app/features/login/containers/useUser.js","../src/app/features/login/containers/User.container.js","../src/app/features/login/containers/withLogin.js","../src/app/features/login/containers/withRegistration.js"],"sourcesContent":["import { action } from '~/core/util/helpers';\r\nimport {\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  REQUEST_USER_PASSWORD_RESET,\r\n  RESET_USER_PASSWORD,\r\n} from './types';\r\n\r\nexport const loginUser = (username, password) =>\r\n  action(LOGIN_USER, { username, password });\r\n\r\nexport const logoutUser = redirectPath => action(LOGOUT_USER, { redirectPath });\r\n\r\nexport const registerUser = (user, mappers) =>\r\n  action(REGISTER_USER, {\r\n    user,\r\n    mappers,\r\n  });\r\n\r\nexport const requestPasswordReset = userEmailObject =>\r\n  action(REQUEST_USER_PASSWORD_RESET, { userEmailObject });\r\n\r\nexport const resetPassword = resetPasswordObject =>\r\n  action(RESET_USER_PASSWORD, { resetPasswordObject });\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser, logoutUser } from '../redux/actions';\r\nimport {\r\n  selectUser,\r\n  selectUserAuthenticationError,\r\n  selectUserAuthenticationErrorMessage,\r\n  selectUserError,\r\n  selectUserErrorMessage,\r\n  selectUserIsAuthenticated,\r\n  selectUserIsLoading,\r\n} from '../redux/selectors';\r\n\r\nconst useLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    loginUser: (username, password) => dispatch(loginUser(username, password)),\r\n    logoutUser: redirectPath => dispatch(logoutUser(redirectPath)),\r\n    authenticationError: select(selectUserAuthenticationError),\r\n    authenticationErrorMessage: select(selectUserAuthenticationErrorMessage),\r\n    error: select(selectUserError),\r\n    errorMessage: select(selectUserErrorMessage),\r\n    isAuthenticated: select(selectUserIsAuthenticated),\r\n    isLoading: select(selectUserIsLoading),\r\n    user: select(selectUser).toJS(),\r\n  };\r\n};\r\n\r\nexport default useLogin;\r\n","import useLogin from './useLogin';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst LoginContainer = ({ children, ...props }) => {\r\n  const userProps = useLogin(props);\r\n  return children(userProps);\r\n};\r\n\r\nLoginContainer.propTypes = {};\r\n\r\nexport default toJS(LoginContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { registerUser } from '../redux/actions';\r\nimport {\r\n  selectUserRegistration,\r\n  selectUserRegistrationError,\r\n  selectUserRegistrationIsLoading,\r\n  selectUserRegistrationIsSuccess,\r\n} from '../redux/selectors';\r\n\r\nconst useRegistration = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    registerUser: (user, mappers) => dispatch(registerUser(user, mappers)),\r\n    error: select(selectUserRegistrationError),\r\n    isLoading: select(selectUserRegistrationIsLoading),\r\n    isSuccess: select(selectUserRegistrationIsSuccess),\r\n    user: select(selectUserRegistration).toJS(),\r\n  };\r\n};\r\n\r\nexport default useRegistration;\r\n","import useRegistration from './useRegistration';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst RegistrationContainer = ({ children, ...props }) => {\r\n  const userProps = useRegistration(props);\r\n  return children(userProps);\r\n};\r\n\r\nRegistrationContainer.propTypes = {};\r\n\r\nexport default toJS(RegistrationContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { requestPasswordReset } from '../redux/actions';\r\nimport {\r\n  selectPasswordResetRequestError,\r\n  selectPasswordResetRequestSending,\r\n  selectPasswordResetRequestSent,\r\n} from '../redux/selectors';\r\n\r\nconst useForgotPassword = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    isLoading: select(selectPasswordResetRequestSending),\r\n    isSuccess: select(selectPasswordResetRequestSent),\r\n    error: select(selectPasswordResetRequestError),\r\n    requestPasswordReset: userEmailObject =>\r\n      dispatch(requestPasswordReset(userEmailObject)),\r\n  };\r\n};\r\n\r\nexport default useForgotPassword;\r\n","import useForgotPassword from './useForgotPassword';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst ForgotPasswordContainer = ({ children, ...props }) => {\r\n  const userProps = useForgotPassword(props);\r\n  return children(userProps);\r\n};\r\n\r\nForgotPasswordContainer.propTypes = {};\r\n\r\nexport default toJS(ForgotPasswordContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCurrentSearch } from '~/core/redux/selectors/routing';\r\nimport { resetPassword } from '../redux/actions';\r\nimport {\r\n  selectResetPasswordSending,\r\n  selectResetPasswordSent,\r\n  selectResetPasswordError,\r\n} from '../redux/selectors';\r\n\r\nconst useResetPassword = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    queryString: select(selectCurrentSearch),\r\n    isLoading: select(selectResetPasswordSending),\r\n    isSuccess: select(selectResetPasswordSent),\r\n    error: select(selectResetPasswordError),\r\n    resetPassword: resetPasswordObject =>\r\n      dispatch(resetPassword(resetPasswordObject)),\r\n  };\r\n};\r\n\r\nexport default useResetPassword;\r\n","import useResetPassword from './useResetPassword';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst ResetPasswordContainer = ({ children, ...props }) => {\r\n  const userProps = useResetPassword(props);\r\n  return children(userProps);\r\n};\r\n\r\nResetPasswordContainer.propTypes = {};\r\n\r\nexport default toJS(ResetPasswordContainer);\r\n","import {\r\n  useLogin,\r\n  useRegistration,\r\n  useForgotPassword,\r\n  useResetPassword,\r\n} from '-/src/lib/user';\r\n\r\nconst useUser = () => {\r\n  return {\r\n    ...useLogin(),\r\n    ...useRegistration(),\r\n    ...useForgotPassword(),\r\n    ...useResetPassword(),\r\n  };\r\n};\r\n\r\nexport default useUser;\r\n","import { toJS } from '~/core/util/ToJs';\r\nimport useUser from './useUser';\r\n\r\nconst UserContainer = ({ children, ...props }) => {\r\n  const userProps = useUser(props);\r\n  return children(userProps);\r\n};\r\n\r\nUserContainer.propTypes = {};\r\n\r\nexport default toJS(UserContainer);\r\n","import { connect } from 'react-redux';\r\nimport { loginUser, logoutUser } from '../redux/actions';\r\nimport {\r\n  selectUser,\r\n  selectUserAuthenticationError,\r\n  selectUserError,\r\n  selectUserIsAuthenticated,\r\n  selectUserIsLoading,\r\n} from '../redux/selectors';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst getDisplayName = WrappedComponent => {\r\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\r\n};\r\n\r\nconst withLogin = WrappedComponent => {\r\n  // Returns a redux-connected component with the following props:\r\n  // this.propTypes = {\r\n  //   loading: PropTypes.bool,\r\n  //   authenticated: PropTypes.bool,\r\n  //   authenticationError: PropTypes.bool,\r\n  //   error: PropTypes.bool,\r\n  //   user: PropTypes.object,\r\n  //   logoutUser: PropTypes.func,\r\n  //   isHeaderLogin: PropTypes.bool,\r\n  // };\r\n\r\n  const mapStateToProps = state => {\r\n    return {\r\n      authenticationError: selectUserAuthenticationError(state),\r\n      error: selectUserError(state),\r\n      isAuthenticated: selectUserIsAuthenticated(state),\r\n      isLoading: selectUserIsLoading(state),\r\n      user: selectUser(state),\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps = {\r\n    loginUser,\r\n    logoutUser,\r\n  };\r\n\r\n  const ConnectedComponent = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(toJS(WrappedComponent));\r\n\r\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\r\n\r\n  return ConnectedComponent;\r\n};\r\n\r\nexport default withLogin;\r\n","import { connect } from 'react-redux';\r\nimport { registerUser } from '../redux/actions';\r\nimport {\r\n  selectUserRegistration,\r\n  selectUserRegistrationError,\r\n  selectUserRegistrationIsLoading,\r\n  selectUserRegistrationIsSuccess,\r\n} from '../redux/selectors';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst getDisplayName = WrappedComponent => {\r\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\r\n};\r\n\r\nconst withRegistration = WrappedComponent => {\r\n  // Returns a redux-connected component with the following props:\r\n  // this.propTypes = {\r\n  //   registerUser: PropTypes.func,\r\n  //   isLoading: PropTypes.bool,\r\n  //   isSuccess: PropTypes.bool,\r\n  //   error: PropTypes.bool | PropTypes.object,\r\n  //   user: PropTypes.object,\r\n  // };\r\n\r\n  const mapStateToProps = state => {\r\n    return {\r\n      error: selectUserRegistrationError(state),\r\n      isLoading: selectUserRegistrationIsLoading(state),\r\n      isSuccess: selectUserRegistrationIsSuccess(state),\r\n      user: selectUserRegistration(state),\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps = {\r\n    registerUser,\r\n  };\r\n\r\n  const ConnectedComponent = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(toJS(WrappedComponent));\r\n\r\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\r\n\r\n  return ConnectedComponent;\r\n};\r\n\r\nexport default withRegistration;\r\n"],"names":["loginUser","username","password","action","LOGIN_USER","logoutUser","redirectPath","LOGOUT_USER","registerUser","user","mappers","REGISTER_USER","requestPasswordReset","userEmailObject","REQUEST_USER_PASSWORD_RESET","resetPassword","resetPasswordObject","RESET_USER_PASSWORD","useLogin","dispatch","useDispatch","select","useSelector","authenticationError","selectUserAuthenticationError","authenticationErrorMessage","selectUserAuthenticationErrorMessage","error","selectUserError","errorMessage","selectUserErrorMessage","isAuthenticated","selectUserIsAuthenticated","isLoading","selectUserIsLoading","selectUser","toJS","LoginContainer","children","props","userProps","propTypes","useRegistration","selectUserRegistrationError","selectUserRegistrationIsLoading","isSuccess","selectUserRegistrationIsSuccess","selectUserRegistration","RegistrationContainer","useForgotPassword","selectPasswordResetRequestSending","selectPasswordResetRequestSent","selectPasswordResetRequestError","ForgotPasswordContainer","useResetPassword","queryString","selectCurrentSearch","selectResetPasswordSending","selectResetPasswordSent","selectResetPasswordError","ResetPasswordContainer","useUser","UserContainer","getDisplayName","WrappedComponent","displayName","name","withLogin","mapStateToProps","state","mapDispatchToProps","ConnectedComponent","connect","withRegistration"],"mappings":"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"}
>>>>>>> bf47c62... chore: Commit bundles
=======
{"version":3,"file":"user.js","sources":["../src/app/features/login/redux/actions.js","../src/app/features/login/containers/useLogin.js","../src/app/features/login/containers/Login.container.js","../src/app/features/login/containers/useRegistration.js","../src/app/features/login/containers/Registration.container.js","../src/app/features/login/containers/useForgotPassword.js","../src/app/features/login/containers/ForgotPassword.container.js","../src/app/features/login/containers/useResetPassword.js","../src/app/features/login/containers/ResetPassword.container.js","../src/app/features/login/containers/useUser.js","../src/app/features/login/containers/User.container.js","../src/app/features/login/containers/withLogin.js","../src/app/features/login/containers/withRegistration.js"],"sourcesContent":["import { action } from '~/core/util/helpers';\r\nimport {\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  REQUEST_USER_PASSWORD_RESET,\r\n  RESET_USER_PASSWORD,\r\n} from './types';\r\n\r\nexport const loginUser = (username, password) =>\r\n  action(LOGIN_USER, { username, password });\r\n\r\nexport const logoutUser = redirectPath => action(LOGOUT_USER, { redirectPath });\r\n\r\nexport const registerUser = (user, mappers) =>\r\n  action(REGISTER_USER, {\r\n    user,\r\n    mappers,\r\n  });\r\n\r\nexport const requestPasswordReset = userEmailObject =>\r\n  action(REQUEST_USER_PASSWORD_RESET, { userEmailObject });\r\n\r\nexport const resetPassword = resetPasswordObject =>\r\n  action(RESET_USER_PASSWORD, { resetPasswordObject });\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser, logoutUser } from '../redux/actions';\r\nimport {\r\n  selectUser,\r\n  selectUserAuthenticationError,\r\n  selectUserAuthenticationErrorMessage,\r\n  selectUserError,\r\n  selectUserErrorMessage,\r\n  selectUserIsAuthenticated,\r\n  selectUserIsLoading,\r\n} from '../redux/selectors';\r\n\r\nconst useLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    loginUser: (username, password) => dispatch(loginUser(username, password)),\r\n    logoutUser: redirectPath => dispatch(logoutUser(redirectPath)),\r\n    authenticationError: select(selectUserAuthenticationError),\r\n    authenticationErrorMessage: select(selectUserAuthenticationErrorMessage),\r\n    error: select(selectUserError),\r\n    errorMessage: select(selectUserErrorMessage),\r\n    isAuthenticated: select(selectUserIsAuthenticated),\r\n    isLoading: select(selectUserIsLoading),\r\n    user: select(selectUser).toJS(),\r\n  };\r\n};\r\n\r\nexport default useLogin;\r\n","import useLogin from './useLogin';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst LoginContainer = ({ children, ...props }) => {\r\n  const userProps = useLogin(props);\r\n  return children(userProps);\r\n};\r\n\r\nLoginContainer.propTypes = {};\r\n\r\nexport default toJS(LoginContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { registerUser } from '../redux/actions';\r\nimport {\r\n  selectUserRegistration,\r\n  selectUserRegistrationError,\r\n  selectUserRegistrationIsLoading,\r\n  selectUserRegistrationIsSuccess,\r\n} from '../redux/selectors';\r\n\r\nconst useRegistration = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    registerUser: (user, mappers) => dispatch(registerUser(user, mappers)),\r\n    error: select(selectUserRegistrationError),\r\n    isLoading: select(selectUserRegistrationIsLoading),\r\n    isSuccess: select(selectUserRegistrationIsSuccess),\r\n    user: select(selectUserRegistration).toJS(),\r\n  };\r\n};\r\n\r\nexport default useRegistration;\r\n","import useRegistration from './useRegistration';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst RegistrationContainer = ({ children, ...props }) => {\r\n  const userProps = useRegistration(props);\r\n  return children(userProps);\r\n};\r\n\r\nRegistrationContainer.propTypes = {};\r\n\r\nexport default toJS(RegistrationContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { requestPasswordReset } from '../redux/actions';\r\nimport {\r\n  selectPasswordResetRequestError,\r\n  selectPasswordResetRequestSending,\r\n  selectPasswordResetRequestSent,\r\n} from '../redux/selectors';\r\n\r\nconst useForgotPassword = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    isLoading: select(selectPasswordResetRequestSending),\r\n    isSuccess: select(selectPasswordResetRequestSent),\r\n    error: select(selectPasswordResetRequestError),\r\n    requestPasswordReset: userEmailObject =>\r\n      dispatch(requestPasswordReset(userEmailObject)),\r\n  };\r\n};\r\n\r\nexport default useForgotPassword;\r\n","import useForgotPassword from './useForgotPassword';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst ForgotPasswordContainer = ({ children, ...props }) => {\r\n  const userProps = useForgotPassword(props);\r\n  return children(userProps);\r\n};\r\n\r\nForgotPasswordContainer.propTypes = {};\r\n\r\nexport default toJS(ForgotPasswordContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCurrentSearch } from '~/core/redux/selectors/routing';\r\nimport { resetPassword } from '../redux/actions';\r\nimport {\r\n  selectResetPasswordSending,\r\n  selectResetPasswordSent,\r\n  selectResetPasswordError,\r\n} from '../redux/selectors';\r\n\r\nconst useResetPassword = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    queryString: select(selectCurrentSearch),\r\n    isLoading: select(selectResetPasswordSending),\r\n    isSuccess: select(selectResetPasswordSent),\r\n    error: select(selectResetPasswordError),\r\n    resetPassword: resetPasswordObject =>\r\n      dispatch(resetPassword(resetPasswordObject)),\r\n  };\r\n};\r\n\r\nexport default useResetPassword;\r\n","import useResetPassword from './useResetPassword';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst ResetPasswordContainer = ({ children, ...props }) => {\r\n  const userProps = useResetPassword(props);\r\n  return children(userProps);\r\n};\r\n\r\nResetPasswordContainer.propTypes = {};\r\n\r\nexport default toJS(ResetPasswordContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCurrentSearch } from '~/core/redux/selectors/routing';\r\nimport {\r\n  loginUser,\r\n  logoutUser,\r\n  registerUser,\r\n  requestPasswordReset,\r\n  resetPassword,\r\n} from '../redux/actions';\r\nimport {\r\n  selectUser,\r\n  selectUserAuthenticationError,\r\n  selectUserError,\r\n  selectUserIsAuthenticated,\r\n  selectUserIsLoading,\r\n  selectUserRegistrationError,\r\n  selectUserRegistrationIsLoading,\r\n  selectUserRegistrationIsSuccess,\r\n  selectUserRegistration,\r\n  selectPasswordResetRequestSending,\r\n  selectPasswordResetRequestSent,\r\n  selectPasswordResetRequestError,\r\n  selectResetPasswordSending,\r\n  selectResetPasswordSent,\r\n  selectResetPasswordError,\r\n  selectUserAuthenticationErrorMessage,\r\n  selectUserErrorMessage,\r\n} from '../redux/selectors';\r\n\r\nconst useUser = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    loginUser: (username, password) => dispatch(loginUser(username, password)),\r\n    logoutUser: redirectPath => dispatch(logoutUser(redirectPath)),\r\n    authenticationError: select(selectUserAuthenticationError),\r\n    authenticationErrorMessage: select(selectUserAuthenticationErrorMessage),\r\n    userError: select(selectUserError),\r\n    userErrorMessage: select(selectUserErrorMessage),\r\n    isAuthenticated: select(selectUserIsAuthenticated),\r\n    userIsLoading: select(selectUserIsLoading),\r\n    user: select(selectUser).toJS(),\r\n\r\n    registerUser: (user, mappers) => dispatch(registerUser(user, mappers)),\r\n    registrationError: select(selectUserRegistrationError),\r\n    registrationIsLoading: select(selectUserRegistrationIsLoading),\r\n    registrationIsSuccess: select(selectUserRegistrationIsSuccess),\r\n    userRegistration: select(selectUserRegistration).toJS(),\r\n\r\n    passwordResetRequestIsLoading: select(selectPasswordResetRequestSending),\r\n    passwordResetRequestIsSuccess: select(selectPasswordResetRequestSent),\r\n    passwordResetRequestError: select(selectPasswordResetRequestError),\r\n    requestPasswordReset: userEmailObject =>\r\n      dispatch(requestPasswordReset(userEmailObject)),\r\n\r\n    queryString: select(selectCurrentSearch),\r\n    passwordResetIsLoading: select(selectResetPasswordSending),\r\n    passwordResetIsSuccess: select(selectResetPasswordSent),\r\n    passwordResetError: select(selectResetPasswordError),\r\n    resetPassword: resetPasswordObject =>\r\n      dispatch(resetPassword(resetPasswordObject)),\r\n  };\r\n};\r\n\r\nexport default useUser;\r\n","import { toJS } from '~/core/util/ToJs';\r\nimport useUser from './useUser';\r\n\r\nconst UserContainer = ({ children, ...props }) => {\r\n  const userProps = useUser(props);\r\n  return children(userProps);\r\n};\r\n\r\nUserContainer.propTypes = {};\r\n\r\nexport default toJS(UserContainer);\r\n","import { connect } from 'react-redux';\r\nimport { loginUser, logoutUser } from '../redux/actions';\r\nimport {\r\n  selectUser,\r\n  selectUserAuthenticationError,\r\n  selectUserError,\r\n  selectUserIsAuthenticated,\r\n  selectUserIsLoading,\r\n} from '../redux/selectors';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst getDisplayName = WrappedComponent => {\r\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\r\n};\r\n\r\nconst withLogin = WrappedComponent => {\r\n  // Returns a redux-connected component with the following props:\r\n  // this.propTypes = {\r\n  //   loading: PropTypes.bool,\r\n  //   authenticated: PropTypes.bool,\r\n  //   authenticationError: PropTypes.bool,\r\n  //   error: PropTypes.bool,\r\n  //   user: PropTypes.object,\r\n  //   logoutUser: PropTypes.func,\r\n  //   isHeaderLogin: PropTypes.bool,\r\n  // };\r\n\r\n  const mapStateToProps = state => {\r\n    return {\r\n      authenticationError: selectUserAuthenticationError(state),\r\n      error: selectUserError(state),\r\n      isAuthenticated: selectUserIsAuthenticated(state),\r\n      isLoading: selectUserIsLoading(state),\r\n      user: selectUser(state),\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps = {\r\n    loginUser,\r\n    logoutUser,\r\n  };\r\n\r\n  const ConnectedComponent = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(toJS(WrappedComponent));\r\n\r\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\r\n\r\n  return ConnectedComponent;\r\n};\r\n\r\nexport default withLogin;\r\n","import { connect } from 'react-redux';\r\nimport { registerUser } from '../redux/actions';\r\nimport {\r\n  selectUserRegistration,\r\n  selectUserRegistrationError,\r\n  selectUserRegistrationIsLoading,\r\n  selectUserRegistrationIsSuccess,\r\n} from '../redux/selectors';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst getDisplayName = WrappedComponent => {\r\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\r\n};\r\n\r\nconst withRegistration = WrappedComponent => {\r\n  // Returns a redux-connected component with the following props:\r\n  // this.propTypes = {\r\n  //   registerUser: PropTypes.func,\r\n  //   isLoading: PropTypes.bool,\r\n  //   isSuccess: PropTypes.bool,\r\n  //   error: PropTypes.bool | PropTypes.object,\r\n  //   user: PropTypes.object,\r\n  // };\r\n\r\n  const mapStateToProps = state => {\r\n    return {\r\n      error: selectUserRegistrationError(state),\r\n      isLoading: selectUserRegistrationIsLoading(state),\r\n      isSuccess: selectUserRegistrationIsSuccess(state),\r\n      user: selectUserRegistration(state),\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps = {\r\n    registerUser,\r\n  };\r\n\r\n  const ConnectedComponent = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(toJS(WrappedComponent));\r\n\r\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\r\n\r\n  return ConnectedComponent;\r\n};\r\n\r\nexport default withRegistration;\r\n"],"names":["loginUser","username","password","action","LOGIN_USER","logoutUser","redirectPath","LOGOUT_USER","registerUser","user","mappers","REGISTER_USER","requestPasswordReset","userEmailObject","REQUEST_USER_PASSWORD_RESET","resetPassword","resetPasswordObject","RESET_USER_PASSWORD","useLogin","dispatch","useDispatch","select","useSelector","authenticationError","selectUserAuthenticationError","authenticationErrorMessage","selectUserAuthenticationErrorMessage","error","selectUserError","errorMessage","selectUserErrorMessage","isAuthenticated","selectUserIsAuthenticated","isLoading","selectUserIsLoading","selectUser","toJS","LoginContainer","children","props","userProps","propTypes","useRegistration","selectUserRegistrationError","selectUserRegistrationIsLoading","isSuccess","selectUserRegistrationIsSuccess","selectUserRegistration","RegistrationContainer","useForgotPassword","selectPasswordResetRequestSending","selectPasswordResetRequestSent","selectPasswordResetRequestError","ForgotPasswordContainer","useResetPassword","queryString","selectCurrentSearch","selectResetPasswordSending","selectResetPasswordSent","selectResetPasswordError","ResetPasswordContainer","useUser","userError","userErrorMessage","userIsLoading","registrationError","registrationIsLoading","registrationIsSuccess","userRegistration","passwordResetRequestIsLoading","passwordResetRequestIsSuccess","passwordResetRequestError","passwordResetIsLoading","passwordResetIsSuccess","passwordResetError","UserContainer","getDisplayName","WrappedComponent","displayName","name","withLogin","mapStateToProps","state","mapDispatchToProps","ConnectedComponent","connect","withRegistration"],"mappings":"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"}
>>>>>>> a743c70... chore: commit bundles
=======
{"version":3,"file":"user.js","sources":["../src/app/features/login/redux/actions.js","../src/app/features/login/containers/useLogin.js","../src/app/features/login/containers/Login.container.js","../src/app/features/login/containers/useRegistration.js","../src/app/features/login/containers/Registration.container.js","../src/app/features/login/containers/useForgotPassword.js","../src/app/features/login/containers/ForgotPassword.container.js","../src/app/features/login/containers/useResetPassword.js","../src/app/features/login/containers/ResetPassword.container.js","../src/app/features/login/containers/useUser.js","../src/app/features/login/containers/User.container.js","../src/app/features/login/containers/withLogin.js","../src/app/features/login/containers/withRegistration.js"],"sourcesContent":["import { action } from '~/core/util/helpers';\r\nimport {\r\n  CHANGE_USER_PASSWORD,\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  REQUEST_USER_PASSWORD_RESET,\r\n  RESET_USER_PASSWORD,\r\n} from './types';\r\n\r\nexport const loginUser = (username, password) =>\r\n  action(LOGIN_USER, { username, password });\r\n\r\nexport const logoutUser = redirectPath => action(LOGOUT_USER, { redirectPath });\r\n\r\nexport const registerUser = (user, mappers) =>\r\n  action(REGISTER_USER, {\r\n    user,\r\n    mappers,\r\n  });\r\n\r\nexport const requestPasswordReset = userEmailObject =>\r\n  action(REQUEST_USER_PASSWORD_RESET, { userEmailObject });\r\n\r\nexport const resetPassword = resetPasswordObject =>\r\n  action(RESET_USER_PASSWORD, { resetPasswordObject });\r\n\r\nexport const changePassword = (userId, currentPassword, newPassword) =>\r\n  action(CHANGE_USER_PASSWORD, { userId, currentPassword, newPassword });\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser, logoutUser } from '../redux/actions';\r\nimport {\r\n  selectUser,\r\n  selectUserAuthenticationError,\r\n  selectUserAuthenticationErrorMessage,\r\n  selectUserError,\r\n  selectUserErrorMessage,\r\n  selectUserIsAuthenticated,\r\n  selectUserIsLoading,\r\n} from '../redux/selectors';\r\n\r\nconst useLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    loginUser: (username, password) => dispatch(loginUser(username, password)),\r\n    logoutUser: redirectPath => dispatch(logoutUser(redirectPath)),\r\n    authenticationError: select(selectUserAuthenticationError),\r\n    authenticationErrorMessage: select(selectUserAuthenticationErrorMessage),\r\n    error: select(selectUserError),\r\n    errorMessage: select(selectUserErrorMessage),\r\n    isAuthenticated: select(selectUserIsAuthenticated),\r\n    isLoading: select(selectUserIsLoading),\r\n    user: select(selectUser).toJS(),\r\n  };\r\n};\r\n\r\nexport default useLogin;\r\n","import useLogin from './useLogin';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst LoginContainer = ({ children, ...props }) => {\r\n  const userProps = useLogin(props);\r\n  return children(userProps);\r\n};\r\n\r\nLoginContainer.propTypes = {};\r\n\r\nexport default toJS(LoginContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { registerUser } from '../redux/actions';\r\nimport {\r\n  selectUserRegistration,\r\n  selectUserRegistrationError,\r\n  selectUserRegistrationIsLoading,\r\n  selectUserRegistrationIsSuccess,\r\n} from '../redux/selectors';\r\n\r\nconst useRegistration = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    registerUser: (user, mappers) => dispatch(registerUser(user, mappers)),\r\n    error: select(selectUserRegistrationError),\r\n    isLoading: select(selectUserRegistrationIsLoading),\r\n    isSuccess: select(selectUserRegistrationIsSuccess),\r\n    user: select(selectUserRegistration).toJS(),\r\n  };\r\n};\r\n\r\nexport default useRegistration;\r\n","import useRegistration from './useRegistration';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst RegistrationContainer = ({ children, ...props }) => {\r\n  const userProps = useRegistration(props);\r\n  return children(userProps);\r\n};\r\n\r\nRegistrationContainer.propTypes = {};\r\n\r\nexport default toJS(RegistrationContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { requestPasswordReset } from '../redux/actions';\r\nimport {\r\n  selectPasswordResetRequestError,\r\n  selectPasswordResetRequestSending,\r\n  selectPasswordResetRequestSent,\r\n} from '../redux/selectors';\r\n\r\nconst useForgotPassword = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    isLoading: select(selectPasswordResetRequestSending),\r\n    isSuccess: select(selectPasswordResetRequestSent),\r\n    error: select(selectPasswordResetRequestError),\r\n    requestPasswordReset: userEmailObject =>\r\n      dispatch(requestPasswordReset(userEmailObject)),\r\n  };\r\n};\r\n\r\nexport default useForgotPassword;\r\n","import useForgotPassword from './useForgotPassword';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst ForgotPasswordContainer = ({ children, ...props }) => {\r\n  const userProps = useForgotPassword(props);\r\n  return children(userProps);\r\n};\r\n\r\nForgotPasswordContainer.propTypes = {};\r\n\r\nexport default toJS(ForgotPasswordContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCurrentSearch } from '~/core/redux/selectors/routing';\r\nimport { resetPassword } from '../redux/actions';\r\nimport {\r\n  selectResetPasswordSending,\r\n  selectResetPasswordSent,\r\n  selectResetPasswordError,\r\n} from '../redux/selectors';\r\n\r\nconst useResetPassword = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    queryString: select(selectCurrentSearch),\r\n    isLoading: select(selectResetPasswordSending),\r\n    isSuccess: select(selectResetPasswordSent),\r\n    error: select(selectResetPasswordError),\r\n    resetPassword: resetPasswordObject =>\r\n      dispatch(resetPassword(resetPasswordObject)),\r\n  };\r\n};\r\n\r\nexport default useResetPassword;\r\n","import useResetPassword from './useResetPassword';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst ResetPasswordContainer = ({ children, ...props }) => {\r\n  const userProps = useResetPassword(props);\r\n  return children(userProps);\r\n};\r\n\r\nResetPasswordContainer.propTypes = {};\r\n\r\nexport default toJS(ResetPasswordContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCurrentSearch } from '~/core/redux/selectors/routing';\r\nimport {\r\n  changePassword,\r\n  loginUser,\r\n  logoutUser,\r\n  registerUser,\r\n  requestPasswordReset,\r\n  resetPassword,\r\n} from '../redux/actions';\r\nimport {\r\n  selectUser,\r\n  selectUserAuthenticationError,\r\n  selectUserError,\r\n  selectUserIsAuthenticated,\r\n  selectUserIsLoading,\r\n  selectUserRegistrationError,\r\n  selectUserRegistrationIsLoading,\r\n  selectUserRegistrationIsSuccess,\r\n  selectUserRegistration,\r\n  selectPasswordResetRequestSending,\r\n  selectPasswordResetRequestSent,\r\n  selectPasswordResetRequestError,\r\n  selectResetPasswordSending,\r\n  selectResetPasswordSent,\r\n  selectResetPasswordError,\r\n  selectUserAuthenticationErrorMessage,\r\n  selectUserErrorMessage,\r\n  selectChangePasswordSending,\r\n  selectChangePasswordSent,\r\n  selectChangePasswordError,\r\n  selectUserGuid,\r\n} from '../redux/selectors';\r\n\r\nconst useUser = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    loginUser: (username, password) => dispatch(loginUser(username, password)),\r\n    logoutUser: redirectPath => dispatch(logoutUser(redirectPath)),\r\n    authenticationError: select(selectUserAuthenticationError),\r\n    authenticationErrorMessage: select(selectUserAuthenticationErrorMessage),\r\n    userError: select(selectUserError),\r\n    userErrorMessage: select(selectUserErrorMessage),\r\n    isAuthenticated: select(selectUserIsAuthenticated),\r\n    userIsLoading: select(selectUserIsLoading),\r\n    user: select(selectUser).toJS(),\r\n    userId: select(selectUserGuid),\r\n\r\n    registerUser: (user, mappers) => dispatch(registerUser(user, mappers)),\r\n    registrationError: select(selectUserRegistrationError),\r\n    registrationIsLoading: select(selectUserRegistrationIsLoading),\r\n    registrationIsSuccess: select(selectUserRegistrationIsSuccess),\r\n    userRegistration: select(selectUserRegistration).toJS(),\r\n\r\n    passwordResetRequestIsLoading: select(selectPasswordResetRequestSending),\r\n    passwordResetRequestIsSuccess: select(selectPasswordResetRequestSent),\r\n    passwordResetRequestError: select(selectPasswordResetRequestError),\r\n    requestPasswordReset: userEmailObject =>\r\n      dispatch(requestPasswordReset(userEmailObject)),\r\n\r\n    queryString: select(selectCurrentSearch),\r\n    passwordResetIsLoading: select(selectResetPasswordSending),\r\n    passwordResetIsSuccess: select(selectResetPasswordSent),\r\n    passwordResetError: select(selectResetPasswordError),\r\n    resetPassword: resetPasswordObject =>\r\n      dispatch(resetPassword(resetPasswordObject)),\r\n\r\n    changePasswordIsLoading: select(selectChangePasswordSending),\r\n    changePasswordIsSuccess: select(selectChangePasswordSent),\r\n    changePasswordError: select(selectChangePasswordError),\r\n    changePassword: (userId, currentPassword, newPassword) =>\r\n      dispatch(changePassword(userId, currentPassword, newPassword)),\r\n  };\r\n};\r\n\r\nexport default useUser;\r\n","import { toJS } from '~/core/util/ToJs';\r\nimport useUser from './useUser';\r\n\r\nconst UserContainer = ({ children, ...props }) => {\r\n  const userProps = useUser(props);\r\n  return children(userProps);\r\n};\r\n\r\nUserContainer.propTypes = {};\r\n\r\nexport default toJS(UserContainer);\r\n","import { connect } from 'react-redux';\r\nimport { loginUser, logoutUser } from '../redux/actions';\r\nimport {\r\n  selectUser,\r\n  selectUserAuthenticationError,\r\n  selectUserError,\r\n  selectUserIsAuthenticated,\r\n  selectUserIsLoading,\r\n} from '../redux/selectors';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst getDisplayName = WrappedComponent => {\r\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\r\n};\r\n\r\nconst withLogin = WrappedComponent => {\r\n  // Returns a redux-connected component with the following props:\r\n  // this.propTypes = {\r\n  //   loading: PropTypes.bool,\r\n  //   authenticated: PropTypes.bool,\r\n  //   authenticationError: PropTypes.bool,\r\n  //   error: PropTypes.bool,\r\n  //   user: PropTypes.object,\r\n  //   logoutUser: PropTypes.func,\r\n  //   isHeaderLogin: PropTypes.bool,\r\n  // };\r\n\r\n  const mapStateToProps = state => {\r\n    return {\r\n      authenticationError: selectUserAuthenticationError(state),\r\n      error: selectUserError(state),\r\n      isAuthenticated: selectUserIsAuthenticated(state),\r\n      isLoading: selectUserIsLoading(state),\r\n      user: selectUser(state),\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps = {\r\n    loginUser,\r\n    logoutUser,\r\n  };\r\n\r\n  const ConnectedComponent = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(toJS(WrappedComponent));\r\n\r\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\r\n\r\n  return ConnectedComponent;\r\n};\r\n\r\nexport default withLogin;\r\n","import { connect } from 'react-redux';\r\nimport { registerUser } from '../redux/actions';\r\nimport {\r\n  selectUserRegistration,\r\n  selectUserRegistrationError,\r\n  selectUserRegistrationIsLoading,\r\n  selectUserRegistrationIsSuccess,\r\n} from '../redux/selectors';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst getDisplayName = WrappedComponent => {\r\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\r\n};\r\n\r\nconst withRegistration = WrappedComponent => {\r\n  // Returns a redux-connected component with the following props:\r\n  // this.propTypes = {\r\n  //   registerUser: PropTypes.func,\r\n  //   isLoading: PropTypes.bool,\r\n  //   isSuccess: PropTypes.bool,\r\n  //   error: PropTypes.bool | PropTypes.object,\r\n  //   user: PropTypes.object,\r\n  // };\r\n\r\n  const mapStateToProps = state => {\r\n    return {\r\n      error: selectUserRegistrationError(state),\r\n      isLoading: selectUserRegistrationIsLoading(state),\r\n      isSuccess: selectUserRegistrationIsSuccess(state),\r\n      user: selectUserRegistration(state),\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps = {\r\n    registerUser,\r\n  };\r\n\r\n  const ConnectedComponent = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(toJS(WrappedComponent));\r\n\r\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\r\n\r\n  return ConnectedComponent;\r\n};\r\n\r\nexport default withRegistration;\r\n"],"names":["loginUser","username","password","action","LOGIN_USER","logoutUser","redirectPath","LOGOUT_USER","registerUser","user","mappers","REGISTER_USER","requestPasswordReset","userEmailObject","REQUEST_USER_PASSWORD_RESET","resetPassword","resetPasswordObject","RESET_USER_PASSWORD","changePassword","userId","currentPassword","newPassword","CHANGE_USER_PASSWORD","useLogin","dispatch","useDispatch","select","useSelector","authenticationError","selectUserAuthenticationError","authenticationErrorMessage","selectUserAuthenticationErrorMessage","error","selectUserError","errorMessage","selectUserErrorMessage","isAuthenticated","selectUserIsAuthenticated","isLoading","selectUserIsLoading","selectUser","toJS","LoginContainer","children","props","userProps","propTypes","useRegistration","selectUserRegistrationError","selectUserRegistrationIsLoading","isSuccess","selectUserRegistrationIsSuccess","selectUserRegistration","RegistrationContainer","useForgotPassword","selectPasswordResetRequestSending","selectPasswordResetRequestSent","selectPasswordResetRequestError","ForgotPasswordContainer","useResetPassword","queryString","selectCurrentSearch","selectResetPasswordSending","selectResetPasswordSent","selectResetPasswordError","ResetPasswordContainer","useUser","userError","userErrorMessage","userIsLoading","selectUserGuid","registrationError","registrationIsLoading","registrationIsSuccess","userRegistration","passwordResetRequestIsLoading","passwordResetRequestIsSuccess","passwordResetRequestError","passwordResetIsLoading","passwordResetIsSuccess","passwordResetError","changePasswordIsLoading","selectChangePasswordSending","changePasswordIsSuccess","selectChangePasswordSent","changePasswordError","selectChangePasswordError","UserContainer","getDisplayName","WrappedComponent","displayName","name","withLogin","mapStateToProps","state","mapDispatchToProps","ConnectedComponent","connect","withRegistration"],"mappings":"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"}
>>>>>>> 8f6a0bd... chore: Commit bundles
