{"version":3,"file":"login-43277e71.js","sources":["../src/app/core/util/fromJSOrdered.js","../src/app/features/login/redux/types.js","../src/app/features/login/redux/reducers.js","../src/app/core/util/ContensisManagementApi.js","../src/app/features/login/transformations/mapClientCredentials.js","../src/app/features/login/util/CookieHelper.class.js","../src/app/features/login/util/OidcUserManager.js","../src/app/features/login/util/LoginHelper.class.js","../src/app/features/login/redux/sagas/login.js"],"sourcesContent":["import { Seq } from 'immutable';\r\n\r\nconst fromJSOrdered = js => {\r\n  return typeof js !== 'object' || js === null\r\n    ? js\r\n    : Array.isArray(js)\r\n    ? Seq(js)\r\n        .map(fromJSOrdered)\r\n        .toList()\r\n    : Seq(js)\r\n        .map(fromJSOrdered)\r\n        .toOrderedMap();\r\n};\r\n\r\nexport default fromJSOrdered;\r\n","const ACTION_PREFIX = '@USER/';\r\nexport const SET_USER_LOADING = `${ACTION_PREFIX}SET_USER_LOADING`;\r\nexport const SET_AUTHENTICATION_STATE = `${ACTION_PREFIX}SET_AUTHENTICATION_STATE`;\r\nexport const LOGIN_USER = `${ACTION_PREFIX}LOGIN_USER`;\r\nexport const LOGIN_SUCCESSFUL = `${ACTION_PREFIX}LOGIN_SUCCESSFUL`;\r\nexport const LOGIN_FAILED = `${ACTION_PREFIX}LOGIN_FAILED`;\r\nexport const LOGOUT_USER = `${ACTION_PREFIX}LOGOUT_USER`;\r\nexport const REGISTER_USER = `${ACTION_PREFIX}REGISTER_USER`;\r\nexport const REGISTER_USER_SUCCESS = `${ACTION_PREFIX}REGISTER_USER_SUCCESS`;\r\nexport const REGISTER_USER_FAILED = `${ACTION_PREFIX}REGISTER_USER_FAILED`;\r\n","import { List, Map } from 'immutable';\r\nimport fromJSOrdered from '~/core/util/fromJSOrdered';\r\nimport {\r\n  REGISTER_USER,\r\n  REGISTER_USER_FAILED,\r\n  REGISTER_USER_SUCCESS,\r\n  SET_USER_LOADING,\r\n  SET_AUTHENTICATION_STATE,\r\n} from './types';\r\n\r\nconst defaultAuthenticationState = Map({\r\n  authenticated: false,\r\n  authenticationError: false,\r\n  clientCredentials: null,\r\n  error: false,\r\n  loading: false,\r\n});\r\n\r\nexport const initialUserState = Map({\r\n  authenticationState: defaultAuthenticationState,\r\n  groups: new List([]),\r\n});\r\n\r\nexport default (state = initialUserState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_LOADING:\r\n    case SET_AUTHENTICATION_STATE: {\r\n      if (!action.authenticationState) {\r\n        action.authenticationState = defaultAuthenticationState.toJS();\r\n      }\r\n\r\n      const loading = action.type === SET_USER_LOADING;\r\n\r\n      const {\r\n        authenticationState: {\r\n          error = false,\r\n          authenticated,\r\n          authenticationError = false,\r\n          clientCredentials = null,\r\n        },\r\n        user,\r\n      } = action;\r\n\r\n      if (user) {\r\n        user.name = `${user.firstName} ${user.lastName}`;\r\n        user.isZengentiStaff = user.email.includes('@zengenti.com');\r\n      }\r\n\r\n      const nextState = {\r\n        ...initialUserState.toJS(),\r\n        ...(user || state.toJS()),\r\n        authenticationState: {\r\n          authenticated:\r\n            authenticated ||\r\n            state.getIn(['authenticationState', 'authenticated']),\r\n          authenticationError,\r\n          clientCredentials,\r\n          error,\r\n          loading,\r\n        },\r\n      };\r\n      return fromJSOrdered(nextState);\r\n    }\r\n    // REGISTER_USER is the trigger to set the user.registration initial state\r\n    // and will set user.registration.loading to true\r\n    // REGISTER_USER_FAILED will unset user.registration.loading and will set\r\n    // the value in user.registration.error\r\n    // REGISTER_USER_SUCCESS will unset user.registration.loading and will\r\n    // set user.registration to the created user from the api response\r\n    case REGISTER_USER:\r\n    case REGISTER_USER_FAILED:\r\n    case REGISTER_USER_SUCCESS: {\r\n      const { error, user } = action;\r\n\r\n      // Set registration object from the supplied action.user\r\n      // so we can call these values back later\r\n      const nextState = state.set(\r\n        'registration',\r\n        user ? fromJSOrdered(user) : state.get('registration', Map())\r\n      );\r\n\r\n      // Set registration flags so the UI can track the status\r\n      return nextState\r\n        .setIn(\r\n          ['registration', 'success'],\r\n          action.type === REGISTER_USER_SUCCESS\r\n        )\r\n        .setIn(['registration', 'error'], error || false)\r\n        .setIn(['registration', 'loading'], action.type === REGISTER_USER);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Client } from 'contensis-management-api';\r\n\r\nexport const getManagementAPIClient = ({\r\n  bearerToken,\r\n  bearerTokenExpiryDate,\r\n  refreshToken,\r\n  refreshTokenExpiryDate,\r\n  contensisClassicToken,\r\n}) => {\r\n  const CMS_URL = SERVERS.api; /* global SERVERS */\r\n  const projectId = PROJECTS[0].id; /* global PROJECTS */\r\n\r\n  const managementApiClient = Client.create({\r\n    clientType: 'contensis_classic_refresh_token',\r\n    clientDetails: {\r\n      refreshToken,\r\n    },\r\n    projectId: projectId,\r\n    rootUrl: CMS_URL,\r\n  });\r\n\r\n  if (bearerToken) managementApiClient.bearerToken = bearerToken;\r\n  if (bearerTokenExpiryDate)\r\n    managementApiClient.bearerTokenExpiryDate = bearerTokenExpiryDate;\r\n  if (refreshToken) managementApiClient.refreshToken = refreshToken;\r\n  if (refreshTokenExpiryDate)\r\n    managementApiClient.refreshTokenExpiryDate = refreshTokenExpiryDate;\r\n  if (contensisClassicToken)\r\n    managementApiClient.contensisClassicToken = contensisClassicToken;\r\n\r\n  return managementApiClient;\r\n};\r\n","import { mapJson } from '~/core/util/json-mapper';\r\n\r\nconst clientCredentials = {\r\n  bearerToken: 'bearerToken',\r\n  bearerTokenExpiryDate: ({ bearerTokenExpiryDate }) =>\r\n    bearerTokenExpiryDate.toISOString(),\r\n  refreshToken: 'refreshToken',\r\n  refreshTokenExpiryDate: ({ refreshTokenExpiryDate }) =>\r\n    refreshTokenExpiryDate.toISOString(),\r\n  contensisClassicToken: 'contensisClassicToken',\r\n};\r\nexport default obj => mapJson(obj, clientCredentials);\r\n","import Cookies from 'js-cookie';\r\n\r\nconst COOKIE_VALID_DAYS = 1; // 0 = Session cookie\r\n\r\n// Override the default js-cookie conversion / encoding\r\n// methods so the written values work with Contensis sites\r\nconst _cookie = Cookies.withConverter({\r\n  read: value => decodeURIComponent(value),\r\n  write: value => encodeURIComponent(value),\r\n});\r\n\r\nexport class CookieHelper {\r\n  static GetCookie(name) {\r\n    let cookie = _cookie.get(name);\r\n    if (typeof cookie == 'undefined') {\r\n      return null;\r\n    }\r\n    return cookie;\r\n  }\r\n\r\n  static SetCookie(name, value, maxAgeDays = COOKIE_VALID_DAYS) {\r\n    maxAgeDays === 0\r\n      ? _cookie.set(name, value)\r\n      : _cookie.set(name, value, { expires: maxAgeDays });\r\n  }\r\n\r\n  static DeleteCookie(name) {\r\n    _cookie.remove(name);\r\n  }\r\n}\r\n","const context = typeof window != 'undefined' ? window : global;\r\nconst requireOidc =\r\n  process.env.NODE_ENV === 'development'\r\n    ? WSFED_LOGIN === 'true' /* global WSFED_LOGIN */\r\n    : context.WSFED_LOGIN === 'true';\r\n\r\nconst servers = SERVERS; /* global SERVERS */\r\n\r\nconst userManagerConfig =\r\n  typeof window !== 'undefined'\r\n    ? {\r\n        authority: `${servers.cms}/authenticate/`,\r\n        client_id: 'WebsiteAdfsClient',\r\n        redirect_uri: window.location.toString(),\r\n        post_logout_redirect_uri: window.location.toString(),\r\n        response_type: 'id_token',\r\n        scope: 'openid',\r\n        filterProtocolClaims: false,\r\n      }\r\n    : {};\r\n\r\nconst createUserManager = config => {\r\n  if (typeof window !== 'undefined' && requireOidc) {\r\n    try {\r\n      const UserManager = require('oidc-client').UserManager;\r\n      return new UserManager(config);\r\n    } catch (e) {\r\n      //\r\n    }\r\n  } else return {};\r\n};\r\n\r\nconst userManager = createUserManager(userManagerConfig);\r\n\r\nexport default userManager;\r\n","/* eslint-disable require-atomic-updates */\r\nimport { Client } from 'contensis-management-api';\r\nimport { getManagementAPIClient } from '~/core/util/ContensisManagementApi';\r\nimport { to } from 'await-to-js';\r\n\r\nimport { CookieHelper } from './CookieHelper.class';\r\n\r\nimport mapClientCredentials from '../transformations/mapClientCredentials';\r\nimport userManager from './OidcUserManager';\r\n\r\nexport const LOGIN_COOKIE = 'ContensisCMSUserName';\r\nexport const REFRESH_TOKEN_COOKIE = 'RefreshToken';\r\n\r\nconst context = typeof window != 'undefined' ? window : global;\r\n\r\nexport class LoginHelper {\r\n  static CMS_URL = SERVERS.cms /* global SERVERS */;\r\n  static WSFED_LOGIN =\r\n    process.env.NODE_ENV === 'development'\r\n      ? WSFED_LOGIN === 'true' /* global WSFED_LOGIN */\r\n      : context.WSFED_LOGIN === 'true';\r\n  static LOGIN_ROUTE = '/account/login';\r\n  static ACCESS_DENIED_ROUTE = '/account/access-denied';\r\n\r\n  static SetLoginCookies({ contensisClassicToken, refreshToken }) {\r\n    if (contensisClassicToken)\r\n      CookieHelper.SetCookie(LOGIN_COOKIE, contensisClassicToken);\r\n    if (refreshToken)\r\n      CookieHelper.SetCookie(REFRESH_TOKEN_COOKIE, refreshToken);\r\n  }\r\n\r\n  static GetCachedCredentials() {\r\n    return {\r\n      bearerToken: null,\r\n      bearerTokenExpiryDate: null,\r\n      refreshToken: CookieHelper.GetCookie(REFRESH_TOKEN_COOKIE),\r\n      refreshTokenExpiryDate: null,\r\n      contensisClassicToken: CookieHelper.GetCookie(LOGIN_COOKIE),\r\n    };\r\n  }\r\n\r\n  static ClearCachedCredentials() {\r\n    CookieHelper.DeleteCookie(LOGIN_COOKIE);\r\n    CookieHelper.DeleteCookie(REFRESH_TOKEN_COOKIE);\r\n  }\r\n\r\n  static GetClientForAuthentication = (username, password) => {\r\n    const projectId = PROJECTS[0].id; /* global PROJECTS */\r\n    return Client.create({\r\n      clientType: 'contensis_classic',\r\n      clientDetails: {\r\n        username,\r\n        password,\r\n      },\r\n      projectId: projectId,\r\n      rootUrl: LoginHelper.CMS_URL,\r\n    });\r\n  };\r\n\r\n  static async LoginUser(username, password) {\r\n    if (username && password) {\r\n      // Call LogonUser API\r\n      //const loginResponse = await SecurityApi.LogonUser(username, password);\r\n      const transientClient = LoginHelper.GetClientForAuthentication(\r\n        username,\r\n        password\r\n      );\r\n\r\n      // any error at this point should be treated like a login error\r\n      let clientErr, clientBearerToken;\r\n      [clientErr, clientBearerToken] = await to(\r\n        transientClient.ensureBearerToken()\r\n      );\r\n\r\n      if (clientErr) {\r\n        const authenticationError = clientErr.name.includes(\r\n          'ContensisAuthenticationError'\r\n        );\r\n        return {\r\n          authenticated: false,\r\n          authenticationError: authenticationError,\r\n          error: !authenticationError,\r\n          clientCredentials: null,\r\n        };\r\n      }\r\n\r\n      if (clientBearerToken) {\r\n        const clientCredentials = mapClientCredentials(transientClient);\r\n        this.SetLoginCookies(clientCredentials);\r\n        return {\r\n          authenticated: true,\r\n          authenticationError: false,\r\n          error: false,\r\n          clientCredentials,\r\n        };\r\n      }\r\n    } else {\r\n      // Don't call API if username and/or password empty\r\n      return {\r\n        authenticated: false,\r\n        authenticationError: false,\r\n        error: false,\r\n        clientCredentials: null,\r\n      };\r\n    }\r\n  }\r\n\r\n  static GetUserDetails = async clientCredentials => {\r\n    const client = getManagementAPIClient(clientCredentials);\r\n    let error,\r\n      user = {},\r\n      groupsResult;\r\n\r\n    [error, user] = await to(client.security.users.getCurrent());\r\n    if (user && user.id) {\r\n      [error, groupsResult] = await to(\r\n        client.security.users.getUserGroups({\r\n          userId: user.id,\r\n          includeInherited: true,\r\n        })\r\n      );\r\n      // Set groups attribute in user object to be the items\r\n      // array from the getUserGroups result\r\n      if (groupsResult && groupsResult.items) user.groups = groupsResult.items;\r\n    }\r\n    return {\r\n      error,\r\n      user,\r\n      clientCredentials: mapClientCredentials(client),\r\n    };\r\n  };\r\n\r\n  static LogoutUser(redirectPath) {\r\n    LoginHelper.ClearCachedCredentials();\r\n    if (LoginHelper.WSFED_LOGIN) {\r\n      LoginHelper.WsFedLogout(redirectPath);\r\n    } else {\r\n      if (redirectPath) LoginHelper.ClientRedirectToPath(redirectPath);\r\n      else LoginHelper.ClientRedirectToSignInPage();\r\n    }\r\n  }\r\n\r\n  static ClientRedirectToHome(location) {\r\n    if (typeof window != 'undefined') {\r\n      let url = '/';\r\n      if (location) {\r\n        const { search, hash } = location.toJS();\r\n        url = search ? `${url}${search}` : url;\r\n        url = hash ? `${url}${hash}` : url;\r\n      }\r\n      window.location.href = url;\r\n    }\r\n  }\r\n\r\n  static async ClientRedirectToSignInPage(redirectPath) {\r\n    if (LoginHelper.WSFED_LOGIN) {\r\n      await LoginHelper.WsFedLogout();\r\n      LoginHelper.WsFedLogin();\r\n    } else {\r\n      // Standard Contensis Login\r\n      let url = LoginHelper.LOGIN_ROUTE;\r\n      if (typeof redirectPath === 'string')\r\n        url = `${url}?redirect_uri=${redirectPath}`;\r\n      if (\r\n        typeof location !== 'undefined' &&\r\n        redirectPath !== LoginHelper.LOGIN_ROUTE\r\n      )\r\n        location.href = url;\r\n    }\r\n  }\r\n\r\n  static ClientRedirectToAccessDeniedPage(originalPath) {\r\n    let url = LoginHelper.ACCESS_DENIED_ROUTE;\r\n    if (originalPath === url) return;\r\n\r\n    if (typeof originalPath === 'string')\r\n      url = `${url}?original_uri=${originalPath}`;\r\n    if (typeof location !== 'undefined') location.href = url;\r\n  }\r\n\r\n  static ClientRedirectToPath(redirectPath) {\r\n    if (typeof redirectPath === 'string') {\r\n      if (typeof location !== 'undefined') window.location.href = redirectPath;\r\n    } else LoginHelper.ClientRedirectToHome();\r\n  }\r\n\r\n  static WsFedLogin(redirectUri) {\r\n    userManager.signinRedirect({\r\n      scope: 'openid',\r\n      response_type: 'id_token',\r\n      redirect_uri: redirectUri || window.location.toString(),\r\n    });\r\n  }\r\n\r\n  static async WsFedLogout(redirectPath) {\r\n    await fetch(\r\n      `${LoginHelper.CMS_URL}/authenticate/logout?jsonResponseRequired=true`,\r\n      {\r\n        credentials: 'include',\r\n      }\r\n    );\r\n    if (redirectPath) {\r\n      window.location = redirectPath;\r\n    }\r\n  }\r\n\r\n  static isZengentiStaff(email) {\r\n    const emailRefs = ['@zengenti', '@contensis'];\r\n\r\n    return emailRefs.some(emailRef => {\r\n      if (email.includes(emailRef)) {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Map } from 'immutable';\r\nimport { takeEvery, select, put, call } from 'redux-saga/effects';\r\nimport {\r\n  SET_USER_LOADING,\r\n  SET_AUTHENTICATION_STATE,\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n} from '../types';\r\nimport {\r\n  selectUserIsAuthenticated,\r\n  selectClientCredentials,\r\n  selectUserGroups,\r\n} from '../selectors';\r\n\r\nimport { setRoute } from '~/core/redux/actions/routing';\r\nimport { selectCurrentSearch } from '~/core/redux/selectors/routing';\r\nimport { getManagementAPIClient } from '~/core/util/ContensisManagementApi';\r\nimport { findContentTypeMapping } from '~/core/util/helpers';\r\nimport { queryParams } from '~/core/util/navigation';\r\nimport mapClientCredentials from '../../transformations/mapClientCredentials';\r\nimport { LoginHelper } from '../../util/LoginHelper.class';\r\nimport { matchUserGroup } from '../../util/matchGroups';\r\n\r\nexport const loginSagas = [\r\n  takeEvery(LOGIN_USER, loginUserSaga),\r\n  takeEvery(LOGOUT_USER, logoutUserSaga),\r\n  takeEvery(SET_AUTHENTICATION_STATE, redirectAfterSuccessfulLoginSaga),\r\n];\r\n\r\nexport function* handleRequiresLoginSaga(action) {\r\n  const {\r\n    entry,\r\n    requireLogin,\r\n    routes: { ContentTypeMappings },\r\n    staticRoute,\r\n  } = action;\r\n\r\n  // Check if any of the defined routes have \"requireLogin\" attribute\r\n  const { requireLogin: authRoute } = (staticRoute && staticRoute.route) || {};\r\n  const { requireLogin: authContentType } =\r\n    (entry &&\r\n      findContentTypeMapping(ContentTypeMappings, entry.sys.contentTypeId)) ||\r\n    {};\r\n\r\n  // if requireLogin, authRoute or authContentType has been specified as an\r\n  // array of groups we can merge the arrays and accept\r\n  // any matched group supplied from either approach\r\n  const routeRequiresGroups = [\r\n    ...((Array.isArray(authContentType) && authContentType) || []),\r\n    ...((Array.isArray(authRoute) && authRoute) || []),\r\n    ...((Array.isArray(requireLogin) && requireLogin) || []),\r\n  ];\r\n  const routeRequiresLogin = !!authContentType || !!authRoute || !!requireLogin;\r\n\r\n  // always validate and login user if cookies available on any route change\r\n  yield call(validateUserSaga);\r\n\r\n  if (routeRequiresLogin) {\r\n    const userLoggedIn = yield select(selectUserIsAuthenticated);\r\n    if (!userLoggedIn) {\r\n      // Because we are using the Client only redirects, they will not\r\n      // take effect during SSR\r\n      LoginHelper.ClientRedirectToSignInPage(action.location.pathname);\r\n    } else if (routeRequiresGroups.length > 0) {\r\n      const userGroups = (yield select(selectUserGroups)).toJS();\r\n      const groupMatch = matchUserGroup(userGroups, routeRequiresGroups);\r\n\r\n      if (!groupMatch)\r\n        LoginHelper.ClientRedirectToAccessDeniedPage(action.location.pathname);\r\n    }\r\n  }\r\n}\r\n\r\nfunction* redirectAfterSuccessfulLoginSaga() {\r\n  const isLoggedIn = yield select(selectUserIsAuthenticated);\r\n  const redirectPath = queryParams(yield select(selectCurrentSearch))\r\n    .redirect_uri;\r\n\r\n  if (isLoggedIn && redirectPath) {\r\n    yield put(setRoute(redirectPath));\r\n  }\r\n}\r\n\r\nfunction* loginUserSaga(action = {}) {\r\n  const { username, password } = action;\r\n  if (username) {\r\n    yield put({\r\n      type: SET_USER_LOADING,\r\n    });\r\n  }\r\n\r\n  // The elements we will eventually load into authenticationState\r\n  let clientCredentials = LoginHelper.GetCachedCredentials(),\r\n    error = false,\r\n    authenticated = false,\r\n    authenticationError = false,\r\n    user = null,\r\n    userError = false;\r\n\r\n  try {\r\n    if (!username) {\r\n      authenticated = true;\r\n    } else {\r\n      // here we are getting credentials from input username and password\r\n      // and destructuring the return object to our authenticationState elements\r\n      ({\r\n        error,\r\n        authenticated,\r\n        authenticationError,\r\n        clientCredentials,\r\n      } = yield LoginHelper.LoginUser(username, password));\r\n    }\r\n\r\n    // If the authenticated variable is true, we should have some clientCredentials\r\n    // continue getting the user's details with those credentials\r\n    if (authenticated) {\r\n      ({\r\n        error: userError,\r\n        user,\r\n        clientCredentials,\r\n      } = yield LoginHelper.GetUserDetails(clientCredentials));\r\n      if (userError) {\r\n        error = userError;\r\n        authenticated = false;\r\n        clientCredentials = null;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    error = e;\r\n    authenticated = false;\r\n    clientCredentials = null;\r\n\r\n    // eslint-disable-next-line no-console\r\n    console.log(e);\r\n  } finally {\r\n    yield put({\r\n      type: SET_AUTHENTICATION_STATE,\r\n      authenticationState: {\r\n        clientCredentials,\r\n        authenticated,\r\n        authenticationError,\r\n        error,\r\n      },\r\n      user,\r\n    });\r\n    if (!authenticated || error) {\r\n      // Clear cookies if auth has failed in any way\r\n      yield LoginHelper.ClearCachedCredentials();\r\n    }\r\n  }\r\n}\r\nfunction* logoutUserSaga({ redirectPath }) {\r\n  yield put({\r\n    type: SET_AUTHENTICATION_STATE,\r\n    user: null,\r\n  });\r\n  yield LoginHelper.LogoutUser(redirectPath);\r\n}\r\n\r\nfunction* validateUserSaga() {\r\n  // Check if querystring contains a securityToken\r\n  const currentQs = queryParams(yield select(selectCurrentSearch));\r\n  const securityToken = currentQs.securityToken || currentQs.securitytoken;\r\n  if (securityToken) {\r\n    LoginHelper.SetLoginCookies({ contensisClassicToken: securityToken });\r\n    if (LoginHelper.WSFED_LOGIN) {\r\n      const response = yield fetch(\r\n        `${LoginHelper.CMS_URL}/REST/Contensis/Security/IsAuthenticated`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            securityToken: encodeURIComponent(securityToken),\r\n          }),\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        const responseBody = yield response.json();\r\n        if (responseBody.LogonResult !== 0) {\r\n          // TODO : security token invalid\r\n        }\r\n        if (\r\n          !!responseBody.ApplicationData &&\r\n          !!responseBody.ApplicationData.length &&\r\n          responseBody.ApplicationData.length > 1 &&\r\n          // eslint-disable-next-line prettier/prettier\r\n          responseBody.ApplicationData[1].Key ===\r\n            'ContensisSecurityRefreshToken'\r\n        ) {\r\n          const refreshToken = responseBody.ApplicationData[1].Value;\r\n          LoginHelper.SetLoginCookies({\r\n            contensisClassicToken: securityToken,\r\n            refreshToken,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const userLoggedIn = yield select(selectUserIsAuthenticated);\r\n  if (userLoggedIn) return;\r\n\r\n  const credentials = LoginHelper.GetCachedCredentials();\r\n\r\n  if (\r\n    securityToken ||\r\n    (credentials && !userLoggedIn && credentials.refreshToken)\r\n  ) {\r\n    yield call(loginUserSaga);\r\n  }\r\n}\r\n\r\nexport function* refreshSecurityToken() {\r\n  const clientCredentials = (\r\n    (yield select(selectClientCredentials)) || Map()\r\n  ).toJS();\r\n  if (Object.keys(clientCredentials).length > 0) {\r\n    const client = getManagementAPIClient(clientCredentials);\r\n    yield client.authenticate();\r\n\r\n    const authenticationState = {};\r\n\r\n    const newClientCredentials = mapClientCredentials(client);\r\n\r\n    authenticationState.clientCredentials = newClientCredentials;\r\n\r\n    yield put({\r\n      type: SET_AUTHENTICATION_STATE,\r\n      authenticationState,\r\n    });\r\n  }\r\n}\r\n"],"names":["fromJSOrdered","js","Array","isArray","Seq","map","toList","toOrderedMap","ACTION_PREFIX","SET_USER_LOADING","SET_AUTHENTICATION_STATE","LOGIN_USER","LOGIN_SUCCESSFUL","LOGIN_FAILED","LOGOUT_USER","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","defaultAuthenticationState","Map","authenticated","authenticationError","clientCredentials","error","loading","initialUserState","authenticationState","groups","List","state","action","type","toJS","user","name","firstName","lastName","isZengentiStaff","email","includes","nextState","getIn","set","get","setIn","getManagementAPIClient","bearerToken","bearerTokenExpiryDate","refreshToken","refreshTokenExpiryDate","contensisClassicToken","CMS_URL","SERVERS","api","projectId","PROJECTS","id","managementApiClient","Client","create","clientType","clientDetails","rootUrl","toISOString","obj","mapJson","COOKIE_VALID_DAYS","_cookie","Cookies","withConverter","read","value","decodeURIComponent","write","encodeURIComponent","CookieHelper","GetCookie","cookie","SetCookie","maxAgeDays","expires","DeleteCookie","remove","context","window","global","requireOidc","process","env","NODE_ENV","WSFED_LOGIN","servers","userManagerConfig","authority","cms","client_id","redirect_uri","location","toString","post_logout_redirect_uri","response_type","scope","filterProtocolClaims","createUserManager","config","UserManager","require","e","userManager","LOGIN_COOKIE","REFRESH_TOKEN_COOKIE","LoginHelper","SetLoginCookies","GetCachedCredentials","ClearCachedCredentials","LoginUser","username","password","transientClient","GetClientForAuthentication","clientErr","clientBearerToken","to","ensureBearerToken","mapClientCredentials","LogoutUser","redirectPath","WsFedLogout","ClientRedirectToPath","ClientRedirectToSignInPage","ClientRedirectToHome","url","search","hash","href","WsFedLogin","LOGIN_ROUTE","ClientRedirectToAccessDeniedPage","originalPath","ACCESS_DENIED_ROUTE","redirectUri","signinRedirect","fetch","credentials","emailRefs","some","emailRef","GetUserDetails","client","groupsResult","security","users","getCurrent","getUserGroups","userId","includeInherited","items","loginSagas","takeEvery","loginUserSaga","logoutUserSaga","redirectAfterSuccessfulLoginSaga","handleRequiresLoginSaga","entry","requireLogin","routes","ContentTypeMappings","staticRoute","authRoute","route","authContentType","findContentTypeMapping","sys","contentTypeId","routeRequiresGroups","routeRequiresLogin","call","validateUserSaga","userLoggedIn","select","selectUserIsAuthenticated","pathname","length","userGroups","selectUserGroups","groupMatch","matchUserGroup","isLoggedIn","queryParams","selectCurrentSearch","put","setRoute","userError","console","log","currentQs","securityToken","securitytoken","response","method","headers","Accept","body","JSON","stringify","ok","responseBody","json","LogonResult","ApplicationData","Key","Value","refreshSecurityToken","selectClientCredentials","Object","keys","authenticate","newClientCredentials"],"mappings":"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"}