{"version":3,"file":"RouteLoader-281d47e1.js","sources":["../src/routing/components/NotFound.tsx","../src/routing/components/Status.tsx","../src/routing/components/RouteLoader.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst NotFound = ({\r\n  statusCode,\r\n  statusText,\r\n}: {\r\n  statusCode: number;\r\n  statusText: string;\r\n}) => (\r\n  <>\r\n    <header>\r\n      <h1>{statusCode || '404'} Page Not Found</h1>\r\n      {statusText && (\r\n        <h2\r\n          style={{\r\n            background: '#eee',\r\n            color: '#666',\r\n            fontSize: '100%',\r\n            padding: '10px',\r\n          }}\r\n        >\r\n          {statusText}\r\n        </h2>\r\n      )}\r\n    </header>\r\n  </>\r\n);\r\n\r\nexport default NotFound;\r\n","import React, { PropsWithChildren } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nexport const Status = ({\r\n  code,\r\n  children,\r\n}: PropsWithChildren<{ code: number }>) => {\r\n  return (\r\n    <Route\r\n      render={({ staticContext }) => {\r\n        if (staticContext) staticContext.statusCode = code;\r\n        return children;\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { hot } from 'react-hot-loader';\r\nimport { Redirect, useLocation } from 'react-router-dom';\r\nimport { renderRoutes, matchRoutes, RouteConfig } from 'react-router-config';\r\n\r\nimport NotFound from './NotFound';\r\nimport { Status } from './Status';\r\n\r\nimport {\r\n  selectCurrentPath,\r\n  selectCurrentProject,\r\n  selectIsNotFound,\r\n  selectMappedEntry,\r\n  selectRouteEntry,\r\n  selectRouteEntryContentTypeId,\r\n  selectRouteErrorMessage,\r\n  selectRouteIsError,\r\n  selectRouteLoading,\r\n  selectRouteStatusCode,\r\n} from '../redux/selectors';\r\nimport { setNavigationPath } from '../redux/actions';\r\n\r\nimport {\r\n  selectUserGroups,\r\n  selectUserIsAuthenticated,\r\n} from '~/user/redux/selectors';\r\nimport { matchUserGroup } from '~/user/util/matchGroups';\r\n\r\nimport { toJS } from '~/util/ToJs';\r\nimport { Entry } from 'contensis-delivery-api/lib/models';\r\nimport { AppRootProps, RouteLoaderProps } from '../routes';\r\n\r\nconst getTrimmedPath = path => {\r\n  if (path !== '/') {\r\n    const nextPath = path.replace(/\\/\\//, '/');\r\n    const lastChar = nextPath[nextPath.length - 1];\r\n    if (lastChar === '/') {\r\n      return nextPath.substring(0, nextPath.length - 1);\r\n    }\r\n  }\r\n  return path;\r\n};\r\n\r\ninterface IReduxProps {\r\n  contentTypeId: string;\r\n  entry: Entry;\r\n  isError: boolean;\r\n  isNotFound: boolean;\r\n  isLoading: boolean;\r\n  isLoggedIn: boolean;\r\n  mappedEntry: any;\r\n  projectId: string;\r\n  setNavigationPath: typeof setNavigationPath;\r\n  statePath: string;\r\n  statusCode: any;\r\n  statusText: string;\r\n  userGroups: any;\r\n}\r\n\r\nconst RouteLoader = ({\r\n  contentTypeId,\r\n  entry,\r\n  isError,\r\n  isLoading,\r\n  isLoggedIn,\r\n  isNotFound,\r\n  loadingComponent,\r\n  mappedEntry,\r\n  notFoundComponent,\r\n  projectId,\r\n  routes,\r\n  setNavigationPath,\r\n  statePath,\r\n  statusCode,\r\n  statusText,\r\n  userGroups,\r\n  withEvents,\r\n}: AppRootProps & RouteLoaderProps & IReduxProps) => {\r\n  const location = useLocation();\r\n  // Always ensure paths are trimmed of trailing slashes so urls are always unique\r\n  const trimmedPath = getTrimmedPath(location.pathname);\r\n\r\n  // Match any Static Routes a developer has defined\r\n  const matchedStaticRoute = () =>\r\n    matchRoutes(routes.StaticRoutes as RouteConfig[], location.pathname);\r\n  const isStaticRoute = () => matchedStaticRoute().length > 0;\r\n\r\n  const staticRoute = isStaticRoute() && matchedStaticRoute()[0];\r\n  const routeRequiresLogin = staticRoute && staticRoute.route.requireLogin;\r\n\r\n  const setPath = useCallback(() => {\r\n    // Use serverPath to control the path we send to siteview node api to resolve a route\r\n    let serverPath = '';\r\n    if (staticRoute && staticRoute.match && staticRoute.match.isExact) {\r\n      const { match, route } = staticRoute;\r\n\r\n      if (route.path?.includes('*')) {\r\n        // Send the whole url to api if we have matched route containing wildcard\r\n        serverPath = match.url;\r\n      } else if (typeof route.fetchNodeLevel === 'number') {\r\n        // Send all url parts to a specified level to api\r\n        serverPath = match.url\r\n          .split('/')\r\n          .splice(0, route.fetchNodeLevel + 1)\r\n          .join('/');\r\n      } else {\r\n        // Send all non-parameterised url parts to api\r\n        serverPath = (route.path as string)\r\n          ?.split('/')\r\n          .filter(p => !p.startsWith(':'))\r\n          .join('/');\r\n      }\r\n    }\r\n\r\n    setNavigationPath(\r\n      serverPath || trimmedPath,\r\n      location,\r\n      staticRoute,\r\n      withEvents,\r\n      statePath,\r\n      routes\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    setNavigationPath,\r\n    // staticRoute,\r\n    withEvents,\r\n    location,\r\n    routes,\r\n    // statePath,\r\n    trimmedPath,\r\n  ]);\r\n\r\n  if (typeof window == 'undefined') setPath();\r\n\r\n  useEffect(() => {\r\n    setPath();\r\n  }, [location, setPath]);\r\n\r\n  // Need to redirect when url endswith a /\r\n  if (location.pathname.length > trimmedPath.length) {\r\n    return <Redirect to={trimmedPath} />;\r\n  }\r\n\r\n  // Render any Static Routes a developer has defined\r\n  if (isStaticRoute() && !(!isLoggedIn && routeRequiresLogin)) {\r\n    if (matchUserGroup(userGroups, routeRequiresLogin))\r\n      return renderRoutes(routes.StaticRoutes as RouteConfig[], {\r\n        projectId,\r\n        contentTypeId,\r\n        entry,\r\n        mappedEntry,\r\n        isLoggedIn,\r\n      });\r\n  }\r\n\r\n  // Render a supplied Loading component if the route\r\n  // is not a static route and is in a loading state\r\n  if (isLoading && !isNotFound && loadingComponent) {\r\n    const LoadingComponent = loadingComponent;\r\n    return <LoadingComponent />;\r\n  }\r\n\r\n  // Match any defined Content Type Mappings\r\n  if (contentTypeId && !(!isLoggedIn && routeRequiresLogin)) {\r\n    const MatchedComponent = routes.ContentTypeMappings.find(\r\n      item => item.contentTypeID === contentTypeId\r\n    );\r\n\r\n    // debugger;\r\n    if (MatchedComponent && !(MatchedComponent.requireLogin && !isLoggedIn)) {\r\n      if (matchUserGroup(userGroups, MatchedComponent.requireLogin))\r\n        return (\r\n          <MatchedComponent.component\r\n            projectId={projectId}\r\n            contentTypeId={contentTypeId}\r\n            entry={entry}\r\n            mappedEntry={mappedEntry}\r\n            isLoggedIn={isLoggedIn}\r\n          />\r\n        );\r\n    }\r\n  }\r\n\r\n  const NotFoundComponent = notFoundComponent ? notFoundComponent : NotFound;\r\n  if (isNotFound || isError) {\r\n    return (\r\n      <Status code={statusCode}>\r\n        <NotFoundComponent statusCode={statusCode} statusText={statusText} />\r\n      </Status>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contentTypeId: selectRouteEntryContentTypeId(state),\r\n    entry: selectRouteEntry(state),\r\n    isError: selectRouteIsError(state),\r\n    isNotFound: selectIsNotFound(state),\r\n    isLoading: selectRouteLoading(state),\r\n    isLoggedIn: selectUserIsAuthenticated(state),\r\n    mappedEntry: selectMappedEntry(state),\r\n    projectId: selectCurrentProject(state),\r\n    statePath: selectCurrentPath(state),\r\n    statusCode: selectRouteStatusCode(state),\r\n    statusText: selectRouteErrorMessage(state),\r\n    userGroups: selectUserGroups(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setNavigationPath,\r\n};\r\n\r\nexport default hot(module)(\r\n  connect(mapStateToProps, mapDispatchToProps)(toJS(RouteLoader))\r\n);\r\n"],"names":["NotFound","statusCode","statusText","background","color","fontSize","padding","Status","code","children","staticContext","getTrimmedPath","path","nextPath","replace","lastChar","length","substring","RouteLoader","contentTypeId","entry","isError","isLoading","isLoggedIn","isNotFound","loadingComponent","mappedEntry","notFoundComponent","projectId","routes","setNavigationPath","statePath","userGroups","withEvents","location","useLocation","trimmedPath","pathname","matchedStaticRoute","matchRoutes","StaticRoutes","isStaticRoute","staticRoute","routeRequiresLogin","route","requireLogin","setPath","useCallback","serverPath","match","isExact","includes","url","fetchNodeLevel","split","splice","join","filter","p","startsWith","window","useEffect","matchUserGroup","renderRoutes","LoadingComponent","MatchedComponent","ContentTypeMappings","find","item","contentTypeID","NotFoundComponent","mapStateToProps","state","selectRouteEntryContentTypeId","selectRouteEntry","selectRouteIsError","selectIsNotFound","selectRouteLoading","selectUserIsAuthenticated","selectMappedEntry","selectCurrentProject","selectCurrentPath","selectRouteStatusCode","selectRouteErrorMessage","selectUserGroups","mapDispatchToProps","hot","module","connect","toJS"],"mappings":"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"}