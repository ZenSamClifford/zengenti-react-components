{"version":3,"file":"version-bcb568a3.js","sources":["../src/redux/types/navigation.js","../src/redux/reducers/navigation.ts","../src/routing/redux/reducers.ts","../src/redux/types/version.js","../src/redux/reducers/version.ts","../src/redux/store/routerMiddleware.js","../src/redux/store/store.ts","../src/redux/selectors/navigation.js","../src/redux/store/injectors.js","../src/redux/actions/version.js"],"sourcesContent":["const ACTION_PREFIX = '@NAVIGATION/';\r\nexport const GET_NODE_TREE = `${ACTION_PREFIX}_GET_NODE_TREE`;\r\nexport const SET_NODE_TREE = `${ACTION_PREFIX}_SET_NODE_TREE`;\r\nexport const GET_NODE_TREE_ERROR = `${ACTION_PREFIX}_GET_NODE_TREE_ERROR`;\r\n","import { Draft, produce } from 'immer';\r\nimport { SET_NODE_TREE, GET_NODE_TREE_ERROR } from '~/redux/types/navigation';\r\n\r\nconst initialState = {\r\n  root: null,\r\n  treeDepends: [],\r\n  isError: false,\r\n  isReady: false,\r\n};\r\n\r\nexport default produce((state: Draft<any>, action) => {\r\n  switch (action.type) {\r\n    case SET_NODE_TREE: {\r\n      state.root = action.nodes;\r\n      state.isReady = true;\r\n      return;\r\n    }\r\n    case GET_NODE_TREE_ERROR: {\r\n      state.isError = true;\r\n      return;\r\n    }\r\n    default:\r\n      return;\r\n  }\r\n}, initialState);\r\n","import { Draft, produce } from 'immer';\r\n\r\nimport {\r\n  SET_ENTRY,\r\n  SET_NAVIGATION_PATH,\r\n  SET_ANCESTORS,\r\n  SET_TARGET_PROJECT,\r\n  SET_ROUTE,\r\n  SET_SIBLINGS,\r\n  SET_SURROGATE_KEYS,\r\n  UPDATE_LOADING_STATE,\r\n} from './types';\r\n\r\nconst initialState = {\r\n  currentHostname: null,\r\n  contentTypeId: null,\r\n  currentPath: '/',\r\n  currentNode: {},\r\n  currentNodeAncestors: [],\r\n  currentProject: 'unknown',\r\n  entryID: null,\r\n  entry: null,\r\n  currentTreeId: null,\r\n  entryDepends: [],\r\n  error: undefined,\r\n  isError: false,\r\n  isLoading: false,\r\n  location: {},\r\n  mappedEntry: null,\r\n  nodeDepends: [],\r\n  notFound: false,\r\n  staticRoute: null,\r\n  statusCode: 200,\r\n};\r\n\r\nexport default produce((state: Draft<any>, action) => {\r\n  switch (action.type) {\r\n    case SET_ANCESTORS: {\r\n      state.currentNodeAncestors = action.ancestors;\r\n      return;\r\n    }\r\n    case SET_ENTRY: {\r\n      const {\r\n        entry,\r\n        error,\r\n        mappedEntry,\r\n        node = {},\r\n        isError = false,\r\n        isLoading = false,\r\n        notFound = false,\r\n        statusCode,\r\n      } = action;\r\n\r\n      let defaultStatus = 200;\r\n      if (notFound === true && isError === false) defaultStatus = 404;\r\n      else if (isError === true) defaultStatus = statusCode || 500;\r\n\r\n      if (!entry) {\r\n        state.entryID = null;\r\n        state.entry = null;\r\n        state.error = error;\r\n        state.mappedEntry = null;\r\n        state.isError = isError;\r\n        state.isLoading = isLoading;\r\n        state.notFound = notFound;\r\n        state.statusCode = statusCode || defaultStatus;\r\n      } else {\r\n        state.entryID = action.id;\r\n        state.entry = entry;\r\n        state.error = error;\r\n        state.isError = isError;\r\n        state.isLoading = isLoading;\r\n        state.notFound = notFound;\r\n        state.statusCode = statusCode || defaultStatus;\r\n\r\n        if (mappedEntry && Object.keys(mappedEntry).length > 0) {\r\n          state.mappedEntry = mappedEntry;\r\n          state.entry = { sys: entry.sys };\r\n        }\r\n      }\r\n\r\n      if (!node) {\r\n        state.nodeDepends = null;\r\n        state.currentNode = null;\r\n      } else {\r\n        // On Set Node, we reset all dependants.\r\n        state.currentNode = node;\r\n        delete state.currentNode.entry; // We have the entry stored elsewhere, so lets not keep it twice.\r\n      }\r\n      return;\r\n    }\r\n    case UPDATE_LOADING_STATE: {\r\n      state.isLoading = action.isLoading;\r\n      return;\r\n    }\r\n    case SET_NAVIGATION_PATH: {\r\n      let staticRoute = {} as any;\r\n      if (action.staticRoute) {\r\n        staticRoute = { ...action.staticRoute };\r\n      }\r\n      if (action.path) {\r\n        // Don't run a path update on initial load as we allready should have it in redux\r\n        const entryUri = state?.entry?.sys?.uri;\r\n        if (entryUri !== action.path) {\r\n          state.currentPath = action.path;\r\n          state.location = action.location;\r\n          state.staticRoute = {\r\n            ...staticRoute,\r\n            route: { ...staticRoute.route, component: null },\r\n          };\r\n\r\n          state.isLoading = typeof window !== 'undefined';\r\n        } else {\r\n          state.location = action.location;\r\n          state.staticRoute = {\r\n            ...staticRoute,\r\n            route: { ...staticRoute.route, component: null },\r\n          };\r\n        }\r\n      }\r\n      return;\r\n    }\r\n    case SET_ROUTE: {\r\n      state.nextPath = action.path;\r\n      return;\r\n    }\r\n    case SET_SIBLINGS: {\r\n      // Can be null in some cases like the homepage.\r\n      let currentNodeSiblingParent = null;\r\n      let siblingIDs = [];\r\n      if (action.siblings && action.siblings.length > 0) {\r\n        currentNodeSiblingParent = action.siblings[0].parentId;\r\n        siblingIDs = action.siblings.map(node => node.id);\r\n      }\r\n      const currentNodeDepends = state.nodeDepends;\r\n      const allNodeDepends = [\r\n        ...new Set([...new Set(siblingIDs), currentNodeDepends]),\r\n      ];\r\n      state.nodeDepends = allNodeDepends;\r\n      state.currentNodeSiblings = action.siblings;\r\n      state.currentNodeSiblingsParent = currentNodeSiblingParent;\r\n      return;\r\n    }\r\n    case SET_SURROGATE_KEYS: {\r\n      state.surrogateKeys = action.keys;\r\n      return;\r\n    }\r\n    case SET_TARGET_PROJECT: {\r\n      state.currentProject = action.project;\r\n      state.currentTreeId = ''; // getTreeID(action.project))\r\n      state.allowedGroups = action.allowedGroups;\r\n      state.currentHostname = action.hostname;\r\n      return;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}, initialState);\r\n","const VERSION_PREFIX = '@VERSION/';\r\nexport const SET_VERSION = `${VERSION_PREFIX}SET_VERSION`;\r\nexport const SET_VERSION_STATUS = `${VERSION_PREFIX}SET_VERSION_STATUS`;\r\n","import { Draft, produce } from 'immer';\r\nimport { SET_VERSION, SET_VERSION_STATUS } from '~/redux/types/version';\r\n\r\nconst initialState = {\r\n  commitRef: null,\r\n  buildNo: null,\r\n  contensisVersionStatus: 'published',\r\n};\r\n\r\nexport default produce((state: Draft<any>, action) => {\r\n  switch (action.type) {\r\n    case SET_VERSION_STATUS: {\r\n      state.contensisVersionStatus = action.status;\r\n      return;\r\n    }\r\n    case SET_VERSION: {\r\n      state.commitRef = action.commitRef;\r\n      state.buildNo = action.buildNo;\r\n      return;\r\n    }\r\n    default:\r\n      return;\r\n  }\r\n}, initialState);\r\n","/**\r\n * This middleware captures 'CALL_HISTORY_METHOD' actions to redirect to the\r\n * provided history object. This will prevent these actions from reaching your\r\n * reducer or any middleware that comes after this one.\r\n */\r\n/* eslint-disable no-unused-vars */\r\nconst routerMiddleware = history => store => next => action => {\r\n  if (action.type !== 'CALL_HISTORY_METHOD') {\r\n    return next(action);\r\n  }\r\n\r\n  const {\r\n    payload: { method, args },\r\n  } = action;\r\n  history[method](...args);\r\n};\r\n\r\nexport default routerMiddleware;\r\n","import {\r\n  applyMiddleware,\r\n  combineReducers,\r\n  compose,\r\n  createStore,\r\n  Action,\r\n  Store,\r\n  StoreEnhancer,\r\n} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport createSagaMiddleware, { END } from 'redux-saga';\r\nimport { createInjectorsEnhancer } from 'redux-injectors';\r\n\r\n// Core reducers\r\nimport NavigationReducer from '../reducers/navigation';\r\nimport RoutingReducer from '~/routing/redux/reducers';\r\nimport UserReducer from '~/user/redux/reducers';\r\nimport VersionReducer from '../reducers/version';\r\nimport routerMiddleware from './routerMiddleware';\r\nimport { AppState } from '../appstate';\r\nimport { History, MemoryHistory } from 'history';\r\nimport { StateType } from '~/config';\r\n\r\nexport let reduxStore;\r\n\r\n/* eslint-disable no-underscore-dangle */\r\ndeclare let window: Window &\r\n  typeof globalThis & {\r\n    __REDUX_DEVTOOLS_EXTENSION__: any;\r\n  };\r\n\r\nexport default async (\r\n  featureReducers: any,\r\n  initialState: AppState,\r\n  history: History | MemoryHistory,\r\n  stateType: StateType\r\n) => {\r\n  let reduxDevToolsMiddleware = f => f;\r\n\r\n  if (typeof window != 'undefined') {\r\n    reduxDevToolsMiddleware = window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : f => f;\r\n  }\r\n\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const reducers = {\r\n    navigation: NavigationReducer,\r\n    routing: RoutingReducer,\r\n    user: UserReducer,\r\n    version: VersionReducer,\r\n    ...featureReducers,\r\n  };\r\n\r\n  // Reassign the combiner and fromJS functions when\r\n  // stateType is 'immutable' with dynamic imports\r\n  let combiner = combineReducers;\r\n  let fromJS: any = (obj: any) => obj;\r\n\r\n  if (stateType === 'immutable') {\r\n    fromJS = (\r\n      await import(/* webpackChunkName: \"from-js\" */ '~/util/fromJSLeaveImmer')\r\n    ).default;\r\n\r\n    combiner = (\r\n      await import(/* webpackChunkName: \"redux-immutable\" */ 'redux-immutable')\r\n    ).combineReducers;\r\n  }\r\n\r\n  const createReducer = (injectedReducers = {}) => {\r\n    const rootReducer = combiner<AppState>({\r\n      ...injectedReducers,\r\n      // other non-injected reducers go here\r\n      ...reducers,\r\n    });\r\n\r\n    return rootReducer;\r\n  };\r\n\r\n  const store = (initialState: AppState) => {\r\n    const runSaga = sagaMiddleware.run;\r\n\r\n    const middleware: StoreEnhancer<\r\n      {\r\n        dispatch: unknown;\r\n      },\r\n      unknown\r\n    > = compose(\r\n      applyMiddleware(\r\n        thunkMiddleware,\r\n        sagaMiddleware,\r\n        routerMiddleware(history)\r\n      ),\r\n      createInjectorsEnhancer({\r\n        createReducer,\r\n        runSaga,\r\n      }),\r\n      reduxDevToolsMiddleware\r\n    );\r\n\r\n    const store: Store<AppState, Action<any>> & {\r\n      runSaga?: typeof runSaga;\r\n      close?: () => void;\r\n    } = createStore<AppState, Action<any>, unknown, unknown>(\r\n      createReducer(),\r\n      initialState,\r\n      middleware\r\n    );\r\n\r\n    store.runSaga = runSaga;\r\n    store.close = () => store.dispatch(END);\r\n\r\n    return store;\r\n  };\r\n\r\n  reduxStore = store(fromJS(initialState));\r\n  return reduxStore;\r\n};\r\n","import { getJS } from '../util';\r\n\r\nconst select = state => getJS(state, 'navigation');\r\n\r\nexport const hasNavigationTree = state => select(state)?.isReady;\r\n\r\nexport const selectNavigationRoot = state => select(state)?.root;\r\n\r\nexport const selectNavigationDepends = state => select(state)?.treeDepends;\r\n","import { all } from 'redux-saga/effects';\r\nimport { reduxStore as DefaultStore } from './store';\r\n\r\nexport const convertSagaArray = sagas => {\r\n  if (Array.isArray(sagas))\r\n    return function* rootSaga() {\r\n      yield all(sagas);\r\n    };\r\n  return sagas;\r\n};\r\n\r\nexport const injectReducer = ({ key, reducer }, store = DefaultStore) => {\r\n  if (\r\n    Reflect.has(store.injectedReducers, key) &&\r\n    store.injectedReducers[key] === reducer\r\n  )\r\n    return;\r\n  store.injectedReducers[key] = reducer;\r\n\r\n  store.replaceReducer(store.createReducer(store.injectedReducers));\r\n};\r\n\r\nexport const injectSaga = ({ key, saga }, store = DefaultStore) => {\r\n  const rootSaga = convertSagaArray(saga);\r\n  let hasSaga = Reflect.has(store.injectedSagas, key);\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const oldDescriptor = store.injectedSagas[key]; // enable hot reloading of daemon and once-till-unmount sagas\r\n\r\n    if (hasSaga && oldDescriptor.saga !== rootSaga) {\r\n      oldDescriptor.task.cancel();\r\n      hasSaga = false;\r\n    }\r\n  }\r\n  console.info('injectSaga, key: ', key, 'hasSaga: ', hasSaga);\r\n\r\n  if (!hasSaga) {\r\n    store.injectedSagas[key] = {\r\n      key,\r\n      saga: rootSaga,\r\n      task: store.runSaga(rootSaga),\r\n    };\r\n  }\r\n};\r\n\r\nexport const injectRedux = ({ key, reducer, saga }, store = DefaultStore) => {\r\n  console.info('injectRedux, key: ', key);\r\n  if (reducer) injectReducer({ key, reducer }, store);\r\n  if (saga) injectSaga({ key, saga }, store);\r\n};\r\n\r\nexport const useInjectRedux = injectRedux;\r\n","import { action } from '../util';\r\nimport { SET_VERSION, SET_VERSION_STATUS } from '../types/version';\r\n\r\nexport const setVersion = (commitRef, buildNo) =>\r\n  action(SET_VERSION, { commitRef, buildNo });\r\n\r\nexport const setVersionStatus = status =>\r\n  action(SET_VERSION_STATUS, { status });\r\n"],"names":["ACTION_PREFIX","GET_NODE_TREE","SET_NODE_TREE","GET_NODE_TREE_ERROR","initialState","root","treeDepends","isError","isReady","produce","state","action","type","nodes","currentHostname","contentTypeId","currentPath","currentNode","currentNodeAncestors","currentProject","entryID","entry","currentTreeId","entryDepends","error","undefined","isLoading","location","mappedEntry","nodeDepends","notFound","staticRoute","statusCode","SET_ANCESTORS","ancestors","SET_ENTRY","node","defaultStatus","id","Object","keys","length","sys","UPDATE_LOADING_STATE","SET_NAVIGATION_PATH","path","entryUri","uri","route","component","window","SET_ROUTE","nextPath","SET_SIBLINGS","currentNodeSiblingParent","siblingIDs","siblings","parentId","map","currentNodeDepends","allNodeDepends","Set","currentNodeSiblings","currentNodeSiblingsParent","SET_SURROGATE_KEYS","surrogateKeys","SET_TARGET_PROJECT","project","allowedGroups","hostname","VERSION_PREFIX","SET_VERSION","SET_VERSION_STATUS","commitRef","buildNo","contensisVersionStatus","status","routerMiddleware","history","store","next","payload","method","args","featureReducers","stateType","reduxDevToolsMiddleware","f","__REDUX_DEVTOOLS_EXTENSION__","sagaMiddleware","createSagaMiddleware","reducers","navigation","NavigationReducer","routing","RoutingReducer","user","UserReducer","version","VersionReducer","combiner","combineReducers","fromJS","obj","default","createReducer","injectedReducers","rootReducer","runSaga","run","middleware","compose","applyMiddleware","thunkMiddleware","createInjectorsEnhancer","createStore","close","dispatch","END","reduxStore","select","getJS","hasNavigationTree","selectNavigationRoot","selectNavigationDepends","convertSagaArray","sagas","Array","isArray","rootSaga","all","injectReducer","key","reducer","DefaultStore","Reflect","has","replaceReducer","injectSaga","saga","hasSaga","injectedSagas","process","env","NODE_ENV","oldDescriptor","task","cancel","console","info","injectRedux","useInjectRedux","setVersion","setVersionStatus"],"mappings":"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"}