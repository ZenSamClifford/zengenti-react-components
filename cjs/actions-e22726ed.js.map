{"version":3,"file":"actions-e22726ed.js","sources":["../src/routing/redux/types.js","../src/redux/util.js","../src/routing/redux/actions.js"],"sourcesContent":["const ROUTING_PREFIX = '@ROUTING/';\r\nexport const GET_ENTRY = `${ROUTING_PREFIX}_GET_ENTRY`;\r\nexport const SET_ENTRY = `${ROUTING_PREFIX}_SET_ENTRY`;\r\nexport const SET_NODE = `${ROUTING_PREFIX}_SET_NODE`;\r\nexport const SET_ANCESTORS = `${ROUTING_PREFIX}_SET_ANCESTORS`;\r\nexport const SET_SIBLINGS = `${ROUTING_PREFIX}_SET_SIBLINGS`;\r\nexport const SET_ENTRY_ID = `${ROUTING_PREFIX}_SET_ENTRY_ID`;\r\nexport const SET_SURROGATE_KEYS = `${ROUTING_PREFIX}_SET_SURROGATE_KEYS`;\r\n\r\nexport const SET_NAVIGATION_NOT_FOUND = `${ROUTING_PREFIX}_SET_NOT_FOUND`;\r\nexport const SET_NAVIGATION_PATH = `${ROUTING_PREFIX}_SET_NAVIGATION_PATH`;\r\n\r\nexport const SET_TARGET_PROJECT = `${ROUTING_PREFIX}_SET_TARGET_PROJECT`;\r\n\r\nexport const SET_ROUTE = `${ROUTING_PREFIX}_SET_ROUTE`;\r\n\r\nexport const UPDATE_LOADING_STATE = `${ROUTING_PREFIX}_UPDATE_LOADING_STATE`;\r\n","export const action = (type, payload = {}) => ({ type, ...payload });\r\n","import { action } from '~/redux/util';\r\nimport {\r\n  SET_ENTRY,\r\n  SET_NAVIGATION_NOT_FOUND,\r\n  SET_NAVIGATION_PATH,\r\n  SET_TARGET_PROJECT,\r\n  SET_ROUTE,\r\n  SET_SURROGATE_KEYS,\r\n} from './types';\r\n\r\nexport const setNotFound = notFound =>\r\n  action(SET_NAVIGATION_NOT_FOUND, { notFound });\r\nexport const setNavigationPath = (\r\n  path,\r\n  location,\r\n  staticRoute,\r\n  withEvents,\r\n  statePath,\r\n  routes\r\n) =>\r\n  action(SET_NAVIGATION_PATH, {\r\n    path,\r\n    location,\r\n    staticRoute,\r\n    withEvents,\r\n    statePath,\r\n    routes,\r\n  });\r\nexport const setCurrentProject = (project, allowedGroups, hostname) =>\r\n  action(SET_TARGET_PROJECT, { project, allowedGroups, hostname });\r\nexport const setRoute = (path, state) => action(SET_ROUTE, { path, state });\r\nexport const setRouteEntry = entry => action(SET_ENTRY, { entry });\r\nexport const setSurrogateKeys = keys => action(SET_SURROGATE_KEYS, { keys });\r\n"],"names":["ROUTING_PREFIX","GET_ENTRY","SET_ENTRY","SET_NODE","SET_ANCESTORS","SET_SIBLINGS","SET_ENTRY_ID","SET_SURROGATE_KEYS","SET_NAVIGATION_NOT_FOUND","SET_NAVIGATION_PATH","SET_TARGET_PROJECT","SET_ROUTE","UPDATE_LOADING_STATE","action","type","payload","setNotFound","notFound","setNavigationPath","path","location","staticRoute","withEvents","statePath","routes","setCurrentProject","project","allowedGroups","hostname","setRoute","state","setRouteEntry","entry","setSurrogateKeys","keys"],"mappings":";;AAAA,MAAMA,cAAc,GAAG,WAAvB;AACO,MAAMC,SAAS,GAAI,GAAED,cAAe,YAApC;MACME,SAAS,GAAI,GAAEF,cAAe;AACpC,MAAMG,QAAQ,GAAI,GAAEH,cAAe,WAAnC;MACMI,aAAa,GAAI,GAAEJ,cAAe;MAClCK,YAAY,GAAI,GAAEL,cAAe;AACvC,MAAMM,YAAY,GAAI,GAAEN,cAAe,eAAvC;MACMO,kBAAkB,GAAI,GAAEP,cAAe;AAE7C,MAAMQ,wBAAwB,GAAI,GAAER,cAAe,gBAAnD;MACMS,mBAAmB,GAAI,GAAET,cAAe;MAExCU,kBAAkB,GAAI,GAAEV,cAAe;MAEvCW,SAAS,GAAI,GAAEX,cAAe;MAE9BY,oBAAoB,GAAI,GAAEZ,cAAe;;;;;;;;;;;;;;;;;;MChBzCa,MAAM,GAAG,CAACC,IAAD,EAAOC,OAAO,GAAG,EAAjB,MAAyB;AAAED,EAAAA,IAAF;AAAQ,KAAGC;AAAX,CAAzB;;ACUf,MAAMC,WAAW,GAAGC,QAAQ,IACjCJ,MAAM,CAACL,wBAAD,EAA2B;AAAES,EAAAA;AAAF,CAA3B,CADD;MAEMC,iBAAiB,GAAG,CAC/BC,IAD+B,EAE/BC,QAF+B,EAG/BC,WAH+B,EAI/BC,UAJ+B,EAK/BC,SAL+B,EAM/BC,MAN+B,KAQ/BX,MAAM,CAACJ,mBAAD,EAAsB;AAC1BU,EAAAA,IAD0B;AAE1BC,EAAAA,QAF0B;AAG1BC,EAAAA,WAH0B;AAI1BC,EAAAA,UAJ0B;AAK1BC,EAAAA,SAL0B;AAM1BC,EAAAA;AAN0B,CAAtB;MAQKC,iBAAiB,GAAG,CAACC,OAAD,EAAUC,aAAV,EAAyBC,QAAzB,KAC/Bf,MAAM,CAACH,kBAAD,EAAqB;AAAEgB,EAAAA,OAAF;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA;AAA1B,CAArB;MACKC,QAAQ,GAAG,CAACV,IAAD,EAAOW,KAAP,KAAiBjB,MAAM,CAACF,SAAD,EAAY;AAAEQ,EAAAA,IAAF;AAAQW,EAAAA;AAAR,CAAZ;AACxC,MAAMC,aAAa,GAAGC,KAAK,IAAInB,MAAM,CAACX,SAAD,EAAY;AAAE8B,EAAAA;AAAF,CAAZ,CAArC;MACMC,gBAAgB,GAAGC,IAAI,IAAIrB,MAAM,CAACN,kBAAD,EAAqB;AAAE2B,EAAAA;AAAF,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}