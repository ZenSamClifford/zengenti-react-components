{"version":3,"file":"reducers-3f2c29e6.js","sources":["../src/user/redux/types.js","../src/user/redux/reducers.ts"],"sourcesContent":["const ACTION_PREFIX = '@USER/';\r\nexport const VALIDATE_USER = `${ACTION_PREFIX}VALIDATE_USER`;\r\nexport const SET_AUTHENTICATION_STATE = `${ACTION_PREFIX}SET_AUTHENTICATION_STATE`;\r\nexport const LOGIN_USER = `${ACTION_PREFIX}LOGIN_USER`;\r\nexport const LOGIN_SUCCESSFUL = `${ACTION_PREFIX}LOGIN_SUCCESSFUL`;\r\nexport const LOGIN_FAILED = `${ACTION_PREFIX}LOGIN_FAILED`;\r\nexport const LOGOUT_USER = `${ACTION_PREFIX}LOGOUT_USER`;\r\nexport const REGISTER_USER = `${ACTION_PREFIX}REGISTER_USER`;\r\nexport const REGISTER_USER_SUCCESS = `${ACTION_PREFIX}REGISTER_USER_SUCCESS`;\r\nexport const REGISTER_USER_FAILED = `${ACTION_PREFIX}REGISTER_USER_FAILED`;\r\n","import { Draft, produce } from 'immer';\r\nimport {\r\n  REGISTER_USER,\r\n  REGISTER_USER_FAILED,\r\n  REGISTER_USER_SUCCESS,\r\n  SET_AUTHENTICATION_STATE,\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n} from './types';\r\n\r\nconst defaultAuthenticationState = {\r\n  authenticated: false,\r\n  authenticationError: false,\r\n  clientCredentials: null,\r\n  error: false,\r\n  loading: false,\r\n};\r\n\r\nexport const initialUserState = {\r\n  authenticationState: defaultAuthenticationState,\r\n  groups: [],\r\n};\r\n\r\nexport default produce((state: Draft<any>, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n    case LOGOUT_USER:\r\n    case SET_AUTHENTICATION_STATE: {\r\n      if (!action.authenticationState) {\r\n        action.authenticationState = defaultAuthenticationState;\r\n      }\r\n\r\n      const loading = action.type === LOGIN_USER;\r\n\r\n      const {\r\n        authenticationState: {\r\n          error = false,\r\n          authenticated,\r\n          authenticationError = false,\r\n          clientCredentials = null,\r\n        },\r\n        user,\r\n      } = action;\r\n\r\n      if (user) {\r\n        user.name = `${user.firstName} ${user.lastName}`;\r\n        user.isZengentiStaff = user.email.includes('@zengenti.com');\r\n      }\r\n\r\n      state = {\r\n        ...initialUserState,\r\n        ...(user || state),\r\n        authenticationState: {\r\n          authenticated:\r\n            authenticated || state?.authenticationState?.authenticated,\r\n          authenticationError,\r\n          clientCredentials,\r\n          error,\r\n          loading,\r\n        },\r\n      };\r\n      return;\r\n    }\r\n    // REGISTER_USER is the trigger to set the user.registration initial state\r\n    // and will set user.registration.loading to true\r\n    // REGISTER_USER_FAILED will unset user.registration.loading and will set\r\n    // the value in user.registration.error\r\n    // REGISTER_USER_SUCCESS will unset user.registration.loading and will\r\n    // set user.registration to the created user from the api response\r\n    case REGISTER_USER:\r\n    case REGISTER_USER_FAILED:\r\n    case REGISTER_USER_SUCCESS: {\r\n      const { error, user } = action;\r\n\r\n      // Set registration object from the supplied action.user\r\n      // so we can call these values back later\r\n      state.registration = user || state.registration || {};\r\n\r\n      // Set registration flags so the UI can track the status\r\n      state.registration.success = action.type === REGISTER_USER_SUCCESS;\r\n      state.registration.error = error || false;\r\n      state.registration.loading = action.type === REGISTER_USER;\r\n      return;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}, initialUserState);\r\n"],"names":["ACTION_PREFIX","VALIDATE_USER","SET_AUTHENTICATION_STATE","LOGIN_USER","LOGIN_SUCCESSFUL","LOGIN_FAILED","LOGOUT_USER","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","defaultAuthenticationState","authenticated","authenticationError","clientCredentials","error","loading","initialUserState","authenticationState","groups","produce","state","action","type","user","name","firstName","lastName","isZengentiStaff","email","includes","registration","success"],"mappings":"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"}