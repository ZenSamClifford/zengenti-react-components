{"version":3,"file":"App-f0a6d8e9.js","sources":["../src/app/core/redux/history.js","../src/app/core/util/pickProject.js","../src/app/core/redux/reducers/routing.js","../src/app/core/redux/reducers/version.js","../src/app/core/redux/reducers/navigation.js","../src/app/core/redux/routerMiddleware.js","../src/app/core/redux/store.js","../src/app/core/util/ContensisDeliveryApi.js","../src/app/core/schema.js","../src/app/core/search/expressions.js","../src/app/core/redux/sagas/queries.js","../src/app/core/redux/sagas/routing.js","../src/app/core/redux/sagas/navigation.js","../src/app/core/redux/sagas/index.js","../src/app/App.js"],"sourcesContent":["import { createBrowserHistory, createMemoryHistory } from 'history';\n\n// Create a history depending on the environment\nconst selectedHistory =\n  typeof window !== 'undefined' ? createBrowserHistory : createMemoryHistory;\n\nexport const history = (options = {}) => selectedHistory(options);\nexport const browserHistory = selectedHistory();\n","const servers = SERVERS; /* global SERVERS */\nconst alias = servers.alias.toLowerCase();\nconst publicUri = PUBLIC_URI; /* global PUBLIC_URI */\nconst projects = PROJECTS; /* global PROJECTS */\n\n// return a projectId via the request hostname\nconst pickProject = (hostname, query) => {\n  // if localhost we can only infer via a querystring, and take your word for it\n  if (hostname == 'localhost') {\n    return (query && query.p) || projects[0].id;\n  }\n\n  // if hostname is the actual public uri we can return the first project from the list\n  if (hostname == publicUri) {\n    return projects[0].id;\n  }\n\n  let project = 'unknown';\n\n  // // go through all the defined projects\n  // Object.entries(projects).map(([, p]) => {\n  const p = projects[0];\n\n  // check if we're accessing via the project's public uri\n  if (hostname.includes(p.publicUri)) project = p.id;\n\n  // the url structure is different for website (we don't prefix)\n  if (p.id.startsWith('website')) {\n    // check for internal and external hostnames\n    // we check live and preview distinctly so our rule does not clash with\n    // hostnames that use a project prefix\n    if (\n      hostname.includes(`live-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`live.${alias}.contensis.cloud`) ||\n      hostname.includes(`preview-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`preview.${alias}.contensis.cloud`)\n    )\n      project = p.id;\n  } else {\n    // check for internal and external hostnames, prefixed with the projectId\n    if (\n      hostname.includes(`${p.id.toLowerCase()}-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`${p.id.toLowerCase()}.${alias}.contensis.cloud`)\n    )\n      project = p.id;\n  }\n  // });\n  return project === 'unknown' ? p.id : project;\n};\n\nexport default pickProject;\n","import { Map, fromJS, List, Set } from 'immutable';\nimport {\n  // SET_ENTRY_ID,\n  // SET_NAVIGATION_NOT_FOUND,\n  // SET_NODE,\n  SET_ENTRY,\n  SET_NAVIGATION_PATH,\n  SET_ANCESTORS,\n  SET_TARGET_PROJECT,\n  SET_ROUTE,\n  SET_SIBLINGS,\n  MAP_ENTRY,\n  SET_SURROGATE_KEYS,\n} from '~/core/redux/types/routing';\nimport { GetAllResponseGuids } from '~/core/util/ContensisDeliveryApi';\n\nlet initialState = Map({\n  currentPath: '/',\n  currentNode: [],\n  currentProject: 'unknown',\n  notFound: false,\n  entryID: null,\n  entry: null,\n  contentTypeId: null,\n  currentNodeAncestors: new List(),\n  currentTreeId: null,\n});\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case MAP_ENTRY: {\n      return state.set('mappedEntry', fromJS(action.mappedEntry));\n    }\n    case SET_ANCESTORS: {\n      if (action.ancestors) {\n        let ancestorIDs = action.ancestors.map(node => {\n          return node.id;\n        });\n\n        return state.set('currentNodeAncestors', fromJS(action.ancestors));\n      }\n      return state.set('currentNodeAncestors', fromJS(action.ancestors));\n    }\n    case SET_ENTRY: {\n      const { entry, node = {}, isLoading = false } = action;\n      let nextState;\n\n      if (!entry) {\n        nextState = state\n          .set('entryID', null)\n          .set('entry', null)\n          .set('mappedEntry', null)\n          .set('isLoading', isLoading);\n      } else {\n        nextState = state\n          .set('entryID', action.id)\n          .set('entry', fromJS(entry))\n          .set('isLoading', isLoading);\n      }\n\n      if (!node) {\n        return nextState.set('nodeDepends', null).set('currentNode', null);\n      } else {\n        // On Set Node, we reset all dependants.\n        return nextState\n          .set('currentNode', fromJS(node))\n          .removeIn(['currentNode', 'entry']); // We have the entry stored elsewhere, so lets not keep it twice.\n      }\n    }\n    case SET_NAVIGATION_PATH: {\n      let staticRoute = false;\n      if (action.staticRoute) {\n        staticRoute = { ...action.staticRoute };\n      }\n      if (action.path) {\n        // Don't run a path update on iniutial load as we allready should have it in redux\n        const entryUri = state.getIn(['entry', 'sys', 'uri']);\n        if (entryUri != action.path) {\n          return state\n            .set('currentPath', fromJS(action.path))\n            .set('location', fromJS(action.location))\n            .set(\n              'staticRoute',\n              fromJS({\n                ...staticRoute,\n                route: { ...staticRoute.route, component: null },\n              })\n            )\n            .set('isLoading', typeof window !== 'undefined');\n        } else {\n          return state.set('location', fromJS(action.location)).set(\n            'staticRoute',\n            fromJS({\n              ...staticRoute,\n              route: { ...staticRoute.route, component: null },\n            })\n          );\n        }\n      }\n      return state;\n    }\n    // case SET_NAVIGATION_NOT_FOUND: {\n    //   return state\n    //     .set('notFound', fromJS(action.notFound))\n    //     .set('isLoading', false);\n    // }\n    // case SET_NODE: {\n    //   const { node } = action;\n    //   if (!node) return state;\n    //   // On Set Node, we reset all dependants.\n    //   const nodeDepends = Set([node.id]);\n    //   return state\n    //     .set('nodeDepends', nodeDepends)\n    //     .set('currentNode', fromJS(action.node))\n    //     .removeIn(['currentNode', 'entry']); // We have the entry stored elsewhere, so lets not keep it twice.\n    // }\n    case SET_ROUTE: {\n      return state.set('nextPath', action.path);\n    }\n    case SET_SIBLINGS: {\n      // Can be null in some cases like the homepage.\n      let currentNodeSiblingParent = null;\n      let siblingIDs = [];\n      if (action.siblings && action.siblings.length > 0) {\n        currentNodeSiblingParent = action.siblings[0].parentId;\n        siblingIDs = action.siblings.map(node => {\n          return node.id;\n        });\n      }\n      let currentNodeDepends = state.get('nodeDepends');\n      const allNodeDepends = Set.union([Set(siblingIDs), currentNodeDepends]);\n      return state\n        .set('nodeDepends', allNodeDepends)\n        .set('currentNodeSiblings', fromJS(action.siblings))\n        .set('currentNodeSiblingsParent', currentNodeSiblingParent);\n    }\n    case SET_SURROGATE_KEYS: {\n      return state.set('surrogateKeys', action.keys);\n    }\n    case SET_TARGET_PROJECT: {\n      return state\n        .set('currentProject', action.project)\n        .set('currentTreeId', '') //getTreeID(action.project))\n        .set('allowedGroups', fromJS(action.allowedGroups));\n    }\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport { SET_VERSION, SET_VERSION_STATUS } from '~/core/redux/types/version';\n\nlet initialState = Map({\n  commitRef: null,\n  buildNo: null,\n  contensisVersionStatus: 'published',\n});\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_VERSION_STATUS: {\n      return state.set('contensisVersionStatus', action.status);\n    }\n    case SET_VERSION: {\n      return state\n        .set('commitRef', action.commitRef)\n        .set('buildNo', action.buildNo);\n    }\n    default:\n      return state;\n  }\n};\n","import { Map, fromJS, List } from 'immutable';\n\nimport {\n  SET_NODE_TREE,\n  GET_NODE_TREE_ERROR,\n} from '~/core/redux/types/navigation';\n\nconst initialState = Map({\n  root: null,\n  treeDepends: new List([]),\n  isError: false,\n  isReady: false,\n});\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_NODE_TREE: {\n      return state.set('root', fromJS(action.nodes)).set('isReady', true);\n    }\n    case GET_NODE_TREE_ERROR: {\n      return state.set('isError', true);\n    }\n    default:\n      return state;\n  }\n};\n","import { CALL_HISTORY_METHOD } from '~/core/redux/types/routing';\n\n/**\n * This middleware captures CALL_HISTORY_METHOD actions to redirect to the\n * provided history object. This will prevent these actions from reaching your\n * reducer or any middleware that comes after this one.\n */\n/* eslint-disable no-unused-vars */\nconst routerMiddleware = history => store => next => action => {\n  if (action.type !== CALL_HISTORY_METHOD) {\n    return next(action);\n  }\n\n  const {\n    payload: { method, args },\n  } = action;\n  history[method](...args);\n};\n\nexport default routerMiddleware;\n","import { compose, createStore, applyMiddleware } from 'redux';\nimport { combineReducers } from 'redux-immutable';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware, { END } from 'redux-saga';\n\n// Core reducers\nimport RoutingReducer from './reducers/routing';\nimport VersionReducer from './reducers/version';\nimport NavigationReducer from './reducers/navigation';\nimport routerMiddleware from './routerMiddleware';\n\nexport let reduxStore = null;\n\nexport default (featureReducers, initialState, history) => {\n  const thunkMiddleware = [thunk];\n\n  let reduxDevToolsMiddleware = f => f;\n\n  if (typeof window != 'undefined') {\n    reduxDevToolsMiddleware = window.__REDUX_DEVTOOLS_EXTENSION__\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\n      : f => f;\n  }\n\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = compose(\n    applyMiddleware(\n      ...thunkMiddleware,\n      sagaMiddleware,\n      routerMiddleware(history)\n    ),\n    reduxDevToolsMiddleware\n  );\n\n  let reducers = {\n    navigation: NavigationReducer,\n    routing: RoutingReducer,\n    version: VersionReducer,\n    ...featureReducers,\n  };\n\n  const combinedReducers = combineReducers(reducers);\n\n  const store = initialState => {\n    const store = createStore(combinedReducers, initialState, middleware);\n    store.runSaga = sagaMiddleware.run;\n    store.close = () => store.dispatch(END);\n    return store;\n  };\n\n  reduxStore = store(initialState);\n  return reduxStore;\n};\n","import { Client } from 'contensis-delivery-api';\nimport { setSurrogateKeys } from '../redux/actions/routing';\nimport { reduxStore } from '../redux/store';\n\nconst storeSurrogateKeys = response => {\n  const keys = response.headers.get\n    ? response.headers.get('surrogate-key')\n    : response.headers.map['surrogate-key'];\n  if (keys) reduxStore.dispatch(setSurrogateKeys(keys));\n};\n\nconst getClientConfig = project => {\n  let config = DELIVERY_API_CONFIG; /* global DELIVERY_API_CONFIG */\n  config.responseHandler = {};\n\n  if (project) {\n    config.projectId = project;\n  }\n\n  // // we only want the surrogate key header in a server context\n  if (typeof window === 'undefined') {\n    config.defaultHeaders = {\n      'x-require-surrogate-key': true,\n    };\n    config.responseHandler[200] = storeSurrogateKeys;\n  }\n\n  if (\n    typeof window !== 'undefined' &&\n    PROXY_DELIVERY_API /* global PROXY_DELIVERY_API */\n  ) {\n    // ensure a relative url is used to bypass the need for CORS (separate OPTIONS calls)\n    config.rootUrl = '';\n    config.responseHandler[404] = () => null;\n  }\n  return config;\n};\n\nexport * from 'contensis-delivery-api';\n\nclass DeliveryApi {\n  getClientSideVersionStatus = () => {\n    if (typeof window != 'undefined') {\n      const currentHostname = window.location.hostname;\n      return this.getVersionStatusFromHostname(currentHostname);\n    }\n    return null;\n  };\n  getVersionStatusFromHostname = currentHostname => {\n    if (currentHostname.indexOf('localhost') > -1) return 'latest';\n\n    if (currentHostname.endsWith('contensis.cloud')) {\n      if (currentHostname.indexOf('preview.') > -1) {\n        return 'latest';\n      } else {\n        return 'published';\n      }\n    }\n\n    if (currentHostname.endsWith('cloud.contensis.com')) {\n      if (currentHostname.indexOf('preview-') > -1) {\n        return 'latest';\n      } else {\n        return 'published';\n      }\n    }\n\n    return 'published';\n  };\n  search = (query, linkDepth, project, env) => {\n    const client = Client.create(getClientConfig(project, env));\n    return client.entries.search(\n      query,\n      typeof linkDepth !== 'undefined' ? linkDepth : 1\n    );\n  };\n  getClient = (deliveryApiStatus = 'published', project, env) => {\n    const baseConfig = getClientConfig(project, env);\n    baseConfig.versionStatus = deliveryApiStatus;\n    return Client.create(baseConfig);\n  };\n  getEntry = (\n    id,\n    linkDepth = 0,\n    deliveryApiStatus = 'published',\n    project,\n    env\n  ) => {\n    const baseConfig = getClientConfig(project, env);\n    baseConfig.versionStatus = deliveryApiStatus;\n    const client = Client.create(baseConfig);\n    // return client.entries.get(id, linkDepth);\n    return client.entries.get({ id, linkDepth });\n  };\n}\n\nexport const deliveryApi = new DeliveryApi();\n\nclass CacheNode {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n    this.next = null;\n    this.prev = null;\n  }\n}\n\nclass LruCache {\n  constructor(limit = 100) {\n    this.map = {};\n    this.head = null;\n    this.tail = null;\n    this.limit = limit || 100;\n    this.size = 0;\n  }\n\n  get(key) {\n    if (this.map[key]) {\n      let value = this.map[key].value;\n      let node = new CacheNode(key, value);\n      this.remove(key);\n      this.setHead(node);\n      return value;\n    }\n  }\n\n  set(key, value) {\n    let node = new CacheNode(key, value);\n    if (this.map[key]) {\n      this.remove(key);\n    } else {\n      if (this.size >= this.limit) {\n        delete this.map[this.tail.key];\n        this.size--;\n        this.tail = this.tail.prev;\n        this.tail.next = null;\n      }\n    }\n    this.setHead(node);\n  }\n\n  setHead(node) {\n    node.next = this.head;\n    node.prev = null;\n    if (this.head) {\n      this.head.prev = node;\n    }\n    this.head = node;\n    if (!this.tail) {\n      this.tail = node;\n    }\n    this.size++;\n    this.map[node.key] = node;\n  }\n\n  remove(key) {\n    let node = this.map[key];\n    if (node.prev) {\n      node.prev.next = node.next;\n    } else {\n      this.head = node.next;\n    }\n    if (node.next) {\n      node.next.prev = node.prev;\n    } else {\n      this.tail = node.prev;\n    }\n    delete this.map[key];\n    this.size--;\n  }\n}\n\nclass CachedSearch {\n  cache = new LruCache();\n  taxonomyLookup = {};\n\n  search(query, linkDepth, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      project + JSON.stringify(query) + linkDepth.toString(),\n      () => client.entries.search(query, linkDepth)\n    );\n  }\n\n  get(id, linkDepth, versionStatus, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    client.clientConfig.versionStatus = versionStatus;\n    return this.request(id, () => client.entries.get({ id, linkDepth }));\n  }\n\n  getContentType(id, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(`[CONTENT TYPE] ${id} ${project}`, () =>\n      client.contentTypes.get(id)\n    );\n  }\n\n  getTaxonomyNode(key, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(`[TAXONOMY NODE] ${key}`, () =>\n      client.taxonomy\n        .resolveChildren(key)\n        .then(node => this.extendTaxonomyNode(node))\n    );\n  }\n\n  getRootNode(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(`${project} / ${JSON.stringify(options)}`, () =>\n      client.nodes.getRoot(options)\n    );\n  }\n\n  getNode(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} ${(options && options.path) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.get(options)\n    );\n  }\n\n  getAncestors(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} [A] ${(options && options.id) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.getAncestors(options)\n    );\n  }\n\n  getChildren(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} [C] ${(options && options.id) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.getChildren(options)\n    );\n  }\n\n  getSiblings(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} [S] ${(options && options.id) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.getSiblings(options)\n    );\n  }\n\n  request(key, execute) {\n    if (!this.cache.get(key) || typeof window == 'undefined') {\n      let promise = execute();\n      this.cache.set(key, promise);\n      promise.catch(() => {\n        this.cache.remove(key);\n      });\n    }\n    return this.cache.get(key);\n  }\n\n  extendTaxonomyNode(node) {\n    let id = this.getTaxonomyId(node);\n    this.taxonomyLookup[id] = node.key;\n    return {\n      ...node,\n      id,\n      children: node.children\n        ? node.children.map(n => this.extendTaxonomyNode(n))\n        : null,\n    };\n  }\n\n  getTaxonomyId(node) {\n    if (node.key) {\n      let parts = node.key.split('/');\n      return parts[parts.length - 1];\n    }\n    return '';\n  }\n\n  getTaxonomyKey(id) {\n    return this.taxonomyLookup[id];\n  }\n}\n\nexport const cachedSearch = new CachedSearch();\n","export const DataFormats = {\n  entry: 'entry',\n  webpage: 'webpage',\n};\n\nconst sys = {\n  contentTypeId: 'sys.contentTypeId',\n  dataFormat: 'sys.dataFormat',\n  filename: 'sys.properties.filename',\n  id: 'sys.id',\n  includeInSearch: 'sys.metadata.includeInSearch',\n  slug: 'sys.slug',\n  uri: 'sys.uri',\n  versionStatus: 'sys.versionStatus',\n};\n\nexport const Fields = {\n  entryTitle: 'entryTitle',\n  entryDescription: 'entryDescription',\n  keywords: 'keywords',\n  sys,\n  contentTypeId: 'sys.contentTypeId',\n  wildcard: '*',\n};\n\nexport const Projects = {\n  website: 'website',\n};\n\nexport const VersionStatus = {\n  published: 'published',\n  latest: 'latest',\n};\n\nexport const ContentTypes = {\n  contentPage: 'contentPage',\n};\n\nexport const WebpageFormats = {};\n\nexport const FilterExpressionTypes = {\n  contentType: 'contentType',\n  field: 'field',\n};\n","import { Op, OrderBy } from 'contensis-delivery-api';\nimport { Fields, DataFormats } from '~/core/schema';\nimport {\n  fixFreeTextForElastic,\n  extractQuotedPhrases,\n} from '~/core/search/util';\n\nexport const fieldExpression = (\n  field,\n  value,\n  operator = 'equalTo',\n  weight = null\n) => {\n  if (!field || !value) return [];\n  if (Array.isArray(value)) return equalToOrIn(field, value, operator);\n  else\n    return !weight\n      ? [Op[operator](field, value)]\n      : [Op[operator](field, value).weight(weight)];\n};\n\nexport const contentTypeIdExpression = (contentTypeIds, webpageTemplates) => {\n  const expressions = [];\n  if (!contentTypeIds && !webpageTemplates) return expressions;\n\n  if (contentTypeIds && contentTypeIds.length > 0) {\n    expressions.push(\n      ...dataFormatExpression(contentTypeIds, DataFormats.entry)\n    );\n  }\n\n  if (webpageTemplates && webpageTemplates.length > 0) {\n    expressions.push(\n      ...dataFormatExpression(webpageTemplates, DataFormats.webpage)\n    );\n  }\n\n  if (expressions.length > 1) return [Op.or(...expressions)];\n\n  return expressions;\n};\n\nexport const filterExpressions = filters => {\n  if (!filters) return [];\n  const expressions = [];\n\n  filters.map(param => {\n    expressions.push(...fieldExpression(param.key, param.value, 'contains'));\n  });\n\n  return expressions;\n};\n\nexport const dataFormatExpression = (\n  contentTypeIds,\n  dataFormat = DataFormats.entry\n) => {\n  if (contentTypeIds && contentTypeIds.length > 0) {\n    /**\n     * We have an array of contentTypeIds some may be prefixed with a \"!\"\n     * to indicate this is a \"not\" expression\n     */\n    const withContentTypeIds = contentTypeIds.filter(c => !c.startsWith('!'));\n    const notContentTypeIds = contentTypeIds\n      .filter(c => c.startsWith('!'))\n      .map(id => id.substring(1));\n\n    const andExpr = Op.and();\n\n    const dataFormatExpr = fieldExpression(Fields.sys.dataFormat, dataFormat);\n\n    const withExpr = fieldExpression(\n      Fields.sys.contentTypeId,\n      withContentTypeIds\n    );\n\n    const notExpr = [\n      Op.not(...fieldExpression(Fields.sys.contentTypeId, notContentTypeIds)),\n    ];\n\n    andExpr.add(...dataFormatExpr);\n    if (withContentTypeIds.length > 0) andExpr.add(...withExpr);\n    if (notContentTypeIds.length > 0) andExpr.add(...notExpr);\n\n    return [andExpr];\n  }\n  return [];\n};\n\nexport const defaultExpressions = versionStatus => {\n  return [Op.equalTo(Fields.sys.versionStatus, versionStatus)];\n};\n\nexport const defaultSearchExpressions = versionStatus => {\n  return [\n    ...defaultExpressions(versionStatus),\n    ...includeInSearchExpressions(),\n  ];\n};\nexport const includeInSearchExpressions = () => [\n  Op.or(\n    Op.and(\n      Op.exists(Fields.sys.includeInSearch, true),\n      Op.equalTo(Fields.sys.includeInSearch, true)\n    ),\n    Op.exists(Fields.sys.includeInSearch, false)\n  ),\n];\n\nexport const orderByExpression = orderBy => {\n  let expression = OrderBy;\n  if (orderBy && orderBy.length > 0) {\n    orderBy.map(\n      ob =>\n        (expression = ob.startsWith('-')\n          ? expression.desc(ob.substring(1))\n          : expression.asc(ob))\n    );\n  }\n  return expression;\n};\n\nconst equalToOrIn = (field, arr, operator = 'equalTo') =>\n  arr.length === 0\n    ? []\n    : arr.length === 1\n    ? [Op[operator](field, arr[0])]\n    : [Op.in(field, ...arr)];\n\nexport const customWhereExpressions = where => {\n  if (!where || !Array.isArray(where)) return [];\n\n  // Accept HTTP style objects and map them to\n  // their equivalent JS client \"Op\" expressions\n  return where.map(clause => {\n    let expression;\n    Object.keys(clause).map((key, idx) => {\n      if (idx === 1) {\n        const operator = key;\n        const value = clause[key];\n        expression = Op[operator](clause.field, value, clause.weight);\n      }\n    });\n    return expression;\n  });\n};\n\nexport const termExpressions = (searchTerm, weightedSearchFields) => {\n  if (searchTerm && weightedSearchFields && weightedSearchFields.length > 0) {\n    // Extract any phrases in quotes to array\n    const quotedPhrases = extractQuotedPhrases(searchTerm);\n\n    // Modify the search term to remove any quoted phrases to leave any remaining terms\n    let modifiedSearchTerm = searchTerm;\n    quotedPhrases.forEach(\n      qp =>\n        (modifiedSearchTerm = modifiedSearchTerm\n          .replace(qp, '')\n          .replace('\"\"', '')\n          .trim())\n    );\n\n    // Push to the operators array to include in the query\n    const operators = [];\n\n    // Helper functions to generate Op expressions\n    const containsOp = (f, term) =>\n      fieldExpression(\n        f.fieldId,\n        fixFreeTextForElastic(term),\n        'contains',\n        f.weight\n      );\n    const freeTextOp = (f, term) =>\n      fieldExpression(\n        f.fieldId,\n        fixFreeTextForElastic(term),\n        'freeText',\n        f.weight\n      );\n\n    // For each weighted search field\n    weightedSearchFields.forEach(f => {\n      // Push to field operators\n      const fieldOperators = [];\n\n      // Add operator expressions for modified search term\n      if (modifiedSearchTerm) {\n        if (\n          [Fields.keywords, Fields.sys.filename, Fields.sys.uri].includes(\n            f.fieldId\n          )\n        ) {\n          fieldOperators.push(...containsOp(f, modifiedSearchTerm));\n        } else {\n          if ([Fields.entryTitle].includes(f.fieldId)) {\n            fieldOperators.push(\n              Op.or(\n                ...containsOp(f, modifiedSearchTerm),\n                ...freeTextOp(f, modifiedSearchTerm)\n              )\n            );\n          } else {\n            fieldOperators.push(...freeTextOp(f, modifiedSearchTerm));\n          }\n        }\n      }\n\n      // Add operator expressions for any quoted phrases\n      quotedPhrases.forEach(qp => fieldOperators.push(...containsOp(f, qp)));\n\n      // If we are using multiple operators for a field we will\n      // wrap each field inside an And operator so we will match\n      // all terms/phrases rather than any terms/phrases\n      if (fieldOperators.length > 1) {\n        operators.push(Op.and(...fieldOperators));\n      } else {\n        operators.push(...fieldOperators);\n      }\n    });\n\n    // Wrap operators in an Or operator\n    return [Op.or().addRange(operators)];\n  } else if (searchTerm) {\n    return [Op.contains(Fields.wildcard, searchTerm)];\n  } else {\n    return [];\n  }\n};\n","// eslint-disable-next-line import/named\nimport { Query } from '~/core/util/ContensisDeliveryApi';\nimport { fieldExpression, defaultExpressions } from '~/core/search/expressions';\n\nexport const routeEntryByFieldsQuery = (\n  id,\n  fields = [],\n  versionStatus = 'published'\n) => {\n  const query = new Query(\n    ...[...fieldExpression('sys.id', id), ...defaultExpressions(versionStatus)]\n  );\n  query.fields = fields;\n  return query;\n};\n","// load-entries.js\nimport * as log from 'loglevel';\nimport { takeEvery, put, select, call, all } from 'redux-saga/effects';\nimport {\n  // SET_ENTRY_ID,\n  // SET_NAVIGATION_NOT_FOUND,\n  // SET_NODE,\n  SET_ENTRY,\n  SET_ANCESTORS,\n  SET_NAVIGATION_PATH,\n  SET_ROUTE,\n  CALL_HISTORY_METHOD,\n  SET_SIBLINGS,\n  MAP_ENTRY,\n} from '~/core/redux/types/routing';\nimport { cachedSearch, deliveryApi } from '~/core/util/ContensisDeliveryApi';\nimport { selectVersionStatus } from '~/core/redux/selectors/version';\nimport {\n  selectCurrentPath,\n  selectCurrentProject,\n  selectRouteEntry,\n} from '~/core/redux/selectors/routing';\nimport { GET_NODE_TREE } from '../types/navigation';\nimport { hasNavigationTree } from '../selectors/navigation';\nimport { routeEntryByFieldsQuery } from './queries';\n\nexport const routingSagas = [\n  takeEvery(SET_NAVIGATION_PATH, getRouteSaga),\n  takeEvery(SET_ROUTE, setRouteSaga),\n];\n\n/**\n * To navigate / push a specific route via redux middleware\n * @param {path, state} action\n */\nfunction* setRouteSaga(action) {\n  yield put({\n    type: CALL_HISTORY_METHOD,\n    payload: {\n      method: 'push',\n      args: [action.path, action.state],\n    },\n  });\n}\n\n// function* deliveryApiResponseHandler(response) {\n//   debugger;\n\n//   yield put({ type: 'HANDLE_RESPONSE', headers: response.headers });\n// }\n\nfunction* getRouteSaga(action) {\n  let entry = null;\n  try {\n    const {\n      withEvents,\n      routes: { ContentTypeMappings = {} } = {},\n      staticRoute,\n    } = action;\n    let appsays;\n    if (withEvents && withEvents.onRouteLoad) {\n      appsays = yield withEvents.onRouteLoad(action);\n    }\n    // if appsays customNavigation: true, we will set doNavigation to false\n    // if appsays customNavigation: { ... }, we will set doNavigation to the customNavigation object and check for child elements\n    // if appsays nothing we will set doNavigation to true and continue to do navigation calls\n    const doNavigation =\n      !appsays ||\n      (appsays && appsays.customNavigation === true\n        ? false\n        : (appsays && appsays.customNavigation) || true);\n\n    const entryLinkDepth = (appsays && appsays.entryLinkDepth) || 3;\n    const setContentTypeLimits = !!ContentTypeMappings.find(\n      ct => ct.fields || ct.linkDepth\n    );\n\n    const state = yield select();\n    const routeEntry = selectRouteEntry(state);\n    const currentPath = selectCurrentPath(state);\n    const deliveryApiStatus = selectVersionStatus(state);\n    const project = selectCurrentProject(state);\n    const isHome = currentPath === '/';\n    const isPreview = currentPath && currentPath.startsWith('/preview/');\n\n    if (\n      !isPreview &&\n      ((appsays && appsays.customRouting) ||\n        (staticRoute && !staticRoute.route.fetchNode) ||\n        (routeEntry && action.statePath === action.path))\n    ) {\n      // To prevent erroneous 404s and wasted network calls, this covers\n      // - appsays customRouting and does SET_ENTRY etc. via the consuming app\n      // - all staticRoutes (where custom 'route.fetchNode' attribute is falsey)\n      // - standard Contensis SiteView Routing where we already have that entry in state\n      if (\n        routeEntry &&\n        (!staticRoute || (staticRoute.route && staticRoute.route.fetchNode))\n      ) {\n        // entry = routeEntry.toJS();\n        // yield put({\n        //   type: SET_ENTRY,\n        //   entry,\n        //   isLoading: false,\n        // });\n        //Do nothing, the entry is allready the right one.\n      } else yield call(setRouteEntry);\n    } else {\n      let pathNode = null,\n        ancestors = null,\n        siblings = null;\n\n      // Handle homepage\n      if (isHome) {\n        pathNode = yield cachedSearch.getRootNode(\n          {\n            depth: 0,\n            entryFields: '*',\n            entryLinkDepth,\n            language: 'en-GB',\n            versionStatus: deliveryApiStatus,\n          },\n          project\n        );\n      } else {\n        // Handle preview routes\n        if (isPreview) {\n          let splitPath = currentPath.split('/');\n          let entryGuid = splitPath[2];\n          if (splitPath.length == 3) {\n            // According to product dev we cannot use Node API\n            // for previewing entries as it gives a response of []\n            // -- apparently it is not correct to request latest content\n            // with Node API\n            let previewEntry = yield deliveryApi\n              .getClient(deliveryApiStatus, project)\n              .entries.get({ id: entryGuid, linkDepth: 3 });\n            if (previewEntry) {\n              pathNode = { entry: previewEntry };\n              // yield call(setRouteEntry, previewEntry);\n              // } else {\n              // yield call(do404);\n            }\n          }\n        } else {\n          // Handle all other routes\n          pathNode = yield cachedSearch.getNode(\n            {\n              depth:\n                doNavigation === true || doNavigation.children === true\n                  ? 3\n                  : (doNavigation && doNavigation.children) || 0,\n              path: currentPath,\n              entryFields: setContentTypeLimits\n                ? ['sys.contentTypeId', 'sys.id']\n                : '*',\n              entryLinkDepth: setContentTypeLimits ? 0 : entryLinkDepth,\n              versionStatus: deliveryApiStatus,\n            },\n            project\n          );\n          if (\n            setContentTypeLimits &&\n            pathNode &&\n            pathNode.entry &&\n            pathNode.entry.sys &&\n            pathNode.entry.sys.id\n          ) {\n            const contentType = ContentTypeMappings.find(\n              ct => ct.contentTypeID === pathNode.entry.sys.contentTypeId\n            );\n            const query = routeEntryByFieldsQuery(\n              pathNode.entry.sys.id,\n              contentType && contentType.fields,\n              deliveryApiStatus\n            );\n            const payload = yield cachedSearch.search(\n              query,\n              contentType && typeof contentType.linkDepth !== 'undefined'\n                ? contentType.linkDepth\n                : 3,\n              project\n            );\n            if (payload && payload.items && payload.items.length > 0) {\n              pathNode.entry = payload.items[0];\n            }\n          }\n        }\n\n        if (\n          pathNode &&\n          pathNode.id &&\n          (doNavigation === true || doNavigation.ancestors)\n        ) {\n          ancestors = yield cachedSearch.getAncestors(pathNode.id, project);\n\n          if (doNavigation === true || doNavigation.siblings) {\n            siblings = yield cachedSearch.getSiblings(\n              {\n                id: pathNode.id,\n                entryFields: ['sys.contentTypeId', 'url'],\n              },\n              project\n            );\n          }\n        }\n      }\n\n      if (\n        pathNode &&\n        pathNode.entry &&\n        pathNode.entry.sys &&\n        pathNode.entry.sys.id\n      ) {\n        entry = pathNode.entry;\n        const entryMapper = (\n          ContentTypeMappings.find(\n            ct => ct.contentTypeID === pathNode.entry.sys.contentTypeId\n          ) || {}\n        ).entryMapper;\n\n        yield all([\n          call(\n            mapRouteEntry,\n            { ...pathNode, ancestors, siblings },\n            entryMapper\n          ),\n          call(setRouteEntry, entry, pathNode, ancestors, siblings),\n        ]);\n      } else {\n        yield call(do404);\n      }\n      if (!appsays || !appsays.preventScrollTop) {\n        // Scroll into View\n        if (typeof window !== 'undefined') {\n          window.scroll({\n            top: 0,\n          });\n        }\n      }\n    }\n    if (withEvents && withEvents.onRouteLoaded) {\n      yield withEvents.onRouteLoaded({ ...action, entry });\n    }\n\n    if (\n      !hasNavigationTree(state) &&\n      (doNavigation === true || doNavigation.tree)\n    )\n      // Load navigation clientside only, a put() should help that work\n      yield put({\n        type: GET_NODE_TREE,\n        treeDepth:\n          doNavigation === true ||\n          !doNavigation.tree ||\n          doNavigation.tree === true\n            ? 2\n            : doNavigation.tree,\n      });\n  } catch (e) {\n    log.error(...['Error running route saga:', e, e.stack]);\n    yield call(do404);\n  }\n}\n\nfunction* setRouteEntry(entry, node, ancestors, siblings) {\n  yield all([\n    // put({\n    //   type: SET_NAVIGATION_NOT_FOUND,\n    //   notFound: !(entry && entry.sys.id),\n    // }),\n    // put({\n    //   type: SET_NODE,\n    //   node,\n    // }),\n    put({\n      type: SET_ENTRY,\n      id: (entry && entry.sys.id) || null,\n      entry,\n      node,\n    }),\n    // put({\n    //   type: SET_ENTRY_ID,\n    //   id: (entry && entry.sys.id) || null,\n    // }),\n    ancestors &&\n      put({\n        type: SET_ANCESTORS,\n        ancestors,\n      }),\n    siblings &&\n      put({\n        type: SET_SIBLINGS,\n        siblings,\n      }),\n  ]);\n}\n\nfunction* mapRouteEntry(node, entryMapper) {\n  if (typeof entryMapper === 'function') {\n    const mappedEntry = entryMapper(node);\n    yield put({ type: MAP_ENTRY, mappedEntry, node, entryMapper });\n  }\n}\nfunction* do404() {\n  // yield put({\n  //   type: SET_NAVIGATION_NOT_FOUND,\n  //   notFound: true,\n  // });\n  // yield put({\n  //   type: SET_ENTRY_ID,\n  //   id: null,\n  // });\n  yield put({\n    type: SET_ENTRY,\n    id: null,\n    entry: null,\n    notFound: true,\n  });\n}\n","import { takeEvery, put, select } from 'redux-saga/effects';\n\nimport { deliveryApi } from '~/core/util/ContensisDeliveryApi';\nimport {\n  GET_NODE_TREE,\n  SET_NODE_TREE,\n  GET_NODE_TREE_ERROR,\n} from '~/core/redux/types/navigation';\nimport { hasNavigationTree } from '~/core/redux/selectors/navigation';\nimport { selectVersionStatus } from '../selectors/version';\nimport { selectCurrentProject } from '../selectors/routing';\n\nexport const navigationSagas = [takeEvery(GET_NODE_TREE, ensureNodeTreeSaga)];\n\nexport function* ensureNodeTreeSaga(action) {\n  const state = yield select();\n  try {\n    if (!hasNavigationTree(state)) {\n      const deliveryApiVersionStatus = yield select(selectVersionStatus);\n      const project = yield select(selectCurrentProject);\n      const nodes = yield deliveryApi\n        .getClient(deliveryApiVersionStatus, project)\n        .nodes.getRoot({\n          depth: action.treeDepth || 2,\n          entryFields: 'entryTitle, metaInformation, sys.contentTypeId',\n        });\n      if (nodes) {\n        yield put({ type: SET_NODE_TREE, nodes });\n      } else {\n        yield put({ type: GET_NODE_TREE_ERROR });\n      }\n    }\n  } catch (ex) {\n    yield put({ type: GET_NODE_TREE_ERROR, error: ex.toString() });\n  }\n}\n","// index.js\nimport { all } from 'redux-saga/effects';\nimport { routingSagas } from './routing';\nimport { navigationSagas } from './navigation';\n\nexport default function(featureSagas = []) {\n  return function* rootSaga() {\n    const subSagas = [...routingSagas, ...navigationSagas];\n    yield all([...subSagas, ...featureSagas]);\n  };\n}\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport RouteLoader from '~/core/routes/RouteLoader';\n\nconst AppRoot = props => {\n  return <RouteLoader {...props} />;\n};\n\nexport default hot(module)(AppRoot);\n"],"names":["selectedHistory","window","createBrowserHistory","createMemoryHistory","history","options","browserHistory","servers","SERVERS","alias","toLowerCase","publicUri","PUBLIC_URI","projects","PROJECTS","pickProject","hostname","query","p","id","project","includes","startsWith","initialState","Map","currentPath","currentNode","currentProject","notFound","entryID","entry","contentTypeId","currentNodeAncestors","List","currentTreeId","state","action","type","MAP_ENTRY","set","fromJS","mappedEntry","SET_ANCESTORS","ancestors","ancestorIDs","map","node","SET_ENTRY","isLoading","nextState","removeIn","SET_NAVIGATION_PATH","staticRoute","path","entryUri","getIn","location","route","component","SET_ROUTE","SET_SIBLINGS","currentNodeSiblingParent","siblingIDs","siblings","length","parentId","currentNodeDepends","get","allNodeDepends","Set","union","SET_SURROGATE_KEYS","keys","SET_TARGET_PROJECT","allowedGroups","commitRef","buildNo","contensisVersionStatus","SET_VERSION_STATUS","status","SET_VERSION","root","treeDepends","isError","isReady","SET_NODE_TREE","nodes","GET_NODE_TREE_ERROR","routerMiddleware","store","next","CALL_HISTORY_METHOD","payload","method","args","reduxStore","featureReducers","thunkMiddleware","thunk","reduxDevToolsMiddleware","f","__REDUX_DEVTOOLS_EXTENSION__","sagaMiddleware","createSagaMiddleware","middleware","compose","applyMiddleware","reducers","navigation","NavigationReducer","routing","RoutingReducer","version","VersionReducer","combinedReducers","combineReducers","createStore","runSaga","run","close","dispatch","END","storeSurrogateKeys","response","headers","setSurrogateKeys","getClientConfig","config","DELIVERY_API_CONFIG","responseHandler","projectId","defaultHeaders","PROXY_DELIVERY_API","rootUrl","DeliveryApi","getClientSideVersionStatus","currentHostname","getVersionStatusFromHostname","indexOf","endsWith","search","linkDepth","env","client","Client","create","entries","getClient","deliveryApiStatus","baseConfig","versionStatus","getEntry","deliveryApi","CacheNode","constructor","key","value","prev","LruCache","limit","head","tail","size","remove","setHead","CachedSearch","cache","taxonomyLookup","request","JSON","stringify","toString","clientConfig","getContentType","contentTypes","getTaxonomyNode","taxonomy","resolveChildren","then","extendTaxonomyNode","getRootNode","getRoot","getNode","getAncestors","getChildren","getSiblings","execute","promise","catch","getTaxonomyId","children","n","parts","split","getTaxonomyKey","cachedSearch","sys","dataFormat","filename","includeInSearch","slug","uri","Fields","entryTitle","entryDescription","keywords","wildcard","fieldExpression","field","operator","weight","Array","isArray","equalToOrIn","Op","defaultExpressions","equalTo","arr","in","routeEntryByFieldsQuery","fields","Query","routingSagas","takeEvery","getRouteSaga","setRouteSaga","put","withEvents","routes","ContentTypeMappings","appsays","onRouteLoad","doNavigation","customNavigation","entryLinkDepth","setContentTypeLimits","find","ct","select","routeEntry","selectRouteEntry","selectCurrentPath","selectVersionStatus","selectCurrentProject","isHome","isPreview","customRouting","fetchNode","statePath","call","setRouteEntry","pathNode","depth","entryFields","language","splitPath","entryGuid","previewEntry","contentType","contentTypeID","items","entryMapper","all","mapRouteEntry","do404","preventScrollTop","scroll","top","onRouteLoaded","hasNavigationTree","tree","GET_NODE_TREE","treeDepth","e","log","stack","navigationSagas","ensureNodeTreeSaga","deliveryApiVersionStatus","ex","error","featureSagas","rootSaga","subSagas","AppRoot","props","React","RouteLoader"],"mappings":"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"}