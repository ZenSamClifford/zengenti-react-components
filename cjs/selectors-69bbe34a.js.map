{"version":3,"file":"selectors-69bbe34a.js","sources":["../src/redux/util.ts","../src/util/navigation.js","../src/routing/redux/selectors.ts"],"sourcesContent":["import { jpath } from '~/util/json-mapper';\r\n\r\nexport const action = (type: string, payload: any = {}) => ({\r\n  type,\r\n  ...payload,\r\n});\r\n\r\nexport const getJS = <S extends Record<string, unknown>, T extends keyof S>(\r\n  state: S,\r\n  stateKey: T\r\n) => {\r\n  if (\r\n    'get' in state &&\r\n    typeof state.get === 'function' &&\r\n    'toJS' in state &&\r\n    typeof state.toJS === 'function'\r\n  ) {\r\n    return state.get(stateKey) as S[T];\r\n  }\r\n  return state[stateKey];\r\n};\r\n\r\nexport const getImmutableOrJS = <\r\n  S extends Record<string, unknown>,\r\n  T extends keyof S | any\r\n>(\r\n  state: S,\r\n  stateKey: T | T[],\r\n  fallbackValue?: any\r\n) => {\r\n  if (\r\n    'get' in state &&\r\n    typeof state.get === 'function' &&\r\n    'getIn' in state &&\r\n    typeof state.getIn === 'function' &&\r\n    'toJS' in state &&\r\n    typeof state.toJS === 'function'\r\n  ) {\r\n    if (Array.isArray(stateKey)) return state.getIn(stateKey, fallbackValue);\r\n    return state.get(stateKey, fallbackValue) as S[T | any];\r\n  }\r\n\r\n  if (Array.isArray(stateKey)) {\r\n    const result = jpath(stateKey.join['.'], state);\r\n    if (typeof result === 'undefined') return fallbackValue;\r\n    return result;\r\n  }\r\n  const result = state[stateKey as string];\r\n  if (typeof result === 'undefined') return fallbackValue;\r\n  return result;\r\n};\r\n","import queryString from 'query-string';\r\n\r\nexport function queryParams(search) {\r\n  return queryString.parse(\r\n    typeof window != 'undefined' ? window.location.search : search\r\n  );\r\n}\r\nexport const routeParams = staticRoute =>\r\n  staticRoute && staticRoute.match ? staticRoute.match.params : {};\r\n\r\nexport const buildUrl = (route, params) => {\r\n  const qs = queryString.stringify(params);\r\n  const path = qs ? `${route}?${qs}` : route;\r\n  return path;\r\n};\r\n\r\nexport const clientHostname = () =>\r\n  `${window.location.protocol}//${window.location.hostname}:${window.location.port}`;\r\n","import { Entry } from 'contensis-delivery-api/lib/models';\r\nimport { AppState } from '~/redux/appstate';\r\nimport { getImmutableOrJS as getIn } from '~/redux/util';\r\nimport { queryParams } from '~/util/navigation';\r\n\r\nexport const selectRouteEntry = (state: AppState) =>\r\n  getIn(state, ['routing', 'entry'], {} as Entry);\r\n\r\nexport const selectMappedEntry = (state: AppState) =>\r\n  getIn(state, ['routing', 'mappedEntry'], null);\r\n\r\nexport const selectNodeDepends = (state: AppState) =>\r\n  getIn(state, ['routing', 'nodeDepends'], []);\r\n\r\nexport const selectCurrentHostname = (state: AppState) =>\r\n  getIn(state, ['routing', 'currentHostname']);\r\n\r\nexport const selectCurrentTreeID = (state: AppState) =>\r\n  getIn(state, ['routing', 'currentHostname']);\r\n\r\nexport const selectRouteEntryEntryId = (state: AppState) =>\r\n  getIn(state, ['routing', 'entry', 'sys', 'id'], null);\r\n\r\nexport const selectRouteEntryContentTypeId = (state: AppState) => {\r\n  const entry = selectRouteEntry(state);\r\n  return getIn(entry, ['sys', 'contentTypeId'], null);\r\n};\r\n\r\nexport const selectRouteEntryLanguage = (state: AppState) => {\r\n  const entry = selectRouteEntry(state);\r\n  return getIn(entry, ['sys', 'language'], null);\r\n};\r\n\r\nexport const selectRouteEntrySlug = (state: AppState) => {\r\n  const entry = selectRouteEntry(state);\r\n  return getIn(entry, ['sys', 'slug'], null);\r\n};\r\n\r\nexport const selectRouteEntryID = (state: AppState) =>\r\n  getIn(state, ['routing', 'entryID']);\r\n\r\nexport const selectCurrentPath = (state: AppState) =>\r\n  getIn(state, ['routing', 'currentPath']);\r\nexport const selectCurrentSearch = (state: AppState) =>\r\n  getIn(state, ['routing', 'location', 'search']);\r\nexport const selectCurrentHash = (state: AppState) =>\r\n  getIn(state, ['routing', 'location', 'hash']);\r\nexport const selectQueryStringAsObject = (state: AppState) =>\r\n  queryParams(selectCurrentSearch(state));\r\nexport const selectCurrentProject = (state: AppState) =>\r\n  getIn(state, ['routing', 'currentProject']);\r\nexport const selectIsNotFound = (state: AppState) =>\r\n  getIn(state, ['routing', 'notFound']);\r\nexport const selectCurrentAncestors = (state: AppState) =>\r\n  getIn(state, ['routing', 'currentNodeAncestors'], []);\r\nexport const selectCurrentSiblings = (state: AppState) =>\r\n  getIn(state, ['routing', 'currentNodeSiblings'], []);\r\nexport const selectCurrentNode = (state: AppState) =>\r\n  getIn(state, ['routing', 'currentNode']);\r\nexport const selectCurrentChildren = state =>\r\n  getIn(state, ['routing', 'currentNode', 'children'], []);\r\n\r\nexport const selectBreadcrumb = (state: AppState) => {\r\n  return selectCurrentAncestors(state).push(selectCurrentNode(state));\r\n};\r\nexport const selectRouteErrorMessage = (state: AppState) => {\r\n  const error = getIn(state, ['routing', 'error']);\r\n  return getIn(error, ['data', 'message'], getIn(error, 'statusText'));\r\n};\r\nexport const selectRouteIsError = (state: AppState) =>\r\n  getIn(state, ['routing', 'isError']);\r\nexport const selectRouteLoading = (state: AppState) =>\r\n  getIn(state, ['routing', 'isLoading']);\r\nexport const selectRouteStatusCode = (state: AppState) =>\r\n  getIn(state, ['routing', 'statusCode']);\r\n"],"names":["action","type","payload","getJS","state","stateKey","get","toJS","getImmutableOrJS","fallbackValue","getIn","Array","isArray","result","jpath","join","queryParams","search","queryString","parse","window","location","selectRouteEntry","selectMappedEntry","selectNodeDepends","selectCurrentHostname","selectCurrentTreeID","selectRouteEntryEntryId","selectRouteEntryContentTypeId","entry","selectRouteEntryLanguage","selectRouteEntrySlug","selectRouteEntryID","selectCurrentPath","selectCurrentSearch","selectCurrentHash","selectQueryStringAsObject","selectCurrentProject","selectIsNotFound","selectCurrentAncestors","selectCurrentSiblings","selectCurrentNode","selectCurrentChildren","selectBreadcrumb","push","selectRouteErrorMessage","error","selectRouteIsError","selectRouteLoading","selectRouteStatusCode"],"mappings":"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"}