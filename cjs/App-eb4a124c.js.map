{"version":3,"file":"App-eb4a124c.js","sources":["../src/app/core/util/fromJSLeaveImmer.js","../src/app/core/redux/history.js","../src/app/core/util/pickProject.js","../src/app/core/redux/reducers/navigation.js","../src/app/core/redux/reducers/routing.js","../src/app/core/redux/reducers/version.js","../src/app/core/redux/routerMiddleware.js","../src/app/core/redux/store.js","../src/app/core/util/ContensisDeliveryApi.js","../src/app/core/redux/sagas/navigation.js","../src/app/core/schema.js","../src/app/core/search/expressions.js","../src/app/core/redux/sagas/queries.js","../src/app/core/redux/sagas/routing.js","../src/app/features/login/redux/sagas/register.js","../src/app/features/login/redux/sagas/index.js","../src/app/core/redux/sagas/index.js","../src/app/App.js"],"sourcesContent":["import { Map, OrderedMap, fromJS } from 'immutable';\r\nimport fromJSOrdered from './fromJSOrdered';\r\n\r\nconst fromJSLeaveImmer = (js, isOrdered = false) => {\r\n  console.info(js);\r\n  if (typeof js !== 'object' || js === null) return js;\r\n  // console.info(`from js - here is js ${JSON.stringify(js)}`);\r\n  const convertedObject = isOrdered ? OrderedMap() : Map();\r\n  const keys = Object.keys(js);\r\n  keys.forEach(key => {\r\n    if (key === 'immer') {\r\n      convertedObject.set(key, js[key]);\r\n      // console.info(`LOOK! - immer untouched bar root key \"${key}\"`);\r\n    } else {\r\n      // console.info(`LOOK! - normal immutable feature \"${key}\"`);\r\n      convertedObject.set(key, isOrdered ? fromJSOrdered(js) : fromJS(js));\r\n    }\r\n  });\r\n};\r\n\r\nexport default fromJSLeaveImmer;\r\n","import { createBrowserHistory, createMemoryHistory } from 'history';\r\n\r\n// Create a history depending on the environment\r\nconst selectedHistory =\r\n  typeof window !== 'undefined' ? createBrowserHistory : createMemoryHistory;\r\n\r\nexport const history = (options = {}) => selectedHistory(options);\r\nexport const browserHistory = selectedHistory();\r\n","const servers = SERVERS; /* global SERVERS */\r\nconst alias = servers.alias.toLowerCase();\r\nconst publicUri = PUBLIC_URI; /* global PUBLIC_URI */\r\nconst projects = PROJECTS; /* global PROJECTS */\r\n\r\n// return a projectId via the request hostname\r\nconst pickProject = (hostname, query) => {\r\n  // if localhost we can only infer via a querystring, and take your word for it\r\n  if (hostname == 'localhost') {\r\n    return (query && query.p) || projects[0].id;\r\n  }\r\n\r\n  // if hostname is the actual public uri we can return the first project from the list\r\n  if (hostname == publicUri) {\r\n    return projects[0].id;\r\n  }\r\n\r\n  let project = 'unknown';\r\n\r\n  // // go through all the defined projects\r\n  // Object.entries(projects).map(([, p]) => {\r\n  const p = projects[0];\r\n\r\n  // check if we're accessing via the project's public uri\r\n  if (hostname.includes(p.publicUri)) project = p.id;\r\n\r\n  // the url structure is different for website (we don't prefix)\r\n  if (p.id.startsWith('website')) {\r\n    // check for internal and external hostnames\r\n    // we check live and preview distinctly so our rule does not clash with\r\n    // hostnames that use a project prefix\r\n    if (\r\n      hostname.includes(`live-${alias}.cloud.contensis.com`) ||\r\n      hostname.includes(`live.${alias}.contensis.cloud`) ||\r\n      hostname.includes(`preview-${alias}.cloud.contensis.com`) ||\r\n      hostname.includes(`preview.${alias}.contensis.cloud`)\r\n    )\r\n      project = p.id;\r\n  } else {\r\n    // check for internal and external hostnames, prefixed with the projectId\r\n    if (\r\n      hostname.includes(`${p.id.toLowerCase()}-${alias}.cloud.contensis.com`) ||\r\n      hostname.includes(`${p.id.toLowerCase()}.${alias}.contensis.cloud`)\r\n    )\r\n      project = p.id;\r\n  }\r\n  // });\r\n  return project === 'unknown' ? p.id : project;\r\n};\r\n\r\nexport default pickProject;\r\n","import { Map, fromJS, List } from 'immutable';\r\n\r\nimport {\r\n  SET_NODE_TREE,\r\n  GET_NODE_TREE_ERROR,\r\n} from '~/core/redux/types/navigation';\r\n\r\nconst initialState = Map({\r\n  root: null,\r\n  treeDepends: new List([]),\r\n  isError: false,\r\n  isReady: false,\r\n});\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_NODE_TREE: {\r\n      return state.set('root', fromJS(action.nodes)).set('isReady', true);\r\n    }\r\n    case GET_NODE_TREE_ERROR: {\r\n      return state.set('isError', true);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { OrderedMap, fromJS, List, Set } from 'immutable';\r\nimport {\r\n  SET_ENTRY,\r\n  SET_NAVIGATION_PATH,\r\n  SET_ANCESTORS,\r\n  SET_TARGET_PROJECT,\r\n  SET_ROUTE,\r\n  SET_SIBLINGS,\r\n  SET_SURROGATE_KEYS,\r\n  UPDATE_LOADING_STATE,\r\n} from '~/core/redux/types/routing';\r\n\r\nlet initialState = OrderedMap({\r\n  contentTypeId: null,\r\n  currentPath: '/',\r\n  currentNode: [],\r\n  currentNodeAncestors: List(),\r\n  currentProject: 'unknown',\r\n  entryID: null,\r\n  entry: null,\r\n  currentTreeId: null,\r\n  entryDepends: List(),\r\n  isLoading: false,\r\n  location: null,\r\n  mappedEntry: OrderedMap(),\r\n  nodeDepends: List(),\r\n  notFound: false,\r\n  staticRoute: null,\r\n});\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ANCESTORS: {\r\n      if (action.ancestors) {\r\n        return state.set('currentNodeAncestors', fromJS(action.ancestors));\r\n      }\r\n      return state.set('currentNodeAncestors', fromJS(action.ancestors));\r\n    }\r\n    case SET_ENTRY: {\r\n      const {\r\n        entry,\r\n        mappedEntry,\r\n        node = {},\r\n        isLoading = false,\r\n        notFound = false,\r\n      } = action;\r\n      let nextState;\r\n\r\n      if (!entry) {\r\n        nextState = state\r\n          .set('entryID', null)\r\n          .set('entry', null)\r\n          .set('mappedEntry', OrderedMap())\r\n          .set('isLoading', isLoading)\r\n          .set('notFound', notFound);\r\n      } else {\r\n        nextState = state\r\n          .set('entryID', action.id)\r\n          .set('entry', fromJS(entry))\r\n          .set('isLoading', isLoading)\r\n          .set('notFound', notFound);\r\n\r\n        if (mappedEntry && Object.keys(mappedEntry).length > 0)\r\n          nextState = nextState\r\n            .set('mappedEntry', fromJS(mappedEntry))\r\n            .set('entry', fromJS({ sys: entry.sys }));\r\n      }\r\n\r\n      if (!node) {\r\n        return nextState.set('nodeDepends', null).set('currentNode', null);\r\n      } else {\r\n        // On Set Node, we reset all dependants.\r\n        return nextState\r\n          .set('currentNode', fromJS(node))\r\n          .removeIn(['currentNode', 'entry']); // We have the entry stored elsewhere, so lets not keep it twice.\r\n      }\r\n    }\r\n    case UPDATE_LOADING_STATE: {\r\n      return state.set('isLoading', action.isLoading);\r\n    }\r\n    case SET_NAVIGATION_PATH: {\r\n      let staticRoute = false;\r\n      if (action.staticRoute) {\r\n        staticRoute = { ...action.staticRoute };\r\n      }\r\n      if (action.path) {\r\n        // Don't run a path update on initial load as we allready should have it in redux\r\n        const entryUri = state.getIn(['entry', 'sys', 'uri']);\r\n        if (entryUri != action.path) {\r\n          return state\r\n            .set('currentPath', fromJS(action.path))\r\n            .set('location', fromJS(action.location))\r\n            .set(\r\n              'staticRoute',\r\n              fromJS({\r\n                ...staticRoute,\r\n                route: { ...staticRoute.route, component: null },\r\n              })\r\n            )\r\n            .set('isLoading', typeof window !== 'undefined');\r\n        } else {\r\n          return state.set('location', fromJS(action.location)).set(\r\n            'staticRoute',\r\n            fromJS({\r\n              ...staticRoute,\r\n              route: { ...staticRoute.route, component: null },\r\n            })\r\n          );\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n    case SET_ROUTE: {\r\n      return state.set('nextPath', action.path);\r\n    }\r\n    case SET_SIBLINGS: {\r\n      // Can be null in some cases like the homepage.\r\n      let currentNodeSiblingParent = null;\r\n      let siblingIDs = [];\r\n      if (action.siblings && action.siblings.length > 0) {\r\n        currentNodeSiblingParent = action.siblings[0].parentId;\r\n        siblingIDs = action.siblings.map(node => {\r\n          return node.id;\r\n        });\r\n      }\r\n      let currentNodeDepends = state.get('nodeDepends');\r\n      const allNodeDepends = Set.union([Set(siblingIDs), currentNodeDepends]);\r\n      return state\r\n        .set('nodeDepends', allNodeDepends)\r\n        .set('currentNodeSiblings', fromJS(action.siblings))\r\n        .set('currentNodeSiblingsParent', currentNodeSiblingParent);\r\n    }\r\n    case SET_SURROGATE_KEYS: {\r\n      return state.set('surrogateKeys', action.keys);\r\n    }\r\n    case SET_TARGET_PROJECT: {\r\n      return state\r\n        .set('currentProject', action.project)\r\n        .set('currentTreeId', '') //getTreeID(action.project))\r\n        .set('allowedGroups', fromJS(action.allowedGroups));\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Map } from 'immutable';\r\nimport { SET_VERSION, SET_VERSION_STATUS } from '~/core/redux/types/version';\r\n\r\nlet initialState = Map({\r\n  commitRef: null,\r\n  buildNo: null,\r\n  contensisVersionStatus: 'published',\r\n});\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_VERSION_STATUS: {\r\n      return state.set('contensisVersionStatus', action.status);\r\n    }\r\n    case SET_VERSION: {\r\n      return state\r\n        .set('commitRef', action.commitRef)\r\n        .set('buildNo', action.buildNo);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { CALL_HISTORY_METHOD } from '~/core/redux/types/routing';\r\n\r\n/**\r\n * This middleware captures CALL_HISTORY_METHOD actions to redirect to the\r\n * provided history object. This will prevent these actions from reaching your\r\n * reducer or any middleware that comes after this one.\r\n */\r\n/* eslint-disable no-unused-vars */\r\nconst routerMiddleware = history => store => next => action => {\r\n  if (action.type !== CALL_HISTORY_METHOD) {\r\n    return next(action);\r\n  }\r\n\r\n  const {\r\n    payload: { method, args },\r\n  } = action;\r\n  history[method](...args);\r\n};\r\n\r\nexport default routerMiddleware;\r\n","import { compose, createStore, applyMiddleware } from 'redux';\r\nimport { combineReducers } from 'redux-immutable';\r\nimport thunk from 'redux-thunk';\r\nimport createSagaMiddleware, { END } from 'redux-saga';\r\n\r\n// Core reducers\r\nimport NavigationReducer from './reducers/navigation';\r\nimport RoutingReducer from './reducers/routing';\r\nimport UserReducer from '~/features/login/redux/reducers';\r\nimport VersionReducer from './reducers/version';\r\nimport routerMiddleware from './routerMiddleware';\r\n\r\nexport let reduxStore = null;\r\n\r\nexport default (featureReducers, initialState, history) => {\r\n  const thunkMiddleware = [thunk];\r\n\r\n  let reduxDevToolsMiddleware = f => f;\r\n\r\n  if (typeof window != 'undefined') {\r\n    reduxDevToolsMiddleware = window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : f => f;\r\n  }\r\n\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middleware = compose(\r\n    applyMiddleware(\r\n      ...thunkMiddleware,\r\n      sagaMiddleware,\r\n      routerMiddleware(history)\r\n    ),\r\n    reduxDevToolsMiddleware\r\n  );\r\n\r\n  let reducers = {\r\n    navigation: NavigationReducer,\r\n    routing: RoutingReducer,\r\n    user: UserReducer,\r\n    version: VersionReducer,\r\n    ...featureReducers,\r\n  };\r\n\r\n  const combinedReducers = combineReducers(reducers);\r\n\r\n  const store = initialState => {\r\n    const store = createStore(combinedReducers, initialState, middleware);\r\n    store.runSaga = sagaMiddleware.run;\r\n    store.close = () => store.dispatch(END);\r\n    return store;\r\n  };\r\n\r\n  reduxStore = store(initialState);\r\n  return reduxStore;\r\n};\r\n","import { Client } from 'contensis-delivery-api';\r\nimport { setSurrogateKeys } from '../redux/actions/routing';\r\nimport { reduxStore } from '../redux/store';\r\n\r\nconst storeSurrogateKeys = response => {\r\n  const keys = response.headers.get\r\n    ? response.headers.get('surrogate-key')\r\n    : response.headers.map['surrogate-key'];\r\n  if (keys) reduxStore.dispatch(setSurrogateKeys(keys));\r\n};\r\n\r\nconst getClientConfig = project => {\r\n  let config = DELIVERY_API_CONFIG; /* global DELIVERY_API_CONFIG */\r\n  config.responseHandler = {};\r\n\r\n  if (project) {\r\n    config.projectId = project;\r\n  }\r\n\r\n  // // we only want the surrogate key header in a server context\r\n  if (typeof window === 'undefined') {\r\n    config.defaultHeaders = {\r\n      'x-require-surrogate-key': true,\r\n    };\r\n    config.responseHandler[200] = storeSurrogateKeys;\r\n  }\r\n\r\n  if (\r\n    typeof window !== 'undefined' &&\r\n    PROXY_DELIVERY_API /* global PROXY_DELIVERY_API */\r\n  ) {\r\n    // ensure a relative url is used to bypass the need for CORS (separate OPTIONS calls)\r\n    config.rootUrl = '';\r\n    config.responseHandler[404] = () => null;\r\n  }\r\n  return config;\r\n};\r\n\r\nexport * from 'contensis-delivery-api';\r\n\r\nclass DeliveryApi {\r\n  getClientSideVersionStatus = () => {\r\n    if (typeof window != 'undefined') {\r\n      const currentHostname = window.location.hostname;\r\n      return this.getVersionStatusFromHostname(currentHostname);\r\n    }\r\n    return null;\r\n  };\r\n  getVersionStatusFromHostname = currentHostname => {\r\n    if (currentHostname.indexOf('localhost') > -1) return 'latest';\r\n\r\n    if (currentHostname.endsWith('contensis.cloud')) {\r\n      if (currentHostname.indexOf('preview.') > -1) {\r\n        return 'latest';\r\n      } else {\r\n        return 'published';\r\n      }\r\n    }\r\n\r\n    if (currentHostname.endsWith('cloud.contensis.com')) {\r\n      if (currentHostname.indexOf('preview-') > -1) {\r\n        return 'latest';\r\n      } else {\r\n        return 'published';\r\n      }\r\n    }\r\n\r\n    return 'published';\r\n  };\r\n  search = (query, linkDepth, project, env) => {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return client.entries.search(\r\n      query,\r\n      typeof linkDepth !== 'undefined' ? linkDepth : 1\r\n    );\r\n  };\r\n  getClient = (deliveryApiStatus = 'published', project, env) => {\r\n    const baseConfig = getClientConfig(project, env);\r\n    baseConfig.versionStatus = deliveryApiStatus;\r\n    return Client.create(baseConfig);\r\n  };\r\n  getEntry = (\r\n    id,\r\n    linkDepth = 0,\r\n    deliveryApiStatus = 'published',\r\n    project,\r\n    env\r\n  ) => {\r\n    const baseConfig = getClientConfig(project, env);\r\n    baseConfig.versionStatus = deliveryApiStatus;\r\n    const client = Client.create(baseConfig);\r\n    // return client.entries.get(id, linkDepth);\r\n    return client.entries.get({ id, linkDepth });\r\n  };\r\n}\r\n\r\nexport const deliveryApi = new DeliveryApi();\r\n\r\nclass CacheNode {\r\n  constructor(key, value) {\r\n    this.key = key;\r\n    this.value = value;\r\n    this.next = null;\r\n    this.prev = null;\r\n  }\r\n}\r\n\r\nclass LruCache {\r\n  constructor(limit = 100) {\r\n    this.map = {};\r\n    this.head = null;\r\n    this.tail = null;\r\n    this.limit = limit || 100;\r\n    this.size = 0;\r\n  }\r\n\r\n  get(key) {\r\n    if (this.map[key]) {\r\n      let value = this.map[key].value;\r\n      let node = new CacheNode(key, value);\r\n      this.remove(key);\r\n      this.setHead(node);\r\n      return value;\r\n    }\r\n  }\r\n\r\n  set(key, value) {\r\n    let node = new CacheNode(key, value);\r\n    if (this.map[key]) {\r\n      this.remove(key);\r\n    } else {\r\n      if (this.size >= this.limit) {\r\n        delete this.map[this.tail.key];\r\n        this.size--;\r\n        this.tail = this.tail.prev;\r\n        this.tail.next = null;\r\n      }\r\n    }\r\n    this.setHead(node);\r\n  }\r\n\r\n  setHead(node) {\r\n    node.next = this.head;\r\n    node.prev = null;\r\n    if (this.head) {\r\n      this.head.prev = node;\r\n    }\r\n    this.head = node;\r\n    if (!this.tail) {\r\n      this.tail = node;\r\n    }\r\n    this.size++;\r\n    this.map[node.key] = node;\r\n  }\r\n\r\n  remove(key) {\r\n    let node = this.map[key];\r\n    if (node.prev) {\r\n      node.prev.next = node.next;\r\n    } else {\r\n      this.head = node.next;\r\n    }\r\n    if (node.next) {\r\n      node.next.prev = node.prev;\r\n    } else {\r\n      this.tail = node.prev;\r\n    }\r\n    delete this.map[key];\r\n    this.size--;\r\n  }\r\n}\r\n\r\nclass CachedSearch {\r\n  cache = new LruCache();\r\n  taxonomyLookup = {};\r\n\r\n  search(query, linkDepth, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      project + JSON.stringify(query) + linkDepth.toString(),\r\n      () => client.entries.search(query, linkDepth)\r\n    );\r\n  }\r\n\r\n  get(id, linkDepth, versionStatus, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    client.clientConfig.versionStatus = versionStatus;\r\n    return this.request(id, () => client.entries.get({ id, linkDepth }));\r\n  }\r\n\r\n  getContentType(id, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`[CONTENT TYPE] ${id} ${project}`, () =>\r\n      client.contentTypes.get(id)\r\n    );\r\n  }\r\n\r\n  getTaxonomyNode(key, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`[TAXONOMY NODE] ${key}`, () =>\r\n      client.taxonomy\r\n        .resolveChildren(key)\r\n        .then(node => this.extendTaxonomyNode(node))\r\n    );\r\n  }\r\n\r\n  getRootNode(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`${project} / ${JSON.stringify(options)}`, () =>\r\n      client.nodes.getRoot(options)\r\n    );\r\n  }\r\n\r\n  getNode(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} ${(options && options.path) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.get(options)\r\n    );\r\n  }\r\n\r\n  getAncestors(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} [A] ${(options && options.id) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.getAncestors(options)\r\n    );\r\n  }\r\n\r\n  getChildren(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} [C] ${(options && options.id) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.getChildren(options)\r\n    );\r\n  }\r\n\r\n  getSiblings(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} [S] ${(options && options.id) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.getSiblings(options)\r\n    );\r\n  }\r\n\r\n  request(key, execute) {\r\n    if (!this.cache.get(key) || typeof window == 'undefined') {\r\n      let promise = execute();\r\n      this.cache.set(key, promise);\r\n      promise.catch(() => {\r\n        this.cache.remove(key);\r\n      });\r\n    }\r\n    return this.cache.get(key);\r\n  }\r\n\r\n  extendTaxonomyNode(node) {\r\n    let id = this.getTaxonomyId(node);\r\n    this.taxonomyLookup[id] = node.key;\r\n    return {\r\n      ...node,\r\n      id,\r\n      children: node.children\r\n        ? node.children.map(n => this.extendTaxonomyNode(n))\r\n        : null,\r\n    };\r\n  }\r\n\r\n  getTaxonomyId(node) {\r\n    if (node.key) {\r\n      let parts = node.key.split('/');\r\n      return parts[parts.length - 1];\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getTaxonomyKey(id) {\r\n    return this.taxonomyLookup[id];\r\n  }\r\n}\r\n\r\nexport const cachedSearch = new CachedSearch();\r\n","import { takeEvery, put, select } from 'redux-saga/effects';\r\n\r\nimport { deliveryApi } from '~/core/util/ContensisDeliveryApi';\r\nimport {\r\n  GET_NODE_TREE,\r\n  SET_NODE_TREE,\r\n  GET_NODE_TREE_ERROR,\r\n} from '~/core/redux/types/navigation';\r\nimport { hasNavigationTree } from '~/core/redux/selectors/navigation';\r\nimport { selectVersionStatus } from '../selectors/version';\r\nimport { selectCurrentProject } from '../selectors/routing';\r\n\r\nexport const navigationSagas = [takeEvery(GET_NODE_TREE, ensureNodeTreeSaga)];\r\n\r\nexport function* ensureNodeTreeSaga(action) {\r\n  const state = yield select();\r\n  try {\r\n    if (!hasNavigationTree(state)) {\r\n      const deliveryApiVersionStatus = yield select(selectVersionStatus);\r\n      const project = yield select(selectCurrentProject);\r\n      const nodes = yield deliveryApi\r\n        .getClient(deliveryApiVersionStatus, project)\r\n        .nodes.getRoot({\r\n          depth: action.treeDepth || 0,\r\n        });\r\n      if (nodes) {\r\n        yield put({ type: SET_NODE_TREE, nodes });\r\n      } else {\r\n        yield put({ type: GET_NODE_TREE_ERROR });\r\n      }\r\n    }\r\n  } catch (ex) {\r\n    yield put({ type: GET_NODE_TREE_ERROR, error: ex.toString() });\r\n  }\r\n}\r\n","export const DataFormats = {\r\n  entry: 'entry',\r\n  webpage: 'webpage',\r\n};\r\n\r\nconst sys = {\r\n  contentTypeId: 'sys.contentTypeId',\r\n  dataFormat: 'sys.dataFormat',\r\n  filename: 'sys.properties.filename',\r\n  id: 'sys.id',\r\n  includeInSearch: 'sys.metadata.includeInSearch',\r\n  slug: 'sys.slug',\r\n  uri: 'sys.uri',\r\n  versionStatus: 'sys.versionStatus',\r\n};\r\n\r\nexport const Fields = {\r\n  entryTitle: 'entryTitle',\r\n  entryDescription: 'entryDescription',\r\n  keywords: 'keywords',\r\n  sys,\r\n  contentTypeId: 'sys.contentTypeId',\r\n  wildcard: '*',\r\n};\r\n\r\nexport const Projects = {\r\n  website: 'website',\r\n};\r\n\r\nexport const VersionStatus = {\r\n  published: 'published',\r\n  latest: 'latest',\r\n};\r\n\r\nexport const ContentTypes = {\r\n  contentPage: 'contentPage',\r\n};\r\n\r\nexport const WebpageFormats = {};\r\n\r\nexport const FilterExpressionTypes = {\r\n  contentType: 'contentType',\r\n  field: 'field',\r\n};\r\n","import { Op, OrderBy } from 'contensis-delivery-api';\r\nimport { Fields, DataFormats } from '~/core/schema';\r\nimport {\r\n  fixFreeTextForElastic,\r\n  extractQuotedPhrases,\r\n} from '~/core/search/util';\r\n\r\nexport const fieldExpression = (\r\n  field,\r\n  value,\r\n  operator = 'equalTo',\r\n  weight = null\r\n) => {\r\n  if (!field || !value) return [];\r\n  if (Array.isArray(value)) return equalToOrIn(field, value, operator);\r\n  else\r\n    return !weight\r\n      ? [Op[operator](field, value)]\r\n      : [Op[operator](field, value).weight(weight)];\r\n};\r\n\r\nexport const contentTypeIdExpression = (contentTypeIds, webpageTemplates) => {\r\n  const expressions = [];\r\n  if (!contentTypeIds && !webpageTemplates) return expressions;\r\n\r\n  if (contentTypeIds && contentTypeIds.length > 0) {\r\n    expressions.push(\r\n      ...dataFormatExpression(contentTypeIds, DataFormats.entry)\r\n    );\r\n  }\r\n\r\n  if (webpageTemplates && webpageTemplates.length > 0) {\r\n    expressions.push(\r\n      ...dataFormatExpression(webpageTemplates, DataFormats.webpage)\r\n    );\r\n  }\r\n\r\n  if (expressions.length > 1) return [Op.or(...expressions)];\r\n\r\n  return expressions;\r\n};\r\n\r\nexport const filterExpressions = filters => {\r\n  if (!filters) return [];\r\n  const expressions = [];\r\n\r\n  filters.map(param => {\r\n    expressions.push(...fieldExpression(param.key, param.value, 'contains'));\r\n  });\r\n\r\n  return expressions;\r\n};\r\n\r\nexport const dataFormatExpression = (\r\n  contentTypeIds,\r\n  dataFormat = DataFormats.entry\r\n) => {\r\n  if (contentTypeIds && contentTypeIds.length > 0) {\r\n    /**\r\n     * We have an array of contentTypeIds some may be prefixed with a \"!\"\r\n     * to indicate this is a \"not\" expression\r\n     */\r\n    const withContentTypeIds = contentTypeIds.filter(c => !c.startsWith('!'));\r\n    const notContentTypeIds = contentTypeIds\r\n      .filter(c => c.startsWith('!'))\r\n      .map(id => id.substring(1));\r\n\r\n    const andExpr = Op.and();\r\n\r\n    const dataFormatExpr = fieldExpression(Fields.sys.dataFormat, dataFormat);\r\n\r\n    const withExpr = fieldExpression(\r\n      Fields.sys.contentTypeId,\r\n      withContentTypeIds\r\n    );\r\n\r\n    const notExpr = [\r\n      Op.not(...fieldExpression(Fields.sys.contentTypeId, notContentTypeIds)),\r\n    ];\r\n\r\n    andExpr.add(...dataFormatExpr);\r\n    if (withContentTypeIds.length > 0) andExpr.add(...withExpr);\r\n    if (notContentTypeIds.length > 0) andExpr.add(...notExpr);\r\n\r\n    return [andExpr];\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const defaultExpressions = versionStatus => {\r\n  return [Op.equalTo(Fields.sys.versionStatus, versionStatus)];\r\n};\r\n\r\nexport const defaultSearchExpressions = versionStatus => {\r\n  return [\r\n    ...defaultExpressions(versionStatus),\r\n    ...includeInSearchExpressions(),\r\n  ];\r\n};\r\nexport const includeInSearchExpressions = () => [\r\n  Op.or(\r\n    Op.and(\r\n      Op.exists(Fields.sys.includeInSearch, true),\r\n      Op.equalTo(Fields.sys.includeInSearch, true)\r\n    ),\r\n    Op.exists(Fields.sys.includeInSearch, false)\r\n  ),\r\n];\r\n\r\nexport const orderByExpression = orderBy => {\r\n  let expression = OrderBy;\r\n  if (orderBy && orderBy.length > 0) {\r\n    orderBy.map(\r\n      ob =>\r\n        (expression = ob.startsWith('-')\r\n          ? expression.desc(ob.substring(1))\r\n          : expression.asc(ob))\r\n    );\r\n  }\r\n  return expression;\r\n};\r\n\r\nconst equalToOrIn = (field, arr, operator = 'equalTo') =>\r\n  arr.length === 0\r\n    ? []\r\n    : arr.length === 1\r\n    ? [Op[operator](field, arr[0])]\r\n    : [Op.in(field, ...arr)];\r\n\r\nexport const customWhereExpressions = where => {\r\n  if (!where || !Array.isArray(where)) return [];\r\n\r\n  // Accept HTTP style objects and map them to\r\n  // their equivalent JS client \"Op\" expressions\r\n  return where.map(clause => {\r\n    let expression;\r\n    Object.keys(clause).map((key, idx) => {\r\n      if (idx === 1) {\r\n        const operator = key;\r\n        const value = clause[key];\r\n        expression = Op[operator](clause.field, value, clause.weight);\r\n      }\r\n    });\r\n    return expression;\r\n  });\r\n};\r\n\r\nexport const termExpressions = (searchTerm, weightedSearchFields) => {\r\n  if (searchTerm && weightedSearchFields && weightedSearchFields.length > 0) {\r\n    // Extract any phrases in quotes to array\r\n    const quotedPhrases = extractQuotedPhrases(searchTerm);\r\n\r\n    // Modify the search term to remove any quoted phrases to leave any remaining terms\r\n    let modifiedSearchTerm = searchTerm;\r\n    quotedPhrases.forEach(\r\n      qp =>\r\n        (modifiedSearchTerm = modifiedSearchTerm\r\n          .replace(qp, '')\r\n          .replace('\"\"', '')\r\n          .trim())\r\n    );\r\n\r\n    // Push to the operators array to include in the query\r\n    const operators = [];\r\n\r\n    // Helper functions to generate Op expressions\r\n    const containsOp = (f, term) =>\r\n      fieldExpression(\r\n        f.fieldId,\r\n        fixFreeTextForElastic(term),\r\n        'contains',\r\n        f.weight\r\n      );\r\n    const freeTextOp = (f, term) =>\r\n      fieldExpression(\r\n        f.fieldId,\r\n        fixFreeTextForElastic(term),\r\n        'freeText',\r\n        f.weight\r\n      );\r\n\r\n    // For each weighted search field\r\n    weightedSearchFields.forEach(f => {\r\n      // Push to field operators\r\n      const fieldOperators = [];\r\n\r\n      // Add operator expressions for modified search term\r\n      if (modifiedSearchTerm) {\r\n        if (\r\n          [Fields.keywords, Fields.sys.filename, Fields.sys.uri].includes(\r\n            f.fieldId\r\n          )\r\n        ) {\r\n          fieldOperators.push(...containsOp(f, modifiedSearchTerm));\r\n        } else {\r\n          if ([Fields.entryTitle].includes(f.fieldId)) {\r\n            fieldOperators.push(\r\n              Op.or(\r\n                ...containsOp(f, modifiedSearchTerm),\r\n                ...freeTextOp(f, modifiedSearchTerm)\r\n              )\r\n            );\r\n          } else {\r\n            fieldOperators.push(...freeTextOp(f, modifiedSearchTerm));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Add operator expressions for any quoted phrases\r\n      quotedPhrases.forEach(qp => fieldOperators.push(...containsOp(f, qp)));\r\n\r\n      // If we are using multiple operators for a field we will\r\n      // wrap each field inside an And operator so we will match\r\n      // all terms/phrases rather than any terms/phrases\r\n      if (fieldOperators.length > 1) {\r\n        operators.push(Op.and(...fieldOperators));\r\n      } else {\r\n        operators.push(...fieldOperators);\r\n      }\r\n    });\r\n\r\n    // Wrap operators in an Or operator\r\n    return [Op.or().addRange(operators)];\r\n  } else if (searchTerm) {\r\n    return [Op.contains(Fields.wildcard, searchTerm)];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n","// eslint-disable-next-line import/named\r\nimport { Query } from '~/core/util/ContensisDeliveryApi';\r\nimport { fieldExpression, defaultExpressions } from '~/core/search/expressions';\r\n\r\nexport const routeEntryByFieldsQuery = (\r\n  id,\r\n  fields = [],\r\n  versionStatus = 'published'\r\n) => {\r\n  const query = new Query(\r\n    ...[...fieldExpression('sys.id', id), ...defaultExpressions(versionStatus)]\r\n  );\r\n  query.fields = fields;\r\n  return query;\r\n};\r\n","// load-entries.js\r\nimport * as log from 'loglevel';\r\nimport { takeEvery, put, select, call, all } from 'redux-saga/effects';\r\nimport {\r\n  SET_ENTRY,\r\n  SET_ANCESTORS,\r\n  SET_NAVIGATION_PATH,\r\n  SET_ROUTE,\r\n  CALL_HISTORY_METHOD,\r\n  SET_SIBLINGS,\r\n  UPDATE_LOADING_STATE,\r\n} from '~/core/redux/types/routing';\r\nimport { cachedSearch, deliveryApi } from '~/core/util/ContensisDeliveryApi';\r\nimport { selectVersionStatus } from '~/core/redux/selectors/version';\r\nimport {\r\n  selectCurrentAncestors,\r\n  selectCurrentNode,\r\n  selectCurrentProject,\r\n  selectMappedEntry,\r\n  selectRouteEntry,\r\n  selectRouteEntryEntryId,\r\n  selectRouteEntryLanguage,\r\n} from '~/core/redux/selectors/routing';\r\nimport { GET_NODE_TREE } from '../types/navigation';\r\nimport { hasNavigationTree } from '../selectors/navigation';\r\nimport { routeEntryByFieldsQuery } from './queries';\r\nimport { ensureNodeTreeSaga } from './navigation';\r\nimport { handleRequiresLoginSaga } from '~/features/login/redux/sagas/login';\r\nimport { findContentTypeMapping } from '~/core/util/helpers';\r\nimport { Map } from 'immutable';\r\n\r\nexport const routingSagas = [\r\n  takeEvery(SET_NAVIGATION_PATH, getRouteSaga),\r\n  takeEvery(SET_ROUTE, setRouteSaga),\r\n];\r\n\r\n/**\r\n * To navigate / push a specific route via redux middleware\r\n * @param {path, state} action\r\n */\r\nfunction* setRouteSaga(action) {\r\n  yield put({\r\n    type: CALL_HISTORY_METHOD,\r\n    payload: {\r\n      method: 'push',\r\n      args: [action.path, action.state],\r\n    },\r\n  });\r\n}\r\n\r\nfunction* getRouteSaga(action) {\r\n  let entry = null;\r\n  try {\r\n    const {\r\n      withEvents,\r\n      routes: { ContentTypeMappings = {} } = {},\r\n      staticRoute,\r\n    } = action;\r\n\r\n    // Variables we will pass to setRouteEntry\r\n    let pathNode = null,\r\n      ancestors = null,\r\n      siblings = null;\r\n\r\n    // These variables are the return values from\r\n    // calls to withEvents.onRouteLoad and onRouteLoaded\r\n    let appsays,\r\n      requireLogin = false;\r\n\r\n    if (withEvents && withEvents.onRouteLoad) {\r\n      appsays = yield withEvents.onRouteLoad(action);\r\n    }\r\n    // if appsays customNavigation: true, we will set doNavigation to false\r\n    // if appsays customNavigation: { ... }, we will set doNavigation to the customNavigation object and check for child elements\r\n    // if appsays nothing we will set doNavigation to true and continue to do navigation calls\r\n    const doNavigation =\r\n      !appsays ||\r\n      (appsays && appsays.customNavigation === true\r\n        ? false\r\n        : (appsays && appsays.customNavigation) || true);\r\n\r\n    const entryLinkDepth = (appsays && appsays.entryLinkDepth) || 3;\r\n    const setContentTypeLimits = !!ContentTypeMappings.find(\r\n      ct => ct.fields || ct.linkDepth\r\n    );\r\n\r\n    const state = yield select();\r\n    const routeEntry = selectRouteEntry(state);\r\n    // const routeNode = selectCurrentNode(state);\r\n    const currentPath = action.path; //selectCurrentPath(state);\r\n    const deliveryApiStatus = selectVersionStatus(state);\r\n    const project = selectCurrentProject(state);\r\n    const isHome = currentPath === '/';\r\n    const isPreview = currentPath && currentPath.startsWith('/preview/');\r\n    const defaultLang = (appsays && appsays.defaultLang) || 'en-GB';\r\n\r\n    // debugger;\r\n    // routeEntry = Map({\r\n    //   entryTitle: 'fake entry',\r\n    //   title: 'fakey entry',\r\n    //   sys: { id: 'abcd', contentTypeId: 'zenbaseHomePage' },\r\n    // });\r\n\r\n    if (\r\n      !isPreview &&\r\n      ((appsays && appsays.customRouting) ||\r\n        (staticRoute && !staticRoute.route.fetchNode) ||\r\n        (routeEntry && action.statePath === action.path))\r\n    ) {\r\n      // To prevent erroneous 404s and wasted network calls, this covers\r\n      // - appsays customRouting and does SET_ENTRY etc. via the consuming app\r\n      // - all staticRoutes (where custom 'route.fetchNode' attribute is falsey)\r\n      // - standard Contensis SiteView Routing where we already have that entry in state\r\n      if (\r\n        routeEntry &&\r\n        (!staticRoute || (staticRoute.route && staticRoute.route.fetchNode))\r\n      ) {\r\n        pathNode = {};\r\n        pathNode.entry = entry = routeEntry.toJS();\r\n        //Do nothing, the entry is allready the right one.\r\n        // yield put({\r\n        //   type: SET_ENTRY,\r\n        //   entry,\r\n        //   node: routeNode,\r\n        //   isLoading: false,\r\n        // });\r\n        yield put({\r\n          type: UPDATE_LOADING_STATE,\r\n          isLoading: false,\r\n        });\r\n      } else\r\n        yield call(\r\n          setRouteEntry,\r\n          routeEntry && routeEntry.toJS(),\r\n          yield select(selectCurrentNode),\r\n          yield select(selectCurrentAncestors)\r\n        );\r\n    } else {\r\n      // Handle homepage\r\n      if (isHome) {\r\n        pathNode = yield cachedSearch.getRootNode(\r\n          {\r\n            depth: 0,\r\n            entryFields: '*',\r\n            entryLinkDepth,\r\n            language: defaultLang,\r\n            versionStatus: deliveryApiStatus,\r\n          },\r\n          project\r\n        );\r\n        ({ entry } = pathNode || {});\r\n      } else {\r\n        // Handle preview routes\r\n        if (isPreview) {\r\n          let splitPath = currentPath.split('/');\r\n          let entryGuid = splitPath[2];\r\n          let language = defaultLang;\r\n          if (splitPath.length >= 3) {\r\n            //set lang key if available in the path, else use default lang\r\n            //assumes preview url on content type is: http://preview.ALIAS.contensis.cloud/preview/{GUID}/{LANG}\r\n            if (splitPath.length == 4) language = splitPath[3];\r\n            // According to product dev we cannot use Node API\r\n            // for previewing entries as it gives a response of []\r\n            // -- apparently it is not correct to request latest content\r\n            // with Node API\r\n\r\n            let previewEntry = yield deliveryApi\r\n              .getClient(deliveryApiStatus, project)\r\n              .entries.get({\r\n                id: entryGuid,\r\n                language,\r\n                linkDepth: entryLinkDepth,\r\n              });\r\n            if (previewEntry) {\r\n              pathNode = { entry: previewEntry };\r\n              ({ entry } = pathNode || {});\r\n            }\r\n          }\r\n        } else {\r\n          // Handle all other routes\r\n          pathNode = yield cachedSearch.getNode(\r\n            {\r\n              depth:\r\n                doNavigation === true || doNavigation.children === true\r\n                  ? 3\r\n                  : (doNavigation && doNavigation.children) || 0,\r\n              path: currentPath,\r\n              entryFields: setContentTypeLimits\r\n                ? ['sys.contentTypeId', 'sys.id']\r\n                : '*',\r\n              entryLinkDepth: setContentTypeLimits ? 0 : entryLinkDepth,\r\n              versionStatus: deliveryApiStatus,\r\n            },\r\n            project\r\n          );\r\n          ({ entry } = pathNode || {});\r\n\r\n          if (\r\n            setContentTypeLimits &&\r\n            pathNode &&\r\n            pathNode.entry &&\r\n            pathNode.entry.sys &&\r\n            pathNode.entry.sys.id\r\n          ) {\r\n            const { fields, linkDepth } =\r\n              findContentTypeMapping(\r\n                ContentTypeMappings,\r\n                pathNode.entry.sys.id\r\n              ) || {};\r\n            const query = routeEntryByFieldsQuery(\r\n              pathNode.entry.sys.id,\r\n              fields,\r\n              deliveryApiStatus\r\n            );\r\n            const payload = yield cachedSearch.search(\r\n              query,\r\n              typeof linkDepth !== 'undefined' ? linkDepth : 3,\r\n              project\r\n            );\r\n            if (payload && payload.items && payload.items.length > 0) {\r\n              pathNode.entry = payload.items[0];\r\n            }\r\n          }\r\n        }\r\n\r\n        if (pathNode && pathNode.id) {\r\n          if (doNavigation === true || doNavigation.ancestors) {\r\n            try {\r\n              ancestors = yield cachedSearch.getAncestors(\r\n                {\r\n                  id: pathNode.id,\r\n                  versionStatus: deliveryApiStatus,\r\n                },\r\n                project\r\n              );\r\n            } catch (ex) {\r\n              log.info('Problem fetching ancestors', ex);\r\n            }\r\n          }\r\n\r\n          if (doNavigation === true || doNavigation.siblings) {\r\n            try {\r\n              siblings = yield cachedSearch.getSiblings(\r\n                {\r\n                  id: pathNode.id,\r\n                  versionStatus: deliveryApiStatus,\r\n                },\r\n                project\r\n              );\r\n            } catch (ex) {\r\n              log.info('Problem fetching siblings', ex);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (withEvents && withEvents.onRouteLoaded) {\r\n      // Check if the app has provided a requireLogin boolean flag or groups array\r\n      // in addition to checking if requireLogin is set in the route definition\r\n      ({ requireLogin } =\r\n        (yield withEvents.onRouteLoaded({ ...action, entry })) || {});\r\n    }\r\n\r\n    if (requireLogin !== false) {\r\n      // Do not call the login feature saga if requireLogin is false\r\n      yield call(handleRequiresLoginSaga, {\r\n        ...action,\r\n        entry,\r\n        requireLogin,\r\n      });\r\n    }\r\n\r\n    if (\r\n      pathNode &&\r\n      pathNode.entry &&\r\n      pathNode.entry.sys &&\r\n      pathNode.entry.sys.id\r\n    ) {\r\n      entry = pathNode.entry;\r\n      const { entryMapper } =\r\n        findContentTypeMapping(ContentTypeMappings, entry.sys.contentTypeId) ||\r\n        {};\r\n      yield call(\r\n        setRouteEntry,\r\n        entry,\r\n        pathNode,\r\n        ancestors,\r\n        siblings,\r\n        entryMapper\r\n      );\r\n    } else {\r\n      if (pathNode)\r\n        yield call(setRouteEntry, null, pathNode, ancestors, siblings);\r\n      else if (!staticRoute) yield call(do404);\r\n    }\r\n    if (!appsays || !appsays.preventScrollTop) {\r\n      // Scroll into View\r\n      if (typeof window !== 'undefined') {\r\n        window.scroll({\r\n          top: 0,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !hasNavigationTree(state) &&\r\n      (doNavigation === true || doNavigation.tree)\r\n    )\r\n      if (typeof window !== 'undefined') {\r\n        yield put({\r\n          type: GET_NODE_TREE,\r\n          treeDepth:\r\n            doNavigation === true ||\r\n            !doNavigation.tree ||\r\n            doNavigation.tree === true\r\n              ? 2\r\n              : doNavigation.tree,\r\n        });\r\n      } else {\r\n        yield call(ensureNodeTreeSaga);\r\n      }\r\n  } catch (e) {\r\n    log.error(...['Error running route saga:', e, e.stack]);\r\n    yield call(do404);\r\n  }\r\n}\r\n\r\nfunction* setRouteEntry(\r\n  entry,\r\n  node,\r\n  ancestors,\r\n  siblings,\r\n  entryMapper,\r\n  notFound = false\r\n) {\r\n  const entrySys = (entry && entry.sys) || {};\r\n\r\n  const currentEntryId = yield select(selectRouteEntryEntryId);\r\n  const currentEntryLang = yield select(selectRouteEntryLanguage);\r\n  const mappedEntry =\r\n    currentEntryId === entrySys.id && currentEntryLang === entrySys.language\r\n      ? (yield select(selectMappedEntry) || Map()).toJS()\r\n      : yield mapRouteEntry(entryMapper, {\r\n          ...node,\r\n          entry,\r\n          ancestors,\r\n          siblings,\r\n        });\r\n\r\n  yield all([\r\n    put({\r\n      type: SET_ENTRY,\r\n      id: entrySys.id,\r\n      entry,\r\n      mappedEntry,\r\n      node,\r\n      notFound,\r\n    }),\r\n    ancestors &&\r\n      put({\r\n        type: SET_ANCESTORS,\r\n        ancestors,\r\n      }),\r\n    siblings &&\r\n      put({\r\n        type: SET_SIBLINGS,\r\n        siblings,\r\n      }),\r\n  ]);\r\n}\r\n\r\nfunction* mapRouteEntry(entryMapper, node) {\r\n  try {\r\n    if (typeof entryMapper === 'function') {\r\n      const state = yield select();\r\n      const mappedEntry = yield call(entryMapper, node, state);\r\n      return mappedEntry;\r\n    }\r\n  } catch (e) {\r\n    log.error(...['Error running entryMapper:', e, e.stack]);\r\n  }\r\n  return;\r\n}\r\nfunction* do404() {\r\n  //yield call(clientReloadHitServer);\r\n  yield put({\r\n    type: SET_ENTRY,\r\n    id: null,\r\n    entry: null,\r\n    notFound: true,\r\n  });\r\n}\r\n\r\n// function* clientReloadHitServer() {\r\n//   const stateEntry = yield select(selectRouteEntry);\r\n//   // If in client and there is a stateEntry.sys field reload the page,\r\n//   // on the 2nd load stateEntry.sys should be null at this point,\r\n//   // we do not wish to reload again and get stuck in an infinite reloading loop\r\n//   if (\r\n//     typeof window !== 'undefined' &&\r\n//     stateEntry &&\r\n//     stateEntry.get('sys', null)\r\n//   ) {\r\n//     // debugger;\r\n//     window.location.reload();\r\n//   }\r\n// }\r\n","import { to } from 'await-to-js';\r\nimport { put, select, takeEvery } from 'redux-saga/effects';\r\nimport { setRoute } from '~/core/redux/actions/routing';\r\nimport { selectCurrentSearch } from '~/core/redux/selectors/routing';\r\nimport { queryParams } from '~/core/util/navigation';\r\nimport {\r\n  REGISTER_USER,\r\n  REGISTER_USER_SUCCESS,\r\n  REGISTER_USER_FAILED,\r\n} from '../types';\r\n\r\nexport const registerSagas = [\r\n  takeEvery(REGISTER_USER, registerSaga),\r\n  takeEvery(REGISTER_USER_SUCCESS, redirectSaga),\r\n];\r\n\r\nfunction* registerSaga({ user, mappers }) {\r\n  let requestBody = user;\r\n  // Allow use of request mapper to take a user object\r\n  // of any format and return the payload for the api request\r\n  if (mappers && mappers.request && typeof mappers.request === 'function') {\r\n    requestBody = yield mappers.request(user);\r\n  }\r\n\r\n  // Make POST call to register API\r\n  const response = yield fetch('/account/register', {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(requestBody),\r\n  });\r\n\r\n  if (response.ok) {\r\n    let mappedResponse;\r\n    const [, responseBody] = yield to(response.json());\r\n    if (responseBody) {\r\n      // Allow use of response mapper to convert the successful user object\r\n      // from the api response body into a user object of any format\r\n      if (\r\n        mappers &&\r\n        mappers.response &&\r\n        typeof mappers.response === 'function'\r\n      ) {\r\n        mappedResponse = yield mappers.response(responseBody);\r\n      }\r\n      // Update user object with mappedResponse or responseBody\r\n      yield put({\r\n        type: REGISTER_USER_SUCCESS,\r\n        user: mappedResponse || responseBody,\r\n      });\r\n    } else {\r\n      // OK response but unable to parse the response body\r\n      yield put({\r\n        type: REGISTER_USER_FAILED,\r\n        error: {\r\n          message:\r\n            'Unable to parse the created user from the register service response',\r\n        },\r\n      });\r\n    }\r\n  } else {\r\n    // Not OK responses, these can be due to service availability\r\n    // or status codes echoed from the responses received from\r\n    // management api when registering the user\r\n    const [, errorResponse] = yield to(response.json());\r\n    const error = (errorResponse && errorResponse.error) || errorResponse || {};\r\n    // Get something meaningful from the response if there is no message in the body\r\n    if (!error.message) {\r\n      error.message = `Registration service: ${response.statusText}`;\r\n      error.status = response.status;\r\n    }\r\n    yield put({\r\n      type: REGISTER_USER_FAILED,\r\n      error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* redirectSaga() {\r\n  // Check if querystring contains a redirect_uri\r\n  const currentQs = queryParams(yield select(selectCurrentSearch));\r\n  const redirectUri = currentQs.redirect_uri || currentQs.redirect;\r\n\r\n  // We must use redux based navigation to preserve the registration state\r\n  if (redirectUri) yield put(setRoute(redirectUri));\r\n}\r\n","import { loginSagas } from './login';\r\nimport { registerSagas } from './register';\r\n\r\nexport const userSagas = [...loginSagas, ...registerSagas];\r\n","// index.js\r\nimport { all } from 'redux-saga/effects';\r\nimport { navigationSagas } from './navigation';\r\nimport { routingSagas } from './routing';\r\nimport { userSagas } from '~/features/login/redux/sagas/index.js';\r\n\r\nexport default function(featureSagas = []) {\r\n  return function* rootSaga() {\r\n    const subSagas = [...routingSagas, ...navigationSagas, ...userSagas];\r\n    yield all([...subSagas, ...featureSagas]);\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { hot } from 'react-hot-loader';\r\nimport RouteLoader from '~/core/routes/RouteLoader';\r\n\r\nconst AppRoot = props => {\r\n  return <RouteLoader {...props} />;\r\n};\r\n\r\nexport default hot(module)(AppRoot);\r\n"],"names":["fromJSLeaveImmer","js","isOrdered","console","info","convertedObject","OrderedMap","Map","keys","Object","forEach","key","set","fromJSOrdered","fromJS","selectedHistory","window","createBrowserHistory","createMemoryHistory","history","options","browserHistory","servers","SERVERS","alias","toLowerCase","publicUri","PUBLIC_URI","projects","PROJECTS","pickProject","hostname","query","p","id","project","includes","startsWith","initialState","root","treeDepends","List","isError","isReady","state","action","type","SET_NODE_TREE","nodes","GET_NODE_TREE_ERROR","contentTypeId","currentPath","currentNode","currentNodeAncestors","currentProject","entryID","entry","currentTreeId","entryDepends","isLoading","location","mappedEntry","nodeDepends","notFound","staticRoute","SET_ANCESTORS","ancestors","SET_ENTRY","node","nextState","length","sys","removeIn","UPDATE_LOADING_STATE","SET_NAVIGATION_PATH","path","entryUri","getIn","route","component","SET_ROUTE","SET_SIBLINGS","currentNodeSiblingParent","siblingIDs","siblings","parentId","map","currentNodeDepends","get","allNodeDepends","Set","union","SET_SURROGATE_KEYS","SET_TARGET_PROJECT","allowedGroups","commitRef","buildNo","contensisVersionStatus","SET_VERSION_STATUS","status","SET_VERSION","routerMiddleware","store","next","CALL_HISTORY_METHOD","payload","method","args","reduxStore","featureReducers","thunkMiddleware","thunk","reduxDevToolsMiddleware","f","__REDUX_DEVTOOLS_EXTENSION__","sagaMiddleware","createSagaMiddleware","middleware","compose","applyMiddleware","reducers","navigation","NavigationReducer","routing","RoutingReducer","user","UserReducer","version","VersionReducer","combinedReducers","combineReducers","createStore","runSaga","run","close","dispatch","END","storeSurrogateKeys","response","headers","setSurrogateKeys","getClientConfig","config","DELIVERY_API_CONFIG","responseHandler","projectId","defaultHeaders","PROXY_DELIVERY_API","rootUrl","DeliveryApi","getClientSideVersionStatus","currentHostname","getVersionStatusFromHostname","indexOf","endsWith","search","linkDepth","env","client","Client","create","entries","getClient","deliveryApiStatus","baseConfig","versionStatus","getEntry","deliveryApi","CacheNode","constructor","value","prev","LruCache","limit","head","tail","size","remove","setHead","CachedSearch","cache","taxonomyLookup","request","JSON","stringify","toString","clientConfig","getContentType","contentTypes","getTaxonomyNode","taxonomy","resolveChildren","then","extendTaxonomyNode","getRootNode","getRoot","getNode","getAncestors","getChildren","getSiblings","execute","promise","catch","getTaxonomyId","children","n","parts","split","getTaxonomyKey","cachedSearch","navigationSagas","takeEvery","GET_NODE_TREE","ensureNodeTreeSaga","select","hasNavigationTree","deliveryApiVersionStatus","selectVersionStatus","selectCurrentProject","depth","treeDepth","put","ex","error","dataFormat","filename","includeInSearch","slug","uri","Fields","entryTitle","entryDescription","keywords","wildcard","fieldExpression","field","operator","weight","Array","isArray","equalToOrIn","Op","defaultExpressions","equalTo","arr","in","routeEntryByFieldsQuery","fields","Query","routingSagas","getRouteSaga","setRouteSaga","withEvents","routes","ContentTypeMappings","pathNode","appsays","requireLogin","onRouteLoad","doNavigation","customNavigation","entryLinkDepth","setContentTypeLimits","find","ct","routeEntry","selectRouteEntry","isHome","isPreview","defaultLang","customRouting","fetchNode","statePath","toJS","call","setRouteEntry","selectCurrentNode","selectCurrentAncestors","entryFields","language","splitPath","entryGuid","previewEntry","findContentTypeMapping","items","log","onRouteLoaded","handleRequiresLoginSaga","entryMapper","do404","preventScrollTop","scroll","top","tree","e","stack","entrySys","currentEntryId","selectRouteEntryEntryId","currentEntryLang","selectRouteEntryLanguage","selectMappedEntry","mapRouteEntry","all","registerSagas","REGISTER_USER","registerSaga","REGISTER_USER_SUCCESS","redirectSaga","mappers","requestBody","fetch","Accept","body","ok","mappedResponse","responseBody","to","json","REGISTER_USER_FAILED","message","errorResponse","statusText","currentQs","queryParams","selectCurrentSearch","redirectUri","redirect_uri","redirect","setRoute","userSagas","loginSagas","featureSagas","rootSaga","subSagas","AppRoot","props","React","RouteLoader"],"mappings":"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"}