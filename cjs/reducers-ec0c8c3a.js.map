{"version":3,"file":"reducers-ec0c8c3a.js","sources":["../src/user/redux/types.js","../src/user/redux/reducers.ts"],"sourcesContent":["const ACTION_PREFIX = '@USER/';\r\nexport const VALIDATE_USER = `${ACTION_PREFIX}VALIDATE_USER`;\r\nexport const SET_AUTHENTICATION_STATE = `${ACTION_PREFIX}SET_AUTHENTICATION_STATE`;\r\nexport const LOGIN_USER = `${ACTION_PREFIX}LOGIN_USER`;\r\nexport const LOGIN_SUCCESSFUL = `${ACTION_PREFIX}LOGIN_SUCCESSFUL`;\r\nexport const LOGIN_FAILED = `${ACTION_PREFIX}LOGIN_FAILED`;\r\nexport const LOGOUT_USER = `${ACTION_PREFIX}LOGOUT_USER`;\r\nexport const REGISTER_USER = `${ACTION_PREFIX}REGISTER_USER`;\r\nexport const REGISTER_USER_SUCCESS = `${ACTION_PREFIX}REGISTER_USER_SUCCESS`;\r\nexport const REGISTER_USER_FAILED = `${ACTION_PREFIX}REGISTER_USER_FAILED`;\r\n\r\nexport const REQUEST_USER_PASSWORD_RESET = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET`;\r\nexport const RESET_USER_PASSWORD = `${ACTION_PREFIX}RESET_USER_PASSWORD`;\r\nexport const REQUEST_USER_PASSWORD_RESET_SENDING = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET_SENDING`;\r\nexport const REQUEST_USER_PASSWORD_RESET_SUCCESS = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET_SUCCESS`;\r\nexport const REQUEST_USER_PASSWORD_RESET_ERROR = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET_ERROR`;\r\nexport const RESET_USER_PASSWORD_SENDING = `${ACTION_PREFIX}RESET_USER_PASSWORD_SENDING`;\r\nexport const RESET_USER_PASSWORD_SUCCESS = `${ACTION_PREFIX}RESET_USER_PASSWORD_SUCCESS`;\r\nexport const RESET_USER_PASSWORD_ERROR = `${ACTION_PREFIX}RESET_USER_PASSWORD_ERROR`;\r\n\r\nexport const CHANGE_USER_PASSWORD = `${ACTION_PREFIX}CHANGE_USER_PASSWORD`;\r\nexport const CHANGE_USER_PASSWORD_SENDING = `${ACTION_PREFIX}CHANGE_USER_PASSWORD_SENDING`;\r\nexport const CHANGE_USER_PASSWORD_SUCCESS = `${ACTION_PREFIX}CHANGE_USER_PASSWORD_SUCCESS`;\r\nexport const CHANGE_USER_PASSWORD_ERROR = `${ACTION_PREFIX}CHANGE_USER_PASSWORD_ERROR`;\r\n","import { Draft, produce } from 'immer';\r\nimport {\r\n  REGISTER_USER,\r\n  REGISTER_USER_FAILED,\r\n  REGISTER_USER_SUCCESS,\r\n  SET_AUTHENTICATION_STATE,\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REQUEST_USER_PASSWORD_RESET_SENDING,\r\n  REQUEST_USER_PASSWORD_RESET_SUCCESS,\r\n  REQUEST_USER_PASSWORD_RESET_ERROR,\r\n  RESET_USER_PASSWORD_SENDING,\r\n  RESET_USER_PASSWORD_SUCCESS,\r\n  RESET_USER_PASSWORD_ERROR,\r\n  CHANGE_USER_PASSWORD_SENDING,\r\n  CHANGE_USER_PASSWORD_SUCCESS,\r\n  CHANGE_USER_PASSWORD_ERROR,\r\n} from './types';\r\n\r\nconst defaultAuthenticationState = {\r\n  authenticated: false,\r\n  authenticationError: false,\r\n  authenticationErrorMessage: null,\r\n  clientCredentials: null,\r\n  error: false,\r\n  errorMessage: null,\r\n  loading: false,\r\n};\r\n\r\nconst defaultPasswordResetRequestValues = {\r\n  isSending: false,\r\n  sent: false,\r\n  error: null,\r\n};\r\n\r\nconst defaultResetPasswordValues = {\r\n  isSending: false,\r\n  sent: false,\r\n  error: null,\r\n};\r\n\r\nconst defaultChangePasswordValues = {\r\n  isSending: false,\r\n  sent: false,\r\n  error: null,\r\n};\r\n\r\nexport const initialUserState = {\r\n  authenticationState: defaultAuthenticationState,\r\n  passwordResetRequest: defaultPasswordResetRequestValues,\r\n  resetPassword: defaultResetPasswordValues,\r\n  changePassword: defaultChangePasswordValues,\r\n  groups: [],\r\n};\r\n\r\nexport default produce((state: Draft<any>, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n    case LOGOUT_USER:\r\n    case SET_AUTHENTICATION_STATE: {\r\n      if (!action.authenticationState) {\r\n        action.authenticationState = defaultAuthenticationState;\r\n      }\r\n\r\n      const loading = action.type === LOGIN_USER;\r\n\r\n      const {\r\n        authenticationState: {\r\n          error = false,\r\n          errorMessage = null,\r\n          authenticated,\r\n          authenticationError = false,\r\n          authenticationErrorMessage = null,\r\n          clientCredentials = null,\r\n        },\r\n        user,\r\n      } = action;\r\n\r\n      if (user) {\r\n        user.name = `${user.firstName} ${user.lastName}`;\r\n        user.isZengentiStaff = user.email.includes('@zengenti.com');\r\n      }\r\n\r\n      state = {\r\n        ...initialUserState,\r\n        ...(user || state),\r\n        authenticationState: {\r\n          authenticated:\r\n            authenticated || state?.authenticationState?.authenticated,\r\n          authenticationError,\r\n          authenticationErrorMessage,\r\n          clientCredentials,\r\n          error,\r\n          errorMessage,\r\n          loading,\r\n        },\r\n      };\r\n      return;\r\n    }\r\n    // REGISTER_USER is the trigger to set the user.registration initial state\r\n    // and will set user.registration.loading to true\r\n    // REGISTER_USER_FAILED will unset user.registration.loading and will set\r\n    // the value in user.registration.error\r\n    // REGISTER_USER_SUCCESS will unset user.registration.loading and will\r\n    // set user.registration to the created user from the api response\r\n    case REGISTER_USER:\r\n    case REGISTER_USER_FAILED:\r\n    case REGISTER_USER_SUCCESS: {\r\n      const { error, user } = action;\r\n\r\n      // Set registration object from the supplied action.user\r\n      // so we can call these values back later\r\n      state.registration = user || state.registration || {};\r\n\r\n      // Set registration flags so the UI can track the status\r\n      state.registration.success = action.type === REGISTER_USER_SUCCESS;\r\n      state.registration.error = error || false;\r\n      state.registration.loading = action.type === REGISTER_USER;\r\n      return;\r\n    }\r\n    case REQUEST_USER_PASSWORD_RESET_SENDING:\r\n      return state.setIn(['passwordResetRequest', 'isSending'], true);\r\n    case REQUEST_USER_PASSWORD_RESET_SUCCESS:\r\n      return state\r\n        .setIn(['passwordResetRequest', 'isSending'], false)\r\n        .setIn(['passwordResetRequest', 'sent'], true);\r\n    case REQUEST_USER_PASSWORD_RESET_ERROR:\r\n      return state\r\n        .setIn(['passwordResetRequest', 'isSending'], false)\r\n        .setIn(['passwordResetRequest', 'error'], action.error);\r\n    case RESET_USER_PASSWORD_SENDING:\r\n      return state.setIn(['resetPassword', 'isSending'], true);\r\n    case RESET_USER_PASSWORD_SUCCESS:\r\n      return state\r\n        .setIn(['resetPassword', 'isSending'], false)\r\n        .setIn(['resetPassword', 'sent'], true);\r\n    case RESET_USER_PASSWORD_ERROR:\r\n      return state\r\n        .setIn(['changePassword', 'isSending'], false)\r\n        .setIn(['changePassword', 'error'], action.error);\r\n    case CHANGE_USER_PASSWORD_SENDING:\r\n      return state.setIn(['changePassword', 'isSending'], true);\r\n    case CHANGE_USER_PASSWORD_SUCCESS:\r\n      return state\r\n        .setIn(['changePassword', 'isSending'], false)\r\n        .setIn(['changePassword', 'sent'], true);\r\n    case CHANGE_USER_PASSWORD_ERROR:\r\n      return state\r\n        .setIn(['changePassword', 'isSending'], false)\r\n        .setIn(['changePassword', 'error'], action.error);\r\n    default:\r\n      return state;\r\n  }\r\n}, initialUserState);\r\n"],"names":["ACTION_PREFIX","VALIDATE_USER","SET_AUTHENTICATION_STATE","LOGIN_USER","LOGIN_SUCCESSFUL","LOGIN_FAILED","LOGOUT_USER","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","REQUEST_USER_PASSWORD_RESET","RESET_USER_PASSWORD","REQUEST_USER_PASSWORD_RESET_SENDING","REQUEST_USER_PASSWORD_RESET_SUCCESS","REQUEST_USER_PASSWORD_RESET_ERROR","RESET_USER_PASSWORD_SENDING","RESET_USER_PASSWORD_SUCCESS","RESET_USER_PASSWORD_ERROR","CHANGE_USER_PASSWORD","CHANGE_USER_PASSWORD_SENDING","CHANGE_USER_PASSWORD_SUCCESS","CHANGE_USER_PASSWORD_ERROR","defaultAuthenticationState","authenticated","authenticationError","authenticationErrorMessage","clientCredentials","error","errorMessage","loading","defaultPasswordResetRequestValues","isSending","sent","defaultResetPasswordValues","defaultChangePasswordValues","initialUserState","authenticationState","passwordResetRequest","resetPassword","changePassword","groups","produce","state","action","type","user","name","firstName","lastName","isZengentiStaff","email","includes","registration","success","setIn"],"mappings":"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"}