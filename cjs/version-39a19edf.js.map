{"version":3,"file":"version-39a19edf.js","sources":["../src/redux/types/navigation.js","../src/redux/reducers/navigation.js","../src/routing/redux/reducers.js","../src/redux/types/version.js","../src/redux/reducers/version.js","../src/redux/store/routerMiddleware.js","../src/redux/store/store.js","../src/redux/selectors/navigation.js","../src/redux/actions/version.js"],"sourcesContent":["const ACTION_PREFIX = '@NAVIGATION/';\nexport const GET_NODE_TREE = `${ACTION_PREFIX}_GET_NODE_TREE`;\nexport const SET_NODE_TREE = `${ACTION_PREFIX}_SET_NODE_TREE`;\nexport const GET_NODE_TREE_ERROR = `${ACTION_PREFIX}_GET_NODE_TREE_ERROR`;\n","import { Map, fromJS, List } from 'immutable';\n\nimport { SET_NODE_TREE, GET_NODE_TREE_ERROR } from '~/redux/types/navigation';\n\nconst initialState = Map({\n  root: null,\n  treeDepends: new List([]),\n  isError: false,\n  isReady: false,\n});\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_NODE_TREE: {\n      return state.set('root', fromJS(action.nodes)).set('isReady', true);\n    }\n    case GET_NODE_TREE_ERROR: {\n      return state.set('isError', true);\n    }\n    default:\n      return state;\n  }\n};\n","import { OrderedMap, fromJS, List, Set } from 'immutable';\nimport {\n  SET_ENTRY,\n  SET_NAVIGATION_PATH,\n  SET_ANCESTORS,\n  SET_TARGET_PROJECT,\n  SET_ROUTE,\n  SET_SIBLINGS,\n  SET_SURROGATE_KEYS,\n  UPDATE_LOADING_STATE,\n} from './types';\n\nlet initialState = OrderedMap({\n  currentHostname: null,\n  contentTypeId: null,\n  currentPath: '/',\n  currentNode: OrderedMap(),\n  currentNodeAncestors: List(),\n  currentProject: 'unknown',\n  entryID: null,\n  entry: null,\n  currentTreeId: null,\n  entryDepends: List(),\n  error: undefined,\n  isError: false,\n  isLoading: false,\n  location: OrderedMap(),\n  mappedEntry: null,\n  nodeDepends: List(),\n  notFound: false,\n  staticRoute: null,\n  statusCode: 200,\n});\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ANCESTORS: {\n      if (action.ancestors) {\n        return state.set('currentNodeAncestors', fromJS(action.ancestors));\n      }\n      return state.set('currentNodeAncestors', fromJS(action.ancestors));\n    }\n    case SET_ENTRY: {\n      const {\n        entry,\n        error,\n        mappedEntry,\n        node = {},\n        isError = false,\n        isLoading = false,\n        notFound = false,\n        statusCode,\n      } = action;\n\n      let defaultStatus = 200;\n      if (notFound === true && isError === false) defaultStatus = 404;\n      else if (isError === true) defaultStatus = statusCode || 500;\n\n      let nextState;\n\n      if (!entry) {\n        nextState = state\n          .set('entryID', null)\n          .set('entry', null)\n          .set('error', fromJS(error))\n          .set('mappedEntry', null)\n          .set('isError', isError)\n          .set('isLoading', isLoading)\n          .set('notFound', notFound)\n          .set('statusCode', statusCode || defaultStatus);\n      } else {\n        nextState = state\n          .set('entryID', action.id)\n          .set('entry', fromJS(entry))\n          .set('error', fromJS(error))\n          .set('isError', isError)\n          .set('isLoading', isLoading)\n          .set('notFound', notFound)\n          .set('statusCode', statusCode || defaultStatus);\n\n        if (mappedEntry && Object.keys(mappedEntry).length > 0)\n          nextState = nextState\n            .set('mappedEntry', fromJS(mappedEntry))\n            .set('entry', fromJS({ sys: entry.sys }));\n      }\n\n      if (!node) {\n        return nextState.set('nodeDepends', null).set('currentNode', null);\n      } else {\n        // On Set Node, we reset all dependants.\n        return nextState\n          .set('currentNode', fromJS(node))\n          .removeIn(['currentNode', 'entry']); // We have the entry stored elsewhere, so lets not keep it twice.\n      }\n    }\n    case UPDATE_LOADING_STATE: {\n      return state.set('isLoading', action.isLoading);\n    }\n    case SET_NAVIGATION_PATH: {\n      let staticRoute = false;\n      if (action.staticRoute) {\n        staticRoute = { ...action.staticRoute };\n      }\n      if (action.path) {\n        // Don't run a path update on initial load as we allready should have it in redux\n        const entryUri = state.getIn(['entry', 'sys', 'uri']);\n        if (entryUri != action.path) {\n          return state\n            .set('currentPath', fromJS(action.path))\n            .set('location', fromJS(action.location))\n            .set(\n              'staticRoute',\n              fromJS({\n                ...staticRoute,\n                route: { ...staticRoute.route, component: null },\n              })\n            )\n            .set('isLoading', typeof window !== 'undefined');\n        } else {\n          return state.set('location', fromJS(action.location)).set(\n            'staticRoute',\n            fromJS({\n              ...staticRoute,\n              route: { ...staticRoute.route, component: null },\n            })\n          );\n        }\n      }\n      return state;\n    }\n    case SET_ROUTE: {\n      return state.set('nextPath', action.path);\n    }\n    case SET_SIBLINGS: {\n      // Can be null in some cases like the homepage.\n      let currentNodeSiblingParent = null;\n      let siblingIDs = [];\n      if (action.siblings && action.siblings.length > 0) {\n        currentNodeSiblingParent = action.siblings[0].parentId;\n        siblingIDs = action.siblings.map(node => {\n          return node.id;\n        });\n      }\n      let currentNodeDepends = state.get('nodeDepends');\n      const allNodeDepends = Set.union([Set(siblingIDs), currentNodeDepends]);\n      return state\n        .set('nodeDepends', allNodeDepends)\n        .set('currentNodeSiblings', fromJS(action.siblings))\n        .set('currentNodeSiblingsParent', currentNodeSiblingParent);\n    }\n    case SET_SURROGATE_KEYS: {\n      return state.set('surrogateKeys', action.keys);\n    }\n    case SET_TARGET_PROJECT: {\n      return state\n        .set('currentProject', action.project)\n        .set('currentTreeId', '') //getTreeID(action.project))\n        .set('allowedGroups', fromJS(action.allowedGroups))\n        .set('currentHostname', action.hostname);\n    }\n    default:\n      return state;\n  }\n};\n","const VERSION_PREFIX = '@VERSION/';\nexport const SET_VERSION = `${VERSION_PREFIX}SET_VERSION`;\nexport const SET_VERSION_STATUS = `${VERSION_PREFIX}SET_VERSION_STATUS`;\n","import { Map } from 'immutable';\nimport { SET_VERSION, SET_VERSION_STATUS } from '~/redux/types/version';\n\nlet initialState = Map({\n  commitRef: null,\n  buildNo: null,\n  contensisVersionStatus: 'published',\n});\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_VERSION_STATUS: {\n      return state.set('contensisVersionStatus', action.status);\n    }\n    case SET_VERSION: {\n      return state\n        .set('commitRef', action.commitRef)\n        .set('buildNo', action.buildNo);\n    }\n    default:\n      return state;\n  }\n};\n","/**\n * This middleware captures 'CALL_HISTORY_METHOD' actions to redirect to the\n * provided history object. This will prevent these actions from reaching your\n * reducer or any middleware that comes after this one.\n */\n/* eslint-disable no-unused-vars */\nconst routerMiddleware = history => store => next => action => {\n  if (action.type !== 'CALL_HISTORY_METHOD') {\n    return next(action);\n  }\n\n  const {\n    payload: { method, args },\n  } = action;\n  history[method](...args);\n};\n\nexport default routerMiddleware;\n","import { compose, createStore, applyMiddleware } from 'redux';\nimport { combineReducers } from 'redux-immutable';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware, { END } from 'redux-saga';\n\n// Core reducers\nimport NavigationReducer from '../reducers/navigation';\nimport RoutingReducer from '~/routing/redux/reducers';\nimport UserReducer from '~/user/redux/reducers';\nimport VersionReducer from '../reducers/version';\nimport routerMiddleware from './routerMiddleware';\n\nexport let reduxStore = null;\n\nexport default (featureReducers, initialState, history) => {\n  const thunkMiddleware = [thunk];\n\n  let reduxDevToolsMiddleware = f => f;\n\n  if (typeof window != 'undefined') {\n    reduxDevToolsMiddleware = window.__REDUX_DEVTOOLS_EXTENSION__\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\n      : f => f;\n  }\n\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = compose(\n    applyMiddleware(\n      ...thunkMiddleware,\n      sagaMiddleware,\n      routerMiddleware(history)\n    ),\n    reduxDevToolsMiddleware\n  );\n\n  let reducers = {\n    navigation: NavigationReducer,\n    routing: RoutingReducer,\n    user: UserReducer,\n    version: VersionReducer,\n    ...featureReducers,\n  };\n\n  const combinedReducers = combineReducers(reducers);\n\n  const store = initialState => {\n    const store = createStore(combinedReducers, initialState, middleware);\n    store.runSaga = sagaMiddleware.run;\n    store.close = () => store.dispatch(END);\n    return store;\n  };\n\n  reduxStore = store(initialState);\n  return reduxStore;\n};\n","export const hasNavigationTree = state => {\n  return state.getIn(['navigation', 'isReady']);\n};\n\nexport const selectNavigationRoot = state => {\n  return state.getIn(['navigation', 'root']);\n};\n\nexport const selectNavigationDepends = state => {\n  return state.getIn(['navigation', 'treeDepends']);\n};\n","import { action } from '../util';\nimport { SET_VERSION, SET_VERSION_STATUS } from '../types/version';\n\nexport const setVersion = (commitRef, buildNo) =>\n  action(SET_VERSION, { commitRef, buildNo });\n\nexport const setVersionStatus = status =>\n  action(SET_VERSION_STATUS, { status });\n"],"names":["ACTION_PREFIX","GET_NODE_TREE","SET_NODE_TREE","GET_NODE_TREE_ERROR","initialState","Map","root","treeDepends","List","isError","isReady","state","action","type","set","fromJS","nodes","OrderedMap","currentHostname","contentTypeId","currentPath","currentNode","currentNodeAncestors","currentProject","entryID","entry","currentTreeId","entryDepends","error","undefined","isLoading","location","mappedEntry","nodeDepends","notFound","staticRoute","statusCode","SET_ANCESTORS","ancestors","SET_ENTRY","node","defaultStatus","nextState","id","Object","keys","length","sys","removeIn","UPDATE_LOADING_STATE","SET_NAVIGATION_PATH","path","entryUri","getIn","route","component","window","SET_ROUTE","SET_SIBLINGS","currentNodeSiblingParent","siblingIDs","siblings","parentId","map","currentNodeDepends","get","allNodeDepends","Set","union","SET_SURROGATE_KEYS","SET_TARGET_PROJECT","project","allowedGroups","hostname","VERSION_PREFIX","SET_VERSION","SET_VERSION_STATUS","commitRef","buildNo","contensisVersionStatus","status","routerMiddleware","history","store","next","payload","method","args","reduxStore","featureReducers","thunkMiddleware","thunk","reduxDevToolsMiddleware","f","__REDUX_DEVTOOLS_EXTENSION__","sagaMiddleware","createSagaMiddleware","middleware","compose","applyMiddleware","reducers","navigation","NavigationReducer","routing","RoutingReducer","user","UserReducer","version","VersionReducer","combinedReducers","combineReducers","createStore","runSaga","run","close","dispatch","END","hasNavigationTree","selectNavigationRoot","selectNavigationDepends","setVersion","setVersionStatus"],"mappings":"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"}