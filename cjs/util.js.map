{"version":3,"file":"util.js","sources":["../src/server/util/setCachingHeaders.js","../src/app/core/util/stringifyStrings.js","../src/app/core/util/urls.js","../src/app/core/util/json-mapper.js"],"sourcesContent":["const setCachingHeaders = (\n  response,\n  { cacheControl = 'private', surrogateControl = '3600' },\n  method = 'header'\n) => {\n  if (cacheControl) response[method]('Cache-Control', cacheControl);\n  if (surrogateControl)\n    response[method](\n      'Surrogate-Control',\n      `max-age=${surrogateControl.toString()}`\n    );\n};\n\nmodule.exports = setCachingHeaders;\n","const stringifyStrings = obj => {\n  const returnObj = Array.isArray(obj) ? [] : {};\n  Object.entries(obj).forEach(([key, value]) => {\n    switch (typeof value) {\n      case 'string':\n        returnObj[key] = JSON.stringify(value);\n        break;\n      case 'object':\n        returnObj[key] = stringifyStrings(value);\n        break;\n      default:\n        returnObj[key] = value;\n        break;\n    }\n  });\n  return returnObj;\n};\n\nmodule.exports = stringifyStrings;\n","const url = (alias, project) => {\n  const projectAndAlias =\n    project && project.toLowerCase() != 'website'\n      ? `${project.toLowerCase()}-${alias}`\n      : alias;\n  return {\n    cms: `https://cms-${alias}.cloud.contensis.com`,\n    liveWeb: `https://live-${projectAndAlias}.cloud.contensis.com`,\n    previewWeb: `https://preview-${projectAndAlias}.cloud.contensis.com`,\n    iisWeb: `https://iis-live-${projectAndAlias}.cloud.contensis.com`,\n    iisPreviewWeb: `https://iis-preview-${projectAndAlias}.cloud.contensis.com`,\n  };\n};\n\nmodule.exports = url;\n","import mapJson, { jpath } from 'jsonpath-mapper';\nexport { default as mapJson, jpath } from 'jsonpath-mapper';\n\n/**\n *\n * @param {object} json The source object we wish to transform\n * @param {object} template The mapping template we wish to apply to the source\n * object to generate the intended target object\n */\nexport const useMapper = (json, template) => {\n  return template ? mapJson(json || {}, template) : json;\n};\n\nconst chooseMapperByFieldValue = (\n  entry,\n  mappers,\n  field = 'sys.contentTypeId'\n) => {\n  const fieldValue = jpath(field, entry || {});\n  return mappers[fieldValue] || mappers['default'] || {};\n};\n\n/**\n * useEntriesMapper hook to take a list of entries from Delivery API along\n * with mappers for each contentTypeId and return an array of mapped objects\n * @param {any} entry The source entry we wish to transform\n * @param {object} mappers Object with keys containing mapper templates,\n * the key name matching sys.contentTypeId\n * @param {string} field Only include if we need to match content based on\n * a field other than sys.contentTypeId in the source data\n * @returns {object} Object transformed using a matched content type or\n * a default mapper template, returns an empty object if no mapper template\n * couild be applied.\n */\nexport const useEntriesMapper = (\n  entry,\n  mappers,\n  field = 'sys.contentTypeId'\n) => {\n  const mapper = chooseMapperByFieldValue(entry, mappers, field);\n  return useMapper(entry || {}, mapper);\n};\n\n/**\n * Deprecated: due to misleading name, use the hook useEntriesMapper instead\n */\nexport const useEntryMapper = useEntriesMapper;\n\n/**\n * mapEntries mapping function to take a list of entries from Delivery API along\n * with mappers for each contentTypeId and return an array of mapped objects\n * @param {any} entry The source entry we wish to transform\n * @param {object} mappers Object with keys containing mapper templates,\n * the key name matching sys.contentTypeId\n * @param {string} field Only include if we need to match content based on\n * a field other than sys.contentTypeId in the source data\n * @returns {object} Object transformed using a matched content type or\n * a default mapper template, returns an empty object if no mapper template\n * couild be applied.\n */\nexport const mapEntries = (entries, mappers, field = 'sys.contentTypeId') =>\n  entries.map(entry => {\n    const mapper = chooseMapperByFieldValue(entry, mappers, field);\n    return mapper ? mapJson(entry || {}, mapper) : entry;\n  });\n\n/**\n * mapComposer mapping function to take a composer field from Delivery API along\n * with mappers for each Composer Item \"type\" and return an array of mapped components\n * @param {array} composer Composer field array of Composer Items\n * @param {object} mappers A keyed object with each key matching the Composer Item \"type\"\n * @returns {array} Array of mapped objects transformed using a matched Composer Item \"type\" mapping\n * or null. Injects a \"_type\" property into each transformed object in the array to indicate\n * where the mapping originated and for what component the mapped object is representing\n */\nexport const mapComposer = (composer, mappers) =>\n  Array.isArray(composer)\n    ? composer.map(composerItem => {\n        const fieldValue = composerItem.type;\n        const mapper = mappers[fieldValue] || mappers['default'];\n        return mapper\n          ? { _type: fieldValue, ...mapJson(composerItem.value || {}, mapper) }\n          : composerItem;\n      })\n    : null;\n\n/**\n * useComposerMapper hook to take a composer field from Delivery API along\n * with mappers for each Composer Item \"type\" and return an array of mapped components\n * @param {array} composer Composer field array of Composer Items\n * @param {object} mappers A keyed object with each key matching the Composer Item \"type\"\n * @returns {array} Array of mapped objects transformed using a matched Composer Item \"type\" mapping\n * or null. Injects a \"_type\" property into each transformed object in the array to indicate\n * where the mapping originated and for what component the mapped object is representing\n */\nexport const useComposerMapper = (composer = [], mappers = {}) =>\n  mapComposer(composer, mappers);\n\nexport default mapJson;\n"],"names":["setCachingHeaders","response","cacheControl","surrogateControl","method","toString","stringifyStrings","obj","returnObj","Array","isArray","Object","entries","forEach","key","value","JSON","stringify","url","alias","project","projectAndAlias","toLowerCase","cms","liveWeb","previewWeb","iisWeb","iisPreviewWeb","useMapper","json","template","mapJson","chooseMapperByFieldValue","entry","mappers","field","fieldValue","jpath","useEntriesMapper","mapper","useEntryMapper","mapEntries","map","mapComposer","composer","composerItem","type","_type","useComposerMapper"],"mappings":"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"}