{"version":3,"file":"App-94c1e782.js","sources":["../src/app/core/redux/history.js","../src/app/core/util/pickProject.js","../src/app/core/redux/reducers/routing.js","../src/app/core/redux/reducers/version.js","../src/app/core/redux/reducers/navigation.js","../src/app/core/redux/routerMiddleware.js","../src/app/core/redux/store.js","../src/app/core/util/ContensisDeliveryApi.js","../src/app/core/schema.js","../src/app/core/search/expressions.js","../src/app/core/redux/sagas/queries.js","../src/app/core/redux/sagas/routing.js","../src/app/core/redux/sagas/navigation.js","../src/app/core/redux/sagas/index.js","../src/app/App.js"],"sourcesContent":["import { createBrowserHistory, createMemoryHistory } from 'history';\r\n\r\n// Create a history depending on the environment\r\nconst selectedHistory =\r\n  typeof window !== 'undefined' ? createBrowserHistory : createMemoryHistory;\r\n\r\nexport const history = (options = {}) => selectedHistory(options);\r\nexport const browserHistory = selectedHistory();\r\n","const servers = SERVERS; /* global SERVERS */\r\nconst alias = servers.alias.toLowerCase();\r\nconst publicUri = PUBLIC_URI; /* global PUBLIC_URI */\r\nconst projects = PROJECTS; /* global PROJECTS */\r\n\r\n// return a projectId via the request hostname\r\nconst pickProject = (hostname, query) => {\r\n  // if localhost we can only infer via a querystring, and take your word for it\r\n  if (hostname == 'localhost') {\r\n    return (query && query.p) || projects[0].id;\r\n  }\r\n\r\n  // if hostname is the actual public uri we can return the first project from the list\r\n  if (hostname == publicUri) {\r\n    return projects[0].id;\r\n  }\r\n\r\n  let project = 'unknown';\r\n\r\n  // // go through all the defined projects\r\n  // Object.entries(projects).map(([, p]) => {\r\n  const p = projects[0];\r\n\r\n  // check if we're accessing via the project's public uri\r\n  if (hostname.includes(p.publicUri)) project = p.id;\r\n\r\n  // the url structure is different for website (we don't prefix)\r\n  if (p.id.startsWith('website')) {\r\n    // check for internal and external hostnames\r\n    // we check live and preview distinctly so our rule does not clash with\r\n    // hostnames that use a project prefix\r\n    if (\r\n      hostname.includes(`live-${alias}.cloud.contensis.com`) ||\r\n      hostname.includes(`live.${alias}.contensis.cloud`) ||\r\n      hostname.includes(`preview-${alias}.cloud.contensis.com`) ||\r\n      hostname.includes(`preview.${alias}.contensis.cloud`)\r\n    )\r\n      project = p.id;\r\n  } else {\r\n    // check for internal and external hostnames, prefixed with the projectId\r\n    if (\r\n      hostname.includes(`${p.id.toLowerCase()}-${alias}.cloud.contensis.com`) ||\r\n      hostname.includes(`${p.id.toLowerCase()}.${alias}.contensis.cloud`)\r\n    )\r\n      project = p.id;\r\n  }\r\n  // });\r\n  return project === 'unknown' ? p.id : project;\r\n};\r\n\r\nexport default pickProject;\r\n","import { Map, fromJS, List, Set } from 'immutable';\r\nimport {\r\n  // SET_ENTRY_ID,\r\n  // SET_NAVIGATION_NOT_FOUND,\r\n  // SET_NODE,\r\n  SET_ENTRY,\r\n  SET_NAVIGATION_PATH,\r\n  SET_ANCESTORS,\r\n  SET_TARGET_PROJECT,\r\n  SET_ROUTE,\r\n  SET_SIBLINGS,\r\n  MAP_ENTRY,\r\n  SET_SURROGATE_KEYS,\r\n} from '~/core/redux/types/routing';\r\nimport { GetAllResponseGuids } from '~/core/util/ContensisDeliveryApi';\r\n\r\nlet initialState = Map({\r\n  currentPath: '/',\r\n  currentNode: [],\r\n  currentProject: 'unknown',\r\n  notFound: false,\r\n  entryID: null,\r\n  entry: null,\r\n  entryDepends: new List(),\r\n  contentTypeId: null,\r\n  currentNodeAncestors: new List(),\r\n  currentTreeId: null,\r\n});\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case MAP_ENTRY: {\r\n      return state.set('mappedEntry', fromJS(action.mappedEntry));\r\n    }\r\n    case SET_ANCESTORS: {\r\n      if (action.ancestors) {\r\n        let ancestorIDs = action.ancestors.map(node => {\r\n          return node.id;\r\n        });\r\n\r\n        let currentNodeDepends = state.get('nodeDepends');\r\n        const allNodeDepends = Set.union([\r\n          Set(ancestorIDs),\r\n          currentNodeDepends,\r\n        ]);\r\n        return state\r\n          .set('nodeDepends', allNodeDepends)\r\n          .set('currentNodeAncestors', fromJS(action.ancestors));\r\n      }\r\n      return state.set('currentNodeAncestors', fromJS(action.ancestors));\r\n    }\r\n    case SET_ENTRY: {\r\n      const { entry, node = {}, isLoading = false } = action;\r\n      let nextState;\r\n\r\n      if (!entry) {\r\n        nextState = state\r\n          .set('entryID', null)\r\n          .set('entryDepends', null)\r\n          .set('entry', null)\r\n          .set('mappedEntry', null)\r\n          .set('isLoading', isLoading);\r\n      } else {\r\n        const entryDepends = GetAllResponseGuids(entry);\r\n        nextState = state\r\n          .set('entryID', action.id)\r\n          .set('entryDepends', fromJS(entryDepends))\r\n          .set('entry', fromJS(entry))\r\n          .set('isLoading', isLoading);\r\n      }\r\n\r\n      if (!node) {\r\n        return nextState.set('nodeDepends', null).set('currentNode', null);\r\n      } else {\r\n        // On Set Node, we reset all dependants.\r\n        const nodeDepends = Set([node.id]);\r\n        return nextState\r\n          .set('nodeDepends', nodeDepends)\r\n          .set('currentNode', fromJS(node))\r\n          .removeIn(['currentNode', 'entry']); // We have the entry stored elsewhere, so lets not keep it twice.\r\n      }\r\n    }\r\n    // case SET_ENTRY_ID: {\r\n    //   if (action.id === '') {\r\n    //     return state;\r\n    //   }\r\n    //   return state.set('entryID', action.id);\r\n    // }\r\n    case SET_NAVIGATION_PATH: {\r\n      let staticRoute = false;\r\n      if (action.staticRoute) {\r\n        staticRoute = { ...action.staticRoute };\r\n      }\r\n      if (action.path) {\r\n        // Don't run a path update on iniutial load as we allready should have it in redux\r\n        const entryUri = state.getIn(['entry', 'sys', 'uri']);\r\n        if (entryUri != action.path) {\r\n          return state\r\n            .set('currentPath', fromJS(action.path))\r\n            .set('location', fromJS(action.location))\r\n            .set(\r\n              'staticRoute',\r\n              fromJS({\r\n                ...staticRoute,\r\n                route: { ...staticRoute.route, component: null },\r\n              })\r\n            )\r\n            .set('isLoading', typeof window !== 'undefined');\r\n        } else {\r\n          return state.set('location', fromJS(action.location)).set(\r\n            'staticRoute',\r\n            fromJS({\r\n              ...staticRoute,\r\n              route: { ...staticRoute.route, component: null },\r\n            })\r\n          );\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n    // case SET_NAVIGATION_NOT_FOUND: {\r\n    //   return state\r\n    //     .set('notFound', fromJS(action.notFound))\r\n    //     .set('isLoading', false);\r\n    // }\r\n    // case SET_NODE: {\r\n    //   const { node } = action;\r\n    //   if (!node) return state;\r\n    //   // On Set Node, we reset all dependants.\r\n    //   const nodeDepends = Set([node.id]);\r\n    //   return state\r\n    //     .set('nodeDepends', nodeDepends)\r\n    //     .set('currentNode', fromJS(action.node))\r\n    //     .removeIn(['currentNode', 'entry']); // We have the entry stored elsewhere, so lets not keep it twice.\r\n    // }\r\n    case SET_ROUTE: {\r\n      return state.set('nextPath', action.path);\r\n    }\r\n    case SET_SIBLINGS: {\r\n      // Can be null in some cases like the homepage.\r\n      let currentNodeSiblingParent = null;\r\n      let siblingIDs = [];\r\n      if (action.siblings && action.siblings.length > 0) {\r\n        currentNodeSiblingParent = action.siblings[0].parentId;\r\n        siblingIDs = action.siblings.map(node => {\r\n          return node.id;\r\n        });\r\n      }\r\n      let currentNodeDepends = state.get('nodeDepends');\r\n      const allNodeDepends = Set.union([Set(siblingIDs), currentNodeDepends]);\r\n      return state\r\n        .set('nodeDepends', allNodeDepends)\r\n        .set('currentNodeSiblings', fromJS(action.siblings))\r\n        .set('currentNodeSiblingsParent', currentNodeSiblingParent);\r\n    }\r\n    case SET_SURROGATE_KEYS: {\r\n      return state.set('surrogateKeys', action.keys);\r\n    }\r\n    case SET_TARGET_PROJECT: {\r\n      return state\r\n        .set('currentProject', action.project)\r\n        .set('currentTreeId', '') //getTreeID(action.project))\r\n        .set('allowedGroups', fromJS(action.allowedGroups));\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Map } from 'immutable';\r\nimport { SET_VERSION, SET_VERSION_STATUS } from '~/core/redux/types/version';\r\n\r\nlet initialState = Map({\r\n  commitRef: null,\r\n  buildNo: null,\r\n  contensisVersionStatus: 'published',\r\n});\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_VERSION_STATUS: {\r\n      return state.set('contensisVersionStatus', action.status);\r\n    }\r\n    case SET_VERSION: {\r\n      return state\r\n        .set('commitRef', action.commitRef)\r\n        .set('buildNo', action.buildNo);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Map, fromJS, List } from 'immutable';\r\n\r\nimport {\r\n  SET_NODE_TREE,\r\n  GET_NODE_TREE_ERROR,\r\n} from '~/core/redux/types/navigation';\r\n\r\nconst initialState = Map({\r\n  root: null,\r\n  treeDepends: new List([]),\r\n  isError: false,\r\n  isReady: false,\r\n});\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_NODE_TREE: {\r\n      return state.set('root', fromJS(action.nodes)).set('isReady', true);\r\n    }\r\n    case GET_NODE_TREE_ERROR: {\r\n      return state.set('isError', true);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { CALL_HISTORY_METHOD } from '~/core/redux/types/routing';\r\n\r\n/**\r\n * This middleware captures CALL_HISTORY_METHOD actions to redirect to the\r\n * provided history object. This will prevent these actions from reaching your\r\n * reducer or any middleware that comes after this one.\r\n */\r\n/* eslint-disable no-unused-vars */\r\nconst routerMiddleware = history => store => next => action => {\r\n  if (action.type !== CALL_HISTORY_METHOD) {\r\n    return next(action);\r\n  }\r\n\r\n  const {\r\n    payload: { method, args },\r\n  } = action;\r\n  history[method](...args);\r\n};\r\n\r\nexport default routerMiddleware;\r\n","import { compose, createStore, applyMiddleware } from 'redux';\r\nimport { combineReducers } from 'redux-immutable';\r\nimport thunk from 'redux-thunk';\r\nimport createSagaMiddleware, { END } from 'redux-saga';\r\n\r\n// Core reducers\r\nimport RoutingReducer from './reducers/routing';\r\nimport VersionReducer from './reducers/version';\r\nimport NavigationReducer from './reducers/navigation';\r\nimport routerMiddleware from './routerMiddleware';\r\n\r\nexport let reduxStore = null;\r\n\r\nexport default (featureReducers, initialState, history) => {\r\n  const thunkMiddleware = [thunk];\r\n\r\n  let reduxDevToolsMiddleware = f => f;\r\n\r\n  if (typeof window != 'undefined') {\r\n    reduxDevToolsMiddleware = window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : f => f;\r\n  }\r\n\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middleware = compose(\r\n    applyMiddleware(\r\n      ...thunkMiddleware,\r\n      sagaMiddleware,\r\n      routerMiddleware(history)\r\n    ),\r\n    reduxDevToolsMiddleware\r\n  );\r\n\r\n  let reducers = {\r\n    navigation: NavigationReducer,\r\n    routing: RoutingReducer,\r\n    version: VersionReducer,\r\n    ...featureReducers,\r\n  };\r\n\r\n  const combinedReducers = combineReducers(reducers);\r\n\r\n  const store = initialState => {\r\n    const store = createStore(combinedReducers, initialState, middleware);\r\n    store.runSaga = sagaMiddleware.run;\r\n    store.close = () => store.dispatch(END);\r\n    return store;\r\n  };\r\n\r\n  reduxStore = store(initialState);\r\n  return reduxStore;\r\n};\r\n","import { Client } from 'contensis-delivery-api';\r\nimport { setSurrogateKeys } from '../redux/actions/routing';\r\nimport { reduxStore } from '../redux/store';\r\n\r\nconst storeSurrogateKeys = response => {\r\n  const keys = response.headers.get\r\n    ? response.headers.get('surrogate-key')\r\n    : response.headers.map['surrogate-key'];\r\n  if (keys) reduxStore.dispatch(setSurrogateKeys(keys));\r\n};\r\n\r\nconst getClientConfig = project => {\r\n  let config = DELIVERY_API_CONFIG; /* global DELIVERY_API_CONFIG */\r\n  config.responseHandler = {};\r\n\r\n  if (project) {\r\n    config.projectId = project;\r\n  }\r\n\r\n  // // we only want the surrogate key header in a server context\r\n  if (typeof window === 'undefined') {\r\n    config.defaultHeaders = {\r\n      'x-require-surrogate-key': true,\r\n    };\r\n    config.responseHandler[200] = storeSurrogateKeys;\r\n  }\r\n\r\n  if (\r\n    typeof window !== 'undefined' &&\r\n    PROXY_DELIVERY_API /* global PROXY_DELIVERY_API */\r\n  ) {\r\n    // ensure a relative url is used to bypass the need for CORS (separate OPTIONS calls)\r\n    config.rootUrl = '';\r\n    config.responseHandler[404] = () => null;\r\n  }\r\n  return config;\r\n};\r\n\r\nexport * from 'contensis-delivery-api';\r\n\r\nexport const GetResponseGuids = object => {\r\n  let Ids = [];\r\n  Object.keys(object).some(function(k) {\r\n    if (k === 'sys') {\r\n      //Should always have an ID, but lets check...\r\n      if (object[k].id && object[k].language) {\r\n        // We can exclude assets here i think... ?\r\n        if (object[k].dataFormat) {\r\n          if (object[k].dataFormat !== 'asset') {\r\n            Ids.push(`${object[k].id}_${object[k].language.toLowerCase()}`);\r\n          }\r\n        } else {\r\n          // If we don't have a dataformat add it anyhow, for safety\r\n          Ids.push(`${object[k].id}_${object[k].language.toLowerCase()}`);\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n    if (object[k] && typeof object[k] === 'object') {\r\n      let subIds = GetResponseGuids(object[k]);\r\n      if (subIds.length > 0) {\r\n        Ids.push(...subIds);\r\n      }\r\n      return false;\r\n    }\r\n  });\r\n  return Ids;\r\n};\r\n\r\nexport const GetAllResponseGuids = object => {\r\n  if (!object) return [];\r\n  let returnItems = GetResponseGuids(object);\r\n  let unique = new Set(returnItems);\r\n  return unique;\r\n};\r\nclass DeliveryApi {\r\n  getClientSideVersionStatus = () => {\r\n    if (typeof window != 'undefined') {\r\n      const currentHostname = window.location.hostname;\r\n      return this.getVersionStatusFromHostname(currentHostname);\r\n    }\r\n    return null;\r\n  };\r\n  getVersionStatusFromHostname = currentHostname => {\r\n    if (currentHostname.indexOf('localhost') > -1) return 'latest';\r\n\r\n    if (currentHostname.endsWith('contensis.cloud')) {\r\n      if (currentHostname.indexOf('preview.') > -1) {\r\n        return 'latest';\r\n      } else {\r\n        return 'published';\r\n      }\r\n    }\r\n\r\n    if (currentHostname.endsWith('cloud.contensis.com')) {\r\n      if (currentHostname.indexOf('preview-') > -1) {\r\n        return 'latest';\r\n      } else {\r\n        return 'published';\r\n      }\r\n    }\r\n\r\n    return 'published';\r\n  };\r\n  search = (query, linkDepth, project, env) => {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return client.entries.search(\r\n      query,\r\n      typeof linkDepth !== 'undefined' ? linkDepth : 1\r\n    );\r\n  };\r\n  getClient = (deliveryApiStatus = 'published', project, env) => {\r\n    const baseConfig = getClientConfig(project, env);\r\n    baseConfig.versionStatus = deliveryApiStatus;\r\n    return Client.create(baseConfig);\r\n  };\r\n  getEntry = (\r\n    id,\r\n    linkDepth = 0,\r\n    deliveryApiStatus = 'published',\r\n    project,\r\n    env\r\n  ) => {\r\n    const baseConfig = getClientConfig(project, env);\r\n    baseConfig.versionStatus = deliveryApiStatus;\r\n    const client = Client.create(baseConfig);\r\n    // return client.entries.get(id, linkDepth);\r\n    return client.entries.get({ id, linkDepth });\r\n  };\r\n}\r\n\r\nexport const deliveryApi = new DeliveryApi();\r\n\r\nclass CacheNode {\r\n  constructor(key, value) {\r\n    this.key = key;\r\n    this.value = value;\r\n    this.next = null;\r\n    this.prev = null;\r\n  }\r\n}\r\n\r\nclass LruCache {\r\n  constructor(limit = 100) {\r\n    this.map = {};\r\n    this.head = null;\r\n    this.tail = null;\r\n    this.limit = limit || 100;\r\n    this.size = 0;\r\n  }\r\n\r\n  get(key) {\r\n    if (this.map[key]) {\r\n      let value = this.map[key].value;\r\n      let node = new CacheNode(key, value);\r\n      this.remove(key);\r\n      this.setHead(node);\r\n      return value;\r\n    }\r\n  }\r\n\r\n  set(key, value) {\r\n    let node = new CacheNode(key, value);\r\n    if (this.map[key]) {\r\n      this.remove(key);\r\n    } else {\r\n      if (this.size >= this.limit) {\r\n        delete this.map[this.tail.key];\r\n        this.size--;\r\n        this.tail = this.tail.prev;\r\n        this.tail.next = null;\r\n      }\r\n    }\r\n    this.setHead(node);\r\n  }\r\n\r\n  setHead(node) {\r\n    node.next = this.head;\r\n    node.prev = null;\r\n    if (this.head) {\r\n      this.head.prev = node;\r\n    }\r\n    this.head = node;\r\n    if (!this.tail) {\r\n      this.tail = node;\r\n    }\r\n    this.size++;\r\n    this.map[node.key] = node;\r\n  }\r\n\r\n  remove(key) {\r\n    let node = this.map[key];\r\n    if (node.prev) {\r\n      node.prev.next = node.next;\r\n    } else {\r\n      this.head = node.next;\r\n    }\r\n    if (node.next) {\r\n      node.next.prev = node.prev;\r\n    } else {\r\n      this.tail = node.prev;\r\n    }\r\n    delete this.map[key];\r\n    this.size--;\r\n  }\r\n}\r\n\r\nclass CachedSearch {\r\n  cache = new LruCache();\r\n  taxonomyLookup = {};\r\n\r\n  search(query, linkDepth, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      project + JSON.stringify(query) + linkDepth.toString(),\r\n      () => client.entries.search(query, linkDepth)\r\n    );\r\n  }\r\n\r\n  get(id, linkDepth, versionStatus, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    client.clientConfig.versionStatus = versionStatus;\r\n    return this.request(id, () => client.entries.get({ id, linkDepth }));\r\n  }\r\n\r\n  getContentType(id, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`[CONTENT TYPE] ${id} ${project}`, () =>\r\n      client.contentTypes.get(id)\r\n    );\r\n  }\r\n\r\n  getTaxonomyNode(key, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`[TAXONOMY NODE] ${key}`, () =>\r\n      client.taxonomy\r\n        .resolveChildren(key)\r\n        .then(node => this.extendTaxonomyNode(node))\r\n    );\r\n  }\r\n\r\n  getRootNode(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`${project} / ${JSON.stringify(options)}`, () =>\r\n      client.nodes.getRoot(options)\r\n    );\r\n  }\r\n\r\n  getNode(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} ${(options && options.path) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.get(options)\r\n    );\r\n  }\r\n\r\n  getAncestors(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} [A] ${(options && options.id) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.getAncestors(options)\r\n    );\r\n  }\r\n\r\n  getChildren(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} [C] ${(options && options.id) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.getChildren(options)\r\n    );\r\n  }\r\n\r\n  getSiblings(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} [S] ${(options && options.id) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.getSiblings(options)\r\n    );\r\n  }\r\n\r\n  request(key, execute) {\r\n    if (!this.cache.get(key) || typeof window == 'undefined') {\r\n      let promise = execute();\r\n      this.cache.set(key, promise);\r\n      promise.catch(() => {\r\n        this.cache.remove(key);\r\n      });\r\n    }\r\n    return this.cache.get(key);\r\n  }\r\n\r\n  extendTaxonomyNode(node) {\r\n    let id = this.getTaxonomyId(node);\r\n    this.taxonomyLookup[id] = node.key;\r\n    return {\r\n      ...node,\r\n      id,\r\n      children: node.children\r\n        ? node.children.map(n => this.extendTaxonomyNode(n))\r\n        : null,\r\n    };\r\n  }\r\n\r\n  getTaxonomyId(node) {\r\n    if (node.key) {\r\n      let parts = node.key.split('/');\r\n      return parts[parts.length - 1];\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getTaxonomyKey(id) {\r\n    return this.taxonomyLookup[id];\r\n  }\r\n}\r\n\r\nexport const cachedSearch = new CachedSearch();\r\n","export const DataFormats = {\r\n  entry: 'entry',\r\n  webpage: 'webpage',\r\n};\r\n\r\nconst sys = {\r\n  contentTypeId: 'sys.contentTypeId',\r\n  dataFormat: 'sys.dataFormat',\r\n  filename: 'sys.properties.filename',\r\n  id: 'sys.id',\r\n  includeInSearch: 'sys.metadata.includeInSearch',\r\n  slug: 'sys.slug',\r\n  uri: 'sys.uri',\r\n  versionStatus: 'sys.versionStatus',\r\n};\r\n\r\nexport const Fields = {\r\n  entryTitle: 'entryTitle',\r\n  entryDescription: 'entryDescription',\r\n  keywords: 'keywords',\r\n  sys,\r\n  contentTypeId: 'sys.contentTypeId',\r\n  wildcard: '*',\r\n};\r\n\r\nexport const Projects = {\r\n  website: 'website',\r\n};\r\n\r\nexport const VersionStatus = {\r\n  published: 'published',\r\n  latest: 'latest',\r\n};\r\n\r\nexport const ContentTypes = {\r\n  contentPage: 'contentPage',\r\n};\r\n\r\nexport const WebpageFormats = {};\r\n\r\nexport const FilterExpressionTypes = {\r\n  contentType: 'contentType',\r\n  field: 'field',\r\n};\r\n","import { Op, OrderBy } from 'contensis-delivery-api';\r\nimport { Fields, DataFormats } from '~/core/schema';\r\nimport {\r\n  fixFreeTextForElastic,\r\n  extractQuotedPhrases,\r\n} from '~/core/search/util';\r\n\r\nexport const fieldExpression = (\r\n  field,\r\n  value,\r\n  operator = 'equalTo',\r\n  weight = null\r\n) => {\r\n  if (!field || !value) return [];\r\n  if (Array.isArray(value)) return equalToOrIn(field, value, operator);\r\n  else\r\n    return !weight\r\n      ? [Op[operator](field, value)]\r\n      : [Op[operator](field, value).weight(weight)];\r\n};\r\n\r\nexport const contentTypeIdExpression = (contentTypeIds, webpageTemplates) => {\r\n  const expressions = [];\r\n  if (!contentTypeIds && !webpageTemplates) return expressions;\r\n\r\n  if (contentTypeIds && contentTypeIds.length > 0) {\r\n    expressions.push(\r\n      ...dataFormatExpression(contentTypeIds, DataFormats.entry)\r\n    );\r\n  }\r\n\r\n  if (webpageTemplates && webpageTemplates.length > 0) {\r\n    expressions.push(\r\n      ...dataFormatExpression(webpageTemplates, DataFormats.webpage)\r\n    );\r\n  }\r\n\r\n  if (expressions.length > 1) return [Op.or(...expressions)];\r\n\r\n  return expressions;\r\n};\r\n\r\nexport const filterExpressions = filters => {\r\n  if (!filters) return [];\r\n  const expressions = [];\r\n\r\n  filters.map(param => {\r\n    expressions.push(...fieldExpression(param.key, param.value, 'contains'));\r\n  });\r\n\r\n  return expressions;\r\n};\r\n\r\nexport const dataFormatExpression = (\r\n  contentTypeIds,\r\n  dataFormat = DataFormats.entry\r\n) => {\r\n  if (contentTypeIds && contentTypeIds.length > 0) {\r\n    /**\r\n     * We have an array of contentTypeIds some may be prefixed with a \"!\"\r\n     * to indicate this is a \"not\" expression\r\n     */\r\n    const withContentTypeIds = contentTypeIds.filter(c => !c.startsWith('!'));\r\n    const notContentTypeIds = contentTypeIds\r\n      .filter(c => c.startsWith('!'))\r\n      .map(id => id.substring(1));\r\n\r\n    const andExpr = Op.and();\r\n\r\n    const dataFormatExpr = fieldExpression(Fields.sys.dataFormat, dataFormat);\r\n\r\n    const withExpr = fieldExpression(\r\n      Fields.sys.contentTypeId,\r\n      withContentTypeIds\r\n    );\r\n\r\n    const notExpr = [\r\n      Op.not(...fieldExpression(Fields.sys.contentTypeId, notContentTypeIds)),\r\n    ];\r\n\r\n    andExpr.add(...dataFormatExpr);\r\n    if (withContentTypeIds.length > 0) andExpr.add(...withExpr);\r\n    if (notContentTypeIds.length > 0) andExpr.add(...notExpr);\r\n\r\n    return [andExpr];\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const defaultExpressions = versionStatus => {\r\n  return [Op.equalTo(Fields.sys.versionStatus, versionStatus)];\r\n};\r\n\r\nexport const defaultSearchExpressions = versionStatus => {\r\n  return [\r\n    ...defaultExpressions(versionStatus),\r\n    ...includeInSearchExpressions(),\r\n  ];\r\n};\r\nexport const includeInSearchExpressions = () => [\r\n  Op.or(\r\n    Op.and(\r\n      Op.exists(Fields.sys.includeInSearch, true),\r\n      Op.equalTo(Fields.sys.includeInSearch, true)\r\n    ),\r\n    Op.exists(Fields.sys.includeInSearch, false)\r\n  ),\r\n];\r\n\r\nexport const orderByExpression = orderBy => {\r\n  let expression = OrderBy;\r\n  if (orderBy && orderBy.length > 0) {\r\n    orderBy.map(\r\n      ob =>\r\n        (expression = ob.startsWith('-')\r\n          ? expression.desc(ob.substring(1))\r\n          : expression.asc(ob))\r\n    );\r\n  }\r\n  return expression;\r\n};\r\n\r\nconst equalToOrIn = (field, arr, operator = 'equalTo') =>\r\n  arr.length === 0\r\n    ? []\r\n    : arr.length === 1\r\n    ? [Op[operator](field, arr[0])]\r\n    : [Op.in(field, ...arr)];\r\n\r\nexport const customWhereExpressions = where => {\r\n  if (!where || !Array.isArray(where)) return [];\r\n\r\n  // Accept HTTP style objects and map them to\r\n  // their equivalent JS client \"Op\" expressions\r\n  return where.map(clause => {\r\n    let expression;\r\n    Object.keys(clause).map((key, idx) => {\r\n      if (idx === 1) {\r\n        const operator = key;\r\n        const value = clause[key];\r\n        expression = Op[operator](clause.field, value, clause.weight);\r\n      }\r\n    });\r\n    return expression;\r\n  });\r\n};\r\n\r\nexport const termExpressions = (searchTerm, weightedSearchFields) => {\r\n  if (searchTerm && weightedSearchFields && weightedSearchFields.length > 0) {\r\n    // Extract any phrases in quotes to array\r\n    const quotedPhrases = extractQuotedPhrases(searchTerm);\r\n\r\n    // Modify the search term to remove any quoted phrases to leave any remaining terms\r\n    let modifiedSearchTerm = searchTerm;\r\n    quotedPhrases.forEach(\r\n      qp =>\r\n        (modifiedSearchTerm = modifiedSearchTerm\r\n          .replace(qp, '')\r\n          .replace('\"\"', '')\r\n          .trim())\r\n    );\r\n\r\n    // Push to the operators array to include in the query\r\n    const operators = [];\r\n\r\n    // Helper functions to generate Op expressions\r\n    const containsOp = (f, term) =>\r\n      fieldExpression(\r\n        f.fieldId,\r\n        fixFreeTextForElastic(term),\r\n        'contains',\r\n        f.weight\r\n      );\r\n    const freeTextOp = (f, term) =>\r\n      fieldExpression(\r\n        f.fieldId,\r\n        fixFreeTextForElastic(term),\r\n        'freeText',\r\n        f.weight\r\n      );\r\n\r\n    // For each weighted search field\r\n    weightedSearchFields.forEach(f => {\r\n      // Push to field operators\r\n      const fieldOperators = [];\r\n\r\n      // Add operator expressions for modified search term\r\n      if (modifiedSearchTerm) {\r\n        if (\r\n          [Fields.keywords, Fields.sys.filename, Fields.sys.uri].includes(\r\n            f.fieldId\r\n          )\r\n        ) {\r\n          fieldOperators.push(...containsOp(f, modifiedSearchTerm));\r\n        } else {\r\n          if ([Fields.entryTitle].includes(f.fieldId)) {\r\n            fieldOperators.push(\r\n              Op.or(\r\n                ...containsOp(f, modifiedSearchTerm),\r\n                ...freeTextOp(f, modifiedSearchTerm)\r\n              )\r\n            );\r\n          } else {\r\n            fieldOperators.push(...freeTextOp(f, modifiedSearchTerm));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Add operator expressions for any quoted phrases\r\n      quotedPhrases.forEach(qp => fieldOperators.push(...containsOp(f, qp)));\r\n\r\n      // If we are using multiple operators for a field we will\r\n      // wrap each field inside an And operator so we will match\r\n      // all terms/phrases rather than any terms/phrases\r\n      if (fieldOperators.length > 1) {\r\n        operators.push(Op.and(...fieldOperators));\r\n      } else {\r\n        operators.push(...fieldOperators);\r\n      }\r\n    });\r\n\r\n    // Wrap operators in an Or operator\r\n    return [Op.or().addRange(operators)];\r\n  } else if (searchTerm) {\r\n    return [Op.contains(Fields.wildcard, searchTerm)];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n","// eslint-disable-next-line import/named\r\nimport { Query } from '~/core/util/ContensisDeliveryApi';\r\nimport { fieldExpression, defaultExpressions } from '~/core/search/expressions';\r\n\r\nexport const routeEntryByFieldsQuery = (\r\n  id,\r\n  fields = [],\r\n  versionStatus = 'published'\r\n) => {\r\n  const query = new Query(\r\n    ...[...fieldExpression('sys.id', id), ...defaultExpressions(versionStatus)]\r\n  );\r\n  query.fields = fields;\r\n  return query;\r\n};\r\n","// load-entries.js\r\nimport * as log from 'loglevel';\r\nimport { takeEvery, put, select, call, all } from 'redux-saga/effects';\r\nimport {\r\n  // SET_ENTRY_ID,\r\n  // SET_NAVIGATION_NOT_FOUND,\r\n  // SET_NODE,\r\n  SET_ENTRY,\r\n  SET_ANCESTORS,\r\n  SET_NAVIGATION_PATH,\r\n  SET_ROUTE,\r\n  CALL_HISTORY_METHOD,\r\n  SET_SIBLINGS,\r\n  MAP_ENTRY,\r\n} from '~/core/redux/types/routing';\r\nimport { cachedSearch, deliveryApi } from '~/core/util/ContensisDeliveryApi';\r\nimport { selectVersionStatus } from '~/core/redux/selectors/version';\r\nimport {\r\n  selectCurrentPath,\r\n  selectCurrentProject,\r\n  selectRouteEntry,\r\n} from '~/core/redux/selectors/routing';\r\nimport { GET_NODE_TREE } from '../types/navigation';\r\nimport { hasNavigationTree } from '../selectors/navigation';\r\nimport { routeEntryByFieldsQuery } from './queries';\r\n\r\nexport const routingSagas = [\r\n  takeEvery(SET_NAVIGATION_PATH, getRouteSaga),\r\n  takeEvery(SET_ROUTE, setRouteSaga),\r\n];\r\n\r\n/**\r\n * To navigate / push a specific route via redux middleware\r\n * @param {path, state} action\r\n */\r\nfunction* setRouteSaga(action) {\r\n  yield put({\r\n    type: CALL_HISTORY_METHOD,\r\n    payload: {\r\n      method: 'push',\r\n      args: [action.path, action.state],\r\n    },\r\n  });\r\n}\r\n\r\n// function* deliveryApiResponseHandler(response) {\r\n//   debugger;\r\n\r\n//   yield put({ type: 'HANDLE_RESPONSE', headers: response.headers });\r\n// }\r\n\r\nfunction* getRouteSaga(action) {\r\n  let entry = null;\r\n  try {\r\n    const {\r\n      withEvents,\r\n      routes: { ContentTypeMappings = {} } = {},\r\n      staticRoute,\r\n    } = action;\r\n    let appsays;\r\n    if (withEvents && withEvents.onRouteLoad) {\r\n      appsays = yield withEvents.onRouteLoad(action);\r\n    }\r\n    // if appsays customNavigation: true, we will set doNavigation to false\r\n    // if appsays customNavigation: { ... }, we will set doNavigation to the customNavigation object and check for child elements\r\n    // if appsays nothing we will set doNavigation to true and continue to do navigation calls\r\n    const doNavigation =\r\n      !appsays ||\r\n      (appsays && appsays.customNavigation === true\r\n        ? false\r\n        : (appsays && appsays.customNavigation) || true);\r\n\r\n    const entryLinkDepth = (appsays && appsays.entryLinkDepth) || 3;\r\n    const setContentTypeLimits = !!ContentTypeMappings.find(\r\n      ct => ct.fields || ct.linkDepth\r\n    );\r\n\r\n    const state = yield select();\r\n    const routeEntry = selectRouteEntry(state);\r\n    const currentPath = selectCurrentPath(state);\r\n    const deliveryApiStatus = selectVersionStatus(state);\r\n    const project = selectCurrentProject(state);\r\n    const isHome = currentPath === '/';\r\n    const isPreview = currentPath && currentPath.startsWith('/preview/');\r\n\r\n    if (\r\n      !isPreview &&\r\n      ((appsays && appsays.customRouting) ||\r\n        (staticRoute && !staticRoute.route.fetchNode) ||\r\n        (routeEntry && action.statePath === action.path))\r\n    ) {\r\n      // To prevent erroneous 404s and wasted network calls, this covers\r\n      // - appsays customRouting and does SET_ENTRY etc. via the consuming app\r\n      // - all staticRoutes (where custom 'route.fetchNode' attribute is falsey)\r\n      // - standard Contensis SiteView Routing where we already have that entry in state\r\n      if (\r\n        routeEntry &&\r\n        (!staticRoute || (staticRoute.route && staticRoute.route.fetchNode))\r\n      ) {\r\n        // entry = routeEntry.toJS();\r\n        // yield put({\r\n        //   type: SET_ENTRY,\r\n        //   entry,\r\n        //   isLoading: false,\r\n        // });\r\n        //Do nothing, the entry is allready the right one.\r\n      } else yield call(setRouteEntry);\r\n    } else {\r\n      let pathNode = null,\r\n        ancestors = null,\r\n        siblings = null;\r\n\r\n      // Handle homepage\r\n      if (isHome) {\r\n        pathNode = yield cachedSearch.getRootNode(\r\n          {\r\n            depth: 0,\r\n            entryFields: '*',\r\n            entryLinkDepth,\r\n            language: 'en-GB',\r\n            versionStatus: deliveryApiStatus,\r\n          },\r\n          project\r\n        );\r\n      } else {\r\n        // Handle preview routes\r\n        if (isPreview) {\r\n          let splitPath = currentPath.split('/');\r\n          let entryGuid = splitPath[2];\r\n          if (splitPath.length == 3) {\r\n            // According to product dev we cannot use Node API\r\n            // for previewing entries as it gives a response of []\r\n            // -- apparently it is not correct to request latest content\r\n            // with Node API\r\n            let previewEntry = yield deliveryApi\r\n              .getClient(deliveryApiStatus, project)\r\n              .entries.get({ id: entryGuid, linkDepth: 3 });\r\n            if (previewEntry) {\r\n              pathNode = { entry: previewEntry };\r\n              // yield call(setRouteEntry, previewEntry);\r\n              // } else {\r\n              // yield call(do404);\r\n            }\r\n          }\r\n        } else {\r\n          // Handle all other routes\r\n          pathNode = yield cachedSearch.getNode(\r\n            {\r\n              depth:\r\n                doNavigation === true || doNavigation.children === true\r\n                  ? 3\r\n                  : (doNavigation && doNavigation.children) || 0,\r\n              path: currentPath,\r\n              entryFields: setContentTypeLimits\r\n                ? ['sys.contentTypeId', 'sys.id']\r\n                : '*',\r\n              entryLinkDepth: setContentTypeLimits ? 0 : entryLinkDepth,\r\n              versionStatus: deliveryApiStatus,\r\n            },\r\n            project\r\n          );\r\n          if (\r\n            setContentTypeLimits &&\r\n            pathNode &&\r\n            pathNode.entry &&\r\n            pathNode.entry.sys &&\r\n            pathNode.entry.sys.id\r\n          ) {\r\n            const contentType = ContentTypeMappings.find(\r\n              ct => ct.contentTypeID === pathNode.entry.sys.contentTypeId\r\n            );\r\n            const query = routeEntryByFieldsQuery(\r\n              pathNode.entry.sys.id,\r\n              contentType && contentType.fields,\r\n              deliveryApiStatus\r\n            );\r\n            const payload = yield cachedSearch.search(\r\n              query,\r\n              contentType && typeof contentType.linkDepth !== 'undefined'\r\n                ? contentType.linkDepth\r\n                : 3,\r\n              project\r\n            );\r\n            if (payload && payload.items && payload.items.length > 0) {\r\n              pathNode.entry = payload.items[0];\r\n            }\r\n          }\r\n        }\r\n\r\n        if (\r\n          pathNode &&\r\n          pathNode.id &&\r\n          (doNavigation === true || doNavigation.ancestors)\r\n        ) {\r\n          ancestors = yield cachedSearch.getAncestors(pathNode.id, project);\r\n\r\n          if (doNavigation === true || doNavigation.siblings) {\r\n            siblings = yield cachedSearch.getSiblings(\r\n              {\r\n                id: pathNode.id,\r\n                entryFields: ['sys.contentTypeId', 'url'],\r\n              },\r\n              project\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      if (\r\n        pathNode &&\r\n        pathNode.entry &&\r\n        pathNode.entry.sys &&\r\n        pathNode.entry.sys.id\r\n      ) {\r\n        entry = pathNode.entry;\r\n        const entryMapper = (\r\n          ContentTypeMappings.find(\r\n            ct => ct.contentTypeID === pathNode.entry.sys.contentTypeId\r\n          ) || {}\r\n        ).entryMapper;\r\n\r\n        yield all([\r\n          call(\r\n            mapRouteEntry,\r\n            { ...pathNode, ancestors, siblings },\r\n            entryMapper\r\n          ),\r\n          call(setRouteEntry, entry, pathNode, ancestors, siblings),\r\n        ]);\r\n      } else {\r\n        yield call(do404);\r\n      }\r\n      if (!appsays || !appsays.preventScrollTop) {\r\n        // Scroll into View\r\n        if (typeof window !== 'undefined') {\r\n          window.scroll({\r\n            top: 0,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    if (withEvents && withEvents.onRouteLoaded) {\r\n      yield withEvents.onRouteLoaded({ ...action, entry });\r\n    }\r\n\r\n    if (\r\n      !hasNavigationTree(state) &&\r\n      (doNavigation === true || doNavigation.tree)\r\n    )\r\n      // Load navigation clientside only, a put() should help that work\r\n      yield put({\r\n        type: GET_NODE_TREE,\r\n        treeDepth:\r\n          doNavigation === true ||\r\n          !doNavigation.tree ||\r\n          doNavigation.tree === true\r\n            ? 2\r\n            : doNavigation.tree,\r\n      });\r\n  } catch (e) {\r\n    log.error(...['Error running route saga:', e, e.stack]);\r\n    yield call(do404);\r\n  }\r\n}\r\n\r\nfunction* setRouteEntry(entry, node, ancestors, siblings) {\r\n  yield all([\r\n    // put({\r\n    //   type: SET_NAVIGATION_NOT_FOUND,\r\n    //   notFound: !(entry && entry.sys.id),\r\n    // }),\r\n    // put({\r\n    //   type: SET_NODE,\r\n    //   node,\r\n    // }),\r\n    put({\r\n      type: SET_ENTRY,\r\n      id: (entry && entry.sys.id) || null,\r\n      entry,\r\n      node,\r\n    }),\r\n    // put({\r\n    //   type: SET_ENTRY_ID,\r\n    //   id: (entry && entry.sys.id) || null,\r\n    // }),\r\n    ancestors &&\r\n      put({\r\n        type: SET_ANCESTORS,\r\n        ancestors,\r\n      }),\r\n    siblings &&\r\n      put({\r\n        type: SET_SIBLINGS,\r\n        siblings,\r\n      }),\r\n  ]);\r\n}\r\n\r\nfunction* mapRouteEntry(node, entryMapper) {\r\n  if (typeof entryMapper === 'function') {\r\n    const mappedEntry = entryMapper(node);\r\n    yield put({ type: MAP_ENTRY, mappedEntry, node, entryMapper });\r\n  }\r\n}\r\nfunction* do404() {\r\n  // yield put({\r\n  //   type: SET_NAVIGATION_NOT_FOUND,\r\n  //   notFound: true,\r\n  // });\r\n  // yield put({\r\n  //   type: SET_ENTRY_ID,\r\n  //   id: null,\r\n  // });\r\n  yield put({\r\n    type: SET_ENTRY,\r\n    id: null,\r\n    entry: null,\r\n    notFound: true,\r\n  });\r\n}\r\n","import { takeEvery, put, select } from 'redux-saga/effects';\r\n\r\nimport { deliveryApi } from '~/core/util/ContensisDeliveryApi';\r\nimport {\r\n  GET_NODE_TREE,\r\n  SET_NODE_TREE,\r\n  GET_NODE_TREE_ERROR,\r\n} from '~/core/redux/types/navigation';\r\nimport { hasNavigationTree } from '~/core/redux/selectors/navigation';\r\nimport { selectVersionStatus } from '../selectors/version';\r\nimport { selectCurrentProject } from '../selectors/routing';\r\n\r\nexport const navigationSagas = [takeEvery(GET_NODE_TREE, ensureNodeTreeSaga)];\r\n\r\nexport function* ensureNodeTreeSaga(action) {\r\n  const state = yield select();\r\n  try {\r\n    if (!hasNavigationTree(state)) {\r\n      const deliveryApiVersionStatus = yield select(selectVersionStatus);\r\n      const project = yield select(selectCurrentProject);\r\n      const nodes = yield deliveryApi\r\n        .getClient(deliveryApiVersionStatus, project)\r\n        .nodes.getRoot({\r\n          depth: action.treeDepth || 2,\r\n          entryFields: 'entryTitle, metaInformation, sys.contentTypeId',\r\n        });\r\n      if (nodes) {\r\n        yield put({ type: SET_NODE_TREE, nodes });\r\n      } else {\r\n        yield put({ type: GET_NODE_TREE_ERROR });\r\n      }\r\n    }\r\n  } catch (ex) {\r\n    yield put({ type: GET_NODE_TREE_ERROR, error: ex.toString() });\r\n  }\r\n}\r\n","// index.js\r\nimport { all } from 'redux-saga/effects';\r\nimport { routingSagas } from './routing';\r\nimport { navigationSagas } from './navigation';\r\n\r\nexport default function(featureSagas = []) {\r\n  return function* rootSaga() {\r\n    const subSagas = [...routingSagas, ...navigationSagas];\r\n    yield all([...subSagas, ...featureSagas]);\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { hot } from 'react-hot-loader';\r\nimport RouteLoader from '~/core/routes/RouteLoader';\r\n\r\nconst AppRoot = props => {\r\n  return <RouteLoader {...props} />;\r\n};\r\n\r\nexport default hot(module)(AppRoot);\r\n"],"names":["selectedHistory","window","createBrowserHistory","createMemoryHistory","history","options","browserHistory","servers","SERVERS","alias","toLowerCase","publicUri","PUBLIC_URI","projects","PROJECTS","pickProject","hostname","query","p","id","project","includes","startsWith","initialState","Map","currentPath","currentNode","currentProject","notFound","entryID","entry","entryDepends","List","contentTypeId","currentNodeAncestors","currentTreeId","state","action","type","MAP_ENTRY","set","fromJS","mappedEntry","SET_ANCESTORS","ancestors","ancestorIDs","map","node","currentNodeDepends","get","allNodeDepends","Set","union","SET_ENTRY","isLoading","nextState","GetAllResponseGuids","nodeDepends","removeIn","SET_NAVIGATION_PATH","staticRoute","path","entryUri","getIn","location","route","component","SET_ROUTE","SET_SIBLINGS","currentNodeSiblingParent","siblingIDs","siblings","length","parentId","SET_SURROGATE_KEYS","keys","SET_TARGET_PROJECT","allowedGroups","commitRef","buildNo","contensisVersionStatus","SET_VERSION_STATUS","status","SET_VERSION","root","treeDepends","isError","isReady","SET_NODE_TREE","nodes","GET_NODE_TREE_ERROR","routerMiddleware","store","next","CALL_HISTORY_METHOD","payload","method","args","reduxStore","featureReducers","thunkMiddleware","thunk","reduxDevToolsMiddleware","f","__REDUX_DEVTOOLS_EXTENSION__","sagaMiddleware","createSagaMiddleware","middleware","compose","applyMiddleware","reducers","navigation","NavigationReducer","routing","RoutingReducer","version","VersionReducer","combinedReducers","combineReducers","createStore","runSaga","run","close","dispatch","END","storeSurrogateKeys","response","headers","setSurrogateKeys","getClientConfig","config","DELIVERY_API_CONFIG","responseHandler","projectId","defaultHeaders","PROXY_DELIVERY_API","rootUrl","GetResponseGuids","object","Ids","Object","some","k","language","dataFormat","push","subIds","returnItems","unique","DeliveryApi","getClientSideVersionStatus","currentHostname","getVersionStatusFromHostname","indexOf","endsWith","search","linkDepth","env","client","Client","create","entries","getClient","deliveryApiStatus","baseConfig","versionStatus","getEntry","deliveryApi","CacheNode","constructor","key","value","prev","LruCache","limit","head","tail","size","remove","setHead","CachedSearch","cache","taxonomyLookup","request","JSON","stringify","toString","clientConfig","getContentType","contentTypes","getTaxonomyNode","taxonomy","resolveChildren","then","extendTaxonomyNode","getRootNode","getRoot","getNode","getAncestors","getChildren","getSiblings","execute","promise","catch","getTaxonomyId","children","n","parts","split","getTaxonomyKey","cachedSearch","sys","filename","includeInSearch","slug","uri","Fields","entryTitle","entryDescription","keywords","wildcard","fieldExpression","field","operator","weight","Array","isArray","equalToOrIn","Op","defaultExpressions","equalTo","arr","in","routeEntryByFieldsQuery","fields","Query","routingSagas","takeEvery","getRouteSaga","setRouteSaga","put","withEvents","routes","ContentTypeMappings","appsays","onRouteLoad","doNavigation","customNavigation","entryLinkDepth","setContentTypeLimits","find","ct","select","routeEntry","selectRouteEntry","selectCurrentPath","selectVersionStatus","selectCurrentProject","isHome","isPreview","customRouting","fetchNode","statePath","call","setRouteEntry","pathNode","depth","entryFields","splitPath","entryGuid","previewEntry","contentType","contentTypeID","items","entryMapper","all","mapRouteEntry","do404","preventScrollTop","scroll","top","onRouteLoaded","hasNavigationTree","tree","GET_NODE_TREE","treeDepth","e","log","stack","navigationSagas","ensureNodeTreeSaga","deliveryApiVersionStatus","ex","error","featureSagas","rootSaga","subSagas","AppRoot","props","React","RouteLoader"],"mappings":"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"}