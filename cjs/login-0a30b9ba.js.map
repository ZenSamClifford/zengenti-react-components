{"version":3,"file":"login-0a30b9ba.js","sources":["../src/routing/util/find-contenttype-mapping.js","../src/user/transformations/mapClientCredentials.js","../src/user/util/ContensisManagementApi.js","../src/user/util/CookieHelper.class.js","../src/user/util/OidcUserManager.js","../src/user/util/LoginHelper.class.js","../src/user/redux/sagas/login.js"],"sourcesContent":["export const findContentTypeMapping = (ContentTypeMappings, contentTypeId) =>\r\n  ContentTypeMappings.find(ct => ct.contentTypeID === contentTypeId);\r\n","import { mapJson } from '~/util/json-mapper';\r\n\r\nconst clientCredentials = {\r\n  bearerToken: 'bearerToken',\r\n  bearerTokenExpiryDate: ({ bearerTokenExpiryDate }) =>\r\n    bearerTokenExpiryDate.toISOString(),\r\n  refreshToken: 'refreshToken',\r\n  refreshTokenExpiryDate: ({ refreshTokenExpiryDate }) =>\r\n    refreshTokenExpiryDate.toISOString(),\r\n  contensisClassicToken: 'contensisClassicToken',\r\n};\r\nexport default obj => mapJson(obj, clientCredentials);\r\n","// import { Client } from 'contensis-management-api';\r\n\r\nexport const getManagementApiClient = async ({\r\n  bearerToken,\r\n  bearerTokenExpiryDate,\r\n  refreshToken,\r\n  refreshTokenExpiryDate,\r\n  contensisClassicToken,\r\n  username,\r\n  password,\r\n}) => {\r\n  const rootUrl = SERVERS.api || SERVERS.cms; /* global SERVERS */\r\n  const projectId = PROJECTS[0].id; /* global PROJECTS */\r\n\r\n  let config = {};\r\n  if (refreshToken) {\r\n    config = {\r\n      clientType: 'contensis_classic_refresh_token',\r\n      clientDetails: {\r\n        refreshToken,\r\n      },\r\n    };\r\n  } else {\r\n    config = {\r\n      clientType: 'contensis_classic',\r\n      clientDetails: {\r\n        username,\r\n        password,\r\n      },\r\n    };\r\n  }\r\n  const { Client } = await import('contensis-management-api');\r\n\r\n  const client = Client.create({\r\n    ...config,\r\n    projectId,\r\n    rootUrl,\r\n  });\r\n\r\n  if (bearerToken) client.bearerToken = bearerToken;\r\n  if (bearerTokenExpiryDate)\r\n    client.bearerTokenExpiryDate = bearerTokenExpiryDate;\r\n  if (refreshToken) client.refreshToken = refreshToken;\r\n  if (refreshTokenExpiryDate)\r\n    client.refreshTokenExpiryDate = refreshTokenExpiryDate;\r\n  if (contensisClassicToken)\r\n    client.contensisClassicToken = contensisClassicToken;\r\n\r\n  return client;\r\n};\r\n","import Cookies from 'js-cookie';\r\n\r\nconst COOKIE_VALID_DAYS = 1; // 0 = Session cookie\r\n\r\n// Override the default js-cookie conversion / encoding\r\n// methods so the written values work with Contensis sites\r\nconst _cookie = Cookies.withConverter({\r\n  read: value => decodeURIComponent(value),\r\n  write: value => encodeURIComponent(value),\r\n});\r\n\r\nexport class CookieHelper {\r\n  static GetCookie(name) {\r\n    let cookie = _cookie.get(name);\r\n    if (typeof cookie == 'undefined') {\r\n      return null;\r\n    }\r\n    return cookie;\r\n  }\r\n\r\n  static SetCookie(name, value, maxAgeDays = COOKIE_VALID_DAYS) {\r\n    maxAgeDays === 0\r\n      ? _cookie.set(name, value)\r\n      : _cookie.set(name, value, { expires: maxAgeDays });\r\n  }\r\n\r\n  static DeleteCookie(name) {\r\n    _cookie.remove(name);\r\n  }\r\n}\r\n","const context = typeof window != 'undefined' ? window : global;\r\nconst requireOidc =\r\n  process.env.NODE_ENV === 'development'\r\n    ? WSFED_LOGIN === 'true' /* global WSFED_LOGIN */\r\n    : context.WSFED_LOGIN === 'true';\r\n\r\nconst servers = SERVERS; /* global SERVERS */\r\n\r\nexport const userManagerConfig =\r\n  typeof window !== 'undefined'\r\n    ? {\r\n        authority: `${servers.cms}/authenticate/`,\r\n        client_id: 'WebsiteAdfsClient',\r\n        redirect_uri: window.location.toString(),\r\n        post_logout_redirect_uri: window.location.toString(),\r\n        response_type: 'id_token',\r\n        scope: 'openid',\r\n        filterProtocolClaims: false,\r\n      }\r\n    : {};\r\n\r\nexport const createUserManager = async config => {\r\n  if (typeof window !== 'undefined' && requireOidc) {\r\n    try {\r\n      const { UserManager } = await import(\r\n        /* webpackChunkName: \"oidcclient\" */ 'oidc-client'\r\n      );\r\n      return new UserManager(config);\r\n    } catch (e) {\r\n      // eslint-disable-next-line no-console\r\n      console.log('Exception in createUserManager: ', e);\r\n    }\r\n  } else return {};\r\n};\r\n\r\n//const userManager = createUserManager(userManagerConfig);\r\n\r\n// export default userManager;\r\n","/* eslint-disable require-atomic-updates */\r\nimport { getManagementApiClient } from './ContensisManagementApi';\r\nimport { to } from 'await-to-js';\r\n\r\nimport { CookieHelper } from './CookieHelper.class';\r\n\r\nimport mapClientCredentials from '../transformations/mapClientCredentials';\r\nimport { createUserManager, userManagerConfig } from './OidcUserManager';\r\n\r\nexport const LOGIN_COOKIE = 'ContensisCMSUserName';\r\nexport const REFRESH_TOKEN_COOKIE = 'RefreshToken';\r\n\r\nconst context = typeof window != 'undefined' ? window : global;\r\n\r\nexport class LoginHelper {\r\n  static CMS_URL = SERVERS.cms /* global SERVERS */;\r\n  static WSFED_LOGIN =\r\n    process.env.NODE_ENV === 'development'\r\n      ? WSFED_LOGIN === 'true' /* global WSFED_LOGIN */\r\n      : context.WSFED_LOGIN === 'true';\r\n  static LOGIN_ROUTE = '/account/login';\r\n  static ACCESS_DENIED_ROUTE = '/account/access-denied';\r\n\r\n  static SetLoginCookies({ contensisClassicToken, refreshToken }) {\r\n    console.info(\r\n      'SetLoginCookies:',\r\n      LOGIN_COOKIE,\r\n      contensisClassicToken,\r\n      REFRESH_TOKEN_COOKIE,\r\n      refreshToken\r\n    );\r\n    if (contensisClassicToken)\r\n      CookieHelper.SetCookie(LOGIN_COOKIE, contensisClassicToken);\r\n    if (refreshToken)\r\n      CookieHelper.SetCookie(REFRESH_TOKEN_COOKIE, refreshToken);\r\n  }\r\n\r\n  static GetCachedCredentials() {\r\n    return {\r\n      bearerToken: null,\r\n      bearerTokenExpiryDate: null,\r\n      refreshToken: CookieHelper.GetCookie(REFRESH_TOKEN_COOKIE),\r\n      refreshTokenExpiryDate: null,\r\n      contensisClassicToken: CookieHelper.GetCookie(LOGIN_COOKIE),\r\n    };\r\n  }\r\n\r\n  static ClearCachedCredentials() {\r\n    CookieHelper.DeleteCookie(LOGIN_COOKIE);\r\n    CookieHelper.DeleteCookie(REFRESH_TOKEN_COOKIE);\r\n  }\r\n\r\n  static async LoginUser({ username, password, clientCredentials }) {\r\n    let credentials = clientCredentials;\r\n    let authenticationState = {\r\n      authenticated: false,\r\n      authenticationError: false,\r\n      error: false,\r\n      clientCredentials: null,\r\n    };\r\n    let transientClient;\r\n    let user;\r\n\r\n    if (username && password) {\r\n      // Get a management client with username and password\r\n      transientClient = await getManagementApiClient({\r\n        username,\r\n        password,\r\n      });\r\n\r\n      // Ensure the client has requested a bearer token\r\n      const [loginError, clientBearerToken] = await to(\r\n        transientClient.ensureBearerToken()\r\n      );\r\n\r\n      // Problem getting token with username and password\r\n      if (loginError) {\r\n        const authenticationError = loginError.name.includes(\r\n          'ContensisAuthenticationError'\r\n        );\r\n        authenticationState = {\r\n          authenticated: false,\r\n          authenticationError: authenticationError,\r\n          error: !authenticationError,\r\n          clientCredentials: null,\r\n        };\r\n        LoginHelper.ClearCachedCredentials();\r\n      }\r\n\r\n      // Got a token using username and password\r\n      if (clientBearerToken) {\r\n        // Set credentials so we can continue to GetUserDetails\r\n        credentials = mapClientCredentials(transientClient);\r\n        LoginHelper.SetLoginCookies(credentials);\r\n        authenticationState = {\r\n          authenticated: true,\r\n          authenticationError: false,\r\n          error: false,\r\n          clientCredentials: credentials,\r\n        };\r\n      }\r\n    }\r\n\r\n    // If we have credentials supplied by a successful username and password login\r\n    // or clientCredentials supplied in the options argument we can continue to\r\n    // fetch the user's details\r\n    if (credentials) {\r\n      const client =\r\n        transientClient || (await getManagementApiClient(credentials));\r\n      const [error, userDetails] = await LoginHelper.GetUserDetails(client);\r\n\r\n      if (error) {\r\n        authenticationState = {\r\n          authenticated: false,\r\n          authenticationError: false,\r\n          error: { message: error.message, stack: error.stack },\r\n          clientCredentials: null,\r\n        };\r\n        LoginHelper.ClearCachedCredentials();\r\n      } else {\r\n        // Ensure we get latest refreshToken and contensisClassicToken from the latest client\r\n        const latestCredentials = mapClientCredentials(client);\r\n        LoginHelper.SetLoginCookies(latestCredentials);\r\n\r\n        user = userDetails;\r\n        authenticationState = {\r\n          authenticated: true,\r\n          authenticationError: false,\r\n          error: false,\r\n          clientCredentials: latestCredentials,\r\n        };\r\n      }\r\n    }\r\n\r\n    return { authenticationState, user };\r\n  }\r\n\r\n  static GetUserDetails = async client => {\r\n    let userError,\r\n      groupsError,\r\n      user = {},\r\n      groupsResult;\r\n\r\n    [userError, user] = await to(client.security.users.getCurrent());\r\n    if (user && user.id) {\r\n      [groupsError, groupsResult] = await to(\r\n        client.security.users.getUserGroups({\r\n          userId: user.id,\r\n          includeInherited: true,\r\n        })\r\n      );\r\n      // Set groups attribute in user object to be the items\r\n      // array from the getUserGroups result\r\n      if (groupsResult && groupsResult.items) user.groups = groupsResult.items;\r\n\r\n      //If groups call fails then log the error but allow the user to login still\r\n      // eslint-disable-next-line no-console\r\n      if (groupsError) console.log(groupsError);\r\n    }\r\n    return [userError, user];\r\n  };\r\n\r\n  static LogoutUser(redirectPath) {\r\n    LoginHelper.ClearCachedCredentials();\r\n    if (LoginHelper.WSFED_LOGIN) {\r\n      LoginHelper.WsFedLogout(redirectPath);\r\n    } else {\r\n      if (redirectPath) LoginHelper.ClientRedirectToPath(redirectPath);\r\n      else LoginHelper.ClientRedirectToSignInPage();\r\n    }\r\n  }\r\n\r\n  static ClientRedirectToHome(location) {\r\n    if (typeof window != 'undefined') {\r\n      let url = '/';\r\n      if (location) {\r\n        const { search, hash } = location.toJS();\r\n        url = search ? `${url}${search}` : url;\r\n        url = hash ? `${url}${hash}` : url;\r\n      }\r\n      window.location.href = url;\r\n    }\r\n  }\r\n\r\n  static async ClientRedirectToSignInPage(redirectPath) {\r\n    if (LoginHelper.WSFED_LOGIN) {\r\n      await LoginHelper.WsFedLogout();\r\n      await LoginHelper.WsFedLogin();\r\n    } else {\r\n      // Standard Contensis Login\r\n      let url = LoginHelper.LOGIN_ROUTE;\r\n      if (typeof redirectPath === 'string')\r\n        url = `${url}?redirect_uri=${redirectPath}`;\r\n      if (\r\n        typeof location !== 'undefined' &&\r\n        redirectPath !== LoginHelper.LOGIN_ROUTE\r\n      )\r\n        location.replace(url);\r\n    }\r\n  }\r\n\r\n  static ClientRedirectToAccessDeniedPage(originalPath) {\r\n    let url = LoginHelper.ACCESS_DENIED_ROUTE;\r\n    if (originalPath === url) return;\r\n\r\n    if (typeof originalPath === 'string')\r\n      url = `${url}?original_uri=${originalPath}`;\r\n    if (typeof location !== 'undefined') location.href = url;\r\n  }\r\n\r\n  static ClientRedirectToPath(redirectPath) {\r\n    if (typeof redirectPath === 'string') {\r\n      if (typeof location !== 'undefined') window.location.href = redirectPath;\r\n    } else LoginHelper.ClientRedirectToHome();\r\n  }\r\n\r\n  static async WsFedLogin(redirectUri) {\r\n    const userManager = await createUserManager(userManagerConfig);\r\n    userManager.signinRedirect({\r\n      scope: 'openid',\r\n      response_type: 'id_token',\r\n      redirect_uri: redirectUri || window.location.toString(),\r\n    });\r\n  }\r\n\r\n  static async WsFedLogout(redirectPath) {\r\n    await fetch(\r\n      `${LoginHelper.CMS_URL}/authenticate/logout?jsonResponseRequired=true`,\r\n      {\r\n        credentials: 'include',\r\n      }\r\n    );\r\n    if (redirectPath) {\r\n      window.location = redirectPath;\r\n    }\r\n  }\r\n\r\n  static async GetCredentialsForSecurityToken(securityToken) {\r\n    const [error, response] = await to(\r\n      fetch(`${LoginHelper.CMS_URL}/REST/Contensis/Security/IsAuthenticated`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          securityToken: encodeURIComponent(securityToken),\r\n        }),\r\n      })\r\n    );\r\n    if (error) return [{ message: 'Failed to fetch credentials' }];\r\n    if (response.ok) {\r\n      const [parseError, body] = await to(response.json());\r\n      if (parseError) return [parseError];\r\n\r\n      const { LogonResult, ApplicationData = [] } = body;\r\n      if (LogonResult !== 0) {\r\n        return [\r\n          { message: 'Security token is invalid', data: ApplicationData },\r\n        ];\r\n      }\r\n      if (ApplicationData.length > 0) {\r\n        let refreshToken;\r\n        ApplicationData.forEach(item => {\r\n          if (item.Key === 'ContensisSecurityRefreshToken')\r\n            refreshToken = item.Value;\r\n        });\r\n        if (!refreshToken) {\r\n          return [\r\n            {\r\n              message:\r\n                'Fetch credentials: Unable to find ContensisSecurityRefreshToken',\r\n            },\r\n          ];\r\n        }\r\n        return [undefined, refreshToken];\r\n      } else {\r\n        return [\r\n          {\r\n            message:\r\n              'Fetch credentials: Unable to find ContensisSecurityRefreshToken',\r\n          },\r\n        ];\r\n      }\r\n    } else {\r\n      return [\r\n        {\r\n          message: `Fetch credentials error: ${response.status} ${response.statusText}`,\r\n        },\r\n      ];\r\n    }\r\n  }\r\n\r\n  static isZengentiStaff(email) {\r\n    const emailRefs = ['@zengenti', '@contensis'];\r\n\r\n    return emailRefs.some(emailRef => {\r\n      if (email.includes(emailRef)) {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Map } from 'immutable';\r\nimport { takeEvery, select, put, call } from 'redux-saga/effects';\r\nimport {\r\n  SET_AUTHENTICATION_STATE,\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  VALIDATE_USER,\r\n} from '../types';\r\nimport {\r\n  selectUserIsAuthenticated,\r\n  selectClientCredentials,\r\n  selectUserGroups,\r\n} from '../selectors';\r\n\r\nimport { setRoute } from '~/routing/redux/actions';\r\nimport { selectCurrentSearch } from '~/routing/redux/selectors';\r\nimport { findContentTypeMapping } from '~/routing/util/find-contenttype-mapping';\r\n\r\nimport mapClientCredentials from '~/user/transformations/mapClientCredentials';\r\n\r\nimport { getManagementApiClient } from '~/user/util/ContensisManagementApi';\r\nimport { LoginHelper } from '~/user/util/LoginHelper.class';\r\nimport { matchUserGroup } from '~/user/util/matchGroups';\r\nimport { queryParams } from '~/util/navigation';\r\n\r\nexport const loginSagas = [\r\n  takeEvery(LOGIN_USER, loginUserSaga),\r\n  takeEvery(LOGOUT_USER, logoutUserSaga),\r\n  takeEvery(VALIDATE_USER, validateUserSaga),\r\n  takeEvery(SET_AUTHENTICATION_STATE, redirectAfterSuccessfulLoginSaga),\r\n];\r\n\r\nexport function* handleRequiresLoginSaga(action) {\r\n  const {\r\n    entry,\r\n    requireLogin,\r\n    routes: { ContentTypeMappings },\r\n    staticRoute,\r\n  } = action;\r\n  let userLoggedIn = yield select(selectUserIsAuthenticated);\r\n\r\n  // Check for a securityToken in querystring\r\n  const currentQs = queryParams(yield select(selectCurrentSearch));\r\n  const securityToken = currentQs.securityToken || currentQs.securitytoken;\r\n\r\n  // Check if any of the defined routes have \"requireLogin\" attribute\r\n  const { requireLogin: authRoute } = (staticRoute && staticRoute.route) || {};\r\n  const { requireLogin: authContentType } =\r\n    (entry &&\r\n      findContentTypeMapping(ContentTypeMappings, entry.sys.contentTypeId)) ||\r\n    {};\r\n\r\n  // If requireLogin, authRoute or authContentType has been specified as an\r\n  // array of groups we can merge all the arrays and match on any group supplied\r\n  const routeRequiresGroups = [\r\n    ...((Array.isArray(authContentType) && authContentType) || []),\r\n    ...((Array.isArray(authRoute) && authRoute) || []),\r\n    ...((Array.isArray(requireLogin) && requireLogin) || []),\r\n  ];\r\n  const routeRequiresLogin = !!authContentType || !!authRoute || !!requireLogin;\r\n\r\n  if (!userLoggedIn) {\r\n    // If cookies or securityToken are found on any route change\r\n    // always validate and login the user\r\n    if (routeRequiresLogin) {\r\n      // If routeRequiresLogin do a blocking call that returns userLoggedIn\r\n      userLoggedIn = yield call(validateUserSaga, { securityToken });\r\n    }\r\n    // otherwise do a non blocking put to handle validation in the background\r\n    else yield put({ type: VALIDATE_USER, securityToken });\r\n  }\r\n\r\n  if (routeRequiresLogin) {\r\n    // If a security token is in the querystring and we are not already\r\n    // logged in something is wrong and we won't bother going on another redirect loop\r\n    if (!userLoggedIn && !securityToken) {\r\n      LoginHelper.ClientRedirectToSignInPage(action.location.pathname);\r\n    } else if (routeRequiresGroups.length > 0) {\r\n      const userGroups = (yield select(selectUserGroups)).toJS();\r\n      const groupMatch = matchUserGroup(userGroups, routeRequiresGroups);\r\n\r\n      if (!groupMatch)\r\n        LoginHelper.ClientRedirectToAccessDeniedPage(action.location.pathname);\r\n    }\r\n  }\r\n}\r\n\r\nfunction* validateUserSaga({ securityToken }) {\r\n  if (securityToken) {\r\n    // If we have just a security token we will call a CMS endpoint\r\n    // and provide us with a RefreshToken cookie we can use during login\r\n    const [error, refreshToken] =\r\n      yield LoginHelper.GetCredentialsForSecurityToken(securityToken);\r\n    if (refreshToken)\r\n      LoginHelper.SetLoginCookies({\r\n        contensisClassicToken: securityToken,\r\n        refreshToken,\r\n      });\r\n    if (error)\r\n      yield put({\r\n        type: SET_AUTHENTICATION_STATE,\r\n        authenticationState: {\r\n          error: { message: error.message, stack: error.stack },\r\n        },\r\n      });\r\n  }\r\n\r\n  // Check for refreshToken in cookies\r\n  const clientCredentials = LoginHelper.GetCachedCredentials();\r\n\r\n  // Log the user in if a refreshToken is found\r\n  if (clientCredentials.refreshToken)\r\n    yield call(loginUserSaga, { clientCredentials });\r\n\r\n  // Tell any callers have we successfully logged in?\r\n  return yield select(selectUserIsAuthenticated);\r\n}\r\n\r\nfunction* loginUserSaga(action = {}) {\r\n  const { username, password, clientCredentials } = action;\r\n\r\n  // If a WSFED_LOGIN site has dispatched the loginUser action\r\n  // just redirect them to the Identity Provider sign in\r\n  if (action.type === LOGIN_USER && LoginHelper.WSFED_LOGIN)\r\n    LoginHelper.ClientRedirectToSignInPage();\r\n\r\n  const { authenticationState, user } = yield LoginHelper.LoginUser({\r\n    username,\r\n    password,\r\n    clientCredentials,\r\n  });\r\n\r\n  yield put({\r\n    type: SET_AUTHENTICATION_STATE,\r\n    authenticationState,\r\n    user,\r\n  });\r\n}\r\nconst removeHostnamePart = path => {\r\n  // eslint-disable-next-line no-console\r\n  console.log(path);\r\n  const relativePath = '/' + path.split('/').splice(3).join('/');\r\n  // eslint-disable-next-line no-console\r\n  console.log(relativePath);\r\n  return relativePath;\r\n};\r\n\r\nfunction* redirectAfterSuccessfulLoginSaga() {\r\n  const isLoggedIn = yield select(selectUserIsAuthenticated);\r\n  const { redirect_uri: redirectPath, ReturnURL: assetRedirectPath } =\r\n    queryParams(yield select(selectCurrentSearch));\r\n\r\n  if (isLoggedIn && assetRedirectPath && typeof window != 'undefined') {\r\n    const path = removeHostnamePart(assetRedirectPath);\r\n    // This has to be a hard href to get the app to\r\n    // leave React and hit the server for the IIS hosted assets\r\n    window.location.href = path;\r\n    // yield put(setRoute(path)); // does not work in this scenario\r\n  } else if (isLoggedIn && redirectPath) {\r\n    yield put(setRoute(redirectPath));\r\n  }\r\n}\r\n\r\nfunction* logoutUserSaga({ redirectPath }) {\r\n  yield put({\r\n    type: SET_AUTHENTICATION_STATE,\r\n    user: null,\r\n  });\r\n  yield LoginHelper.LogoutUser(redirectPath);\r\n}\r\n\r\nexport function* refreshSecurityToken() {\r\n  const clientCredentials = (\r\n    (yield select(selectClientCredentials)) || Map()\r\n  ).toJS();\r\n  if (Object.keys(clientCredentials).length > 0) {\r\n    const client = yield getManagementApiClient(clientCredentials);\r\n    yield client.authenticate();\r\n\r\n    const authenticationState = {};\r\n\r\n    const newClientCredentials = mapClientCredentials(client);\r\n\r\n    authenticationState.clientCredentials = newClientCredentials;\r\n\r\n    yield put({\r\n      type: SET_AUTHENTICATION_STATE,\r\n      authenticationState,\r\n    });\r\n  }\r\n}\r\n"],"names":["findContentTypeMapping","ContentTypeMappings","contentTypeId","find","ct","contentTypeID","clientCredentials","bearerToken","bearerTokenExpiryDate","toISOString","refreshToken","refreshTokenExpiryDate","contensisClassicToken","obj","mapJson","getManagementApiClient","username","password","rootUrl","SERVERS","api","cms","projectId","PROJECTS","id","config","clientType","clientDetails","Client","client","create","COOKIE_VALID_DAYS","_cookie","Cookies","withConverter","read","value","decodeURIComponent","write","encodeURIComponent","CookieHelper","GetCookie","name","cookie","get","SetCookie","maxAgeDays","set","expires","DeleteCookie","remove","context","window","global","requireOidc","process","env","NODE_ENV","WSFED_LOGIN","servers","userManagerConfig","authority","client_id","redirect_uri","location","toString","post_logout_redirect_uri","response_type","scope","filterProtocolClaims","createUserManager","UserManager","e","console","log","LOGIN_COOKIE","REFRESH_TOKEN_COOKIE","LoginHelper","SetLoginCookies","info","GetCachedCredentials","ClearCachedCredentials","LoginUser","credentials","authenticationState","authenticated","authenticationError","error","transientClient","user","loginError","clientBearerToken","to","ensureBearerToken","includes","mapClientCredentials","userDetails","GetUserDetails","message","stack","latestCredentials","LogoutUser","redirectPath","WsFedLogout","ClientRedirectToPath","ClientRedirectToSignInPage","ClientRedirectToHome","url","search","hash","toJS","href","WsFedLogin","LOGIN_ROUTE","replace","ClientRedirectToAccessDeniedPage","originalPath","ACCESS_DENIED_ROUTE","redirectUri","userManager","signinRedirect","fetch","CMS_URL","GetCredentialsForSecurityToken","securityToken","response","method","headers","Accept","body","JSON","stringify","ok","parseError","json","LogonResult","ApplicationData","data","length","forEach","item","Key","Value","undefined","status","statusText","isZengentiStaff","email","emailRefs","some","emailRef","userError","groupsError","groupsResult","security","users","getCurrent","getUserGroups","userId","includeInherited","items","groups","loginSagas","takeEvery","LOGIN_USER","loginUserSaga","LOGOUT_USER","logoutUserSaga","VALIDATE_USER","validateUserSaga","SET_AUTHENTICATION_STATE","redirectAfterSuccessfulLoginSaga","handleRequiresLoginSaga","action","entry","requireLogin","routes","staticRoute","userLoggedIn","select","selectUserIsAuthenticated","currentQs","queryParams","selectCurrentSearch","securitytoken","authRoute","route","authContentType","sys","routeRequiresGroups","Array","isArray","routeRequiresLogin","call","put","type","pathname","userGroups","selectUserGroups","groupMatch","matchUserGroup","removeHostnamePart","path","relativePath","split","splice","join","isLoggedIn","ReturnURL","assetRedirectPath","setRoute","refreshSecurityToken","selectClientCredentials","Map","Object","keys","authenticate","newClientCredentials"],"mappings":"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"}