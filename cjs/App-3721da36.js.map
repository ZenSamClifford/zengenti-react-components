{"version":3,"file":"App-3721da36.js","sources":["../src/app/core/redux/history.js","../src/app/core/util/pickProject.js","../src/app/core/util/ContensisDeliveryApi.js","../src/app/core/redux/reducers/routing.js","../src/app/core/redux/reducers/version.js","../src/app/core/redux/reducers/navigation.js","../src/app/core/redux/routerMiddleware.js","../src/app/core/redux/store.js","../src/app/core/schema.js","../src/app/core/search/expressions.js","../src/app/core/redux/sagas/queries.js","../src/app/core/redux/sagas/routing.js","../src/app/core/redux/sagas/navigation.js","../src/app/core/redux/sagas/index.js","../src/app/App.js"],"sourcesContent":["import { createBrowserHistory, createMemoryHistory } from 'history';\r\n\r\n// Create a history depending on the environment\r\nconst selectedHistory =\r\n  typeof window !== 'undefined' ? createBrowserHistory : createMemoryHistory;\r\n\r\nexport const history = (options = {}) => selectedHistory(options);\r\nexport const browserHistory = selectedHistory();\r\n","const servers = SERVERS; /* global SERVERS */\r\nconst alias = servers.alias.toLowerCase();\r\nconst publicUri = PUBLIC_URI; /* global PUBLIC_URI */\r\nconst projects = PROJECTS; /* global PROJECTS */\r\n\r\n// return a projectId via the request hostname\r\nconst pickProject = (hostname, query) => {\r\n  // if localhost we can only infer via a querystring, and take your word for it\r\n  if (hostname == 'localhost') {\r\n    return (query && query.p) || projects[0].id;\r\n  }\r\n\r\n  // if hostname is the actual public uri we can return the first project from the list\r\n  if (hostname == publicUri) {\r\n    return projects[0].id;\r\n  }\r\n\r\n  let project = 'unknown';\r\n\r\n  // // go through all the defined projects\r\n  // Object.entries(projects).map(([, p]) => {\r\n  const p = projects[0];\r\n\r\n  // check if we're accessing via the project's public uri\r\n  if (hostname.includes(p.publicUri)) project = p.id;\r\n\r\n  // the url structure is different for website (we don't prefix)\r\n  if (p.id.startsWith('website')) {\r\n    // check for internal and external hostnames\r\n    // we check live and preview distinctly so our rule does not clash with\r\n    // hostnames that use a project prefix\r\n    if (\r\n      hostname.includes(`live-${alias}.cloud.contensis.com`) ||\r\n      hostname.includes(`live.${alias}.contensis.cloud`) ||\r\n      hostname.includes(`preview-${alias}.cloud.contensis.com`) ||\r\n      hostname.includes(`preview.${alias}.contensis.cloud`)\r\n    )\r\n      project = p.id;\r\n  } else {\r\n    // check for internal and external hostnames, prefixed with the projectId\r\n    if (\r\n      hostname.includes(`${p.id.toLowerCase()}-${alias}.cloud.contensis.com`) ||\r\n      hostname.includes(`${p.id.toLowerCase()}.${alias}.contensis.cloud`)\r\n    )\r\n      project = p.id;\r\n  }\r\n  // });\r\n  return project === 'unknown' ? p.id : project;\r\n};\r\n\r\nexport default pickProject;\r\n","import { Client } from 'contensis-delivery-api';\r\n\r\nconst getClientConfig = project => {\r\n  let config = DELIVERY_API_CONFIG; /* global DELIVERY_API_CONFIG */\r\n  if (project) {\r\n    config.projectId = project;\r\n  }\r\n\r\n  if (\r\n    typeof window != 'undefined' &&\r\n    PROXY_DELIVERY_API /* global PROXY_DELIVERY_API */\r\n  ) {\r\n    // ensure a relative url is used to bypass the need for CORS (separate OPTIONS calls)\r\n    config.rootUrl = '';\r\n    config.responseHandler = {\r\n      404: () => null,\r\n    };\r\n  }\r\n  return config;\r\n};\r\n\r\nexport * from 'contensis-delivery-api';\r\n\r\n// This should only be executed on the client as it relies on the window.\r\nexport const GetClientSideDeliveryApiStatus = () => {\r\n  if (typeof window != 'undefined') {\r\n    const currentHostname = window.location.hostname;\r\n    return GetDeliveryApiStatusFromHostname(currentHostname);\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const GetDeliveryApiStatusFromHostname = currentHostname => {\r\n  if (currentHostname.indexOf('localhost') > -1) return 'latest';\r\n\r\n  if (currentHostname.endsWith('contensis.cloud')) {\r\n    if (currentHostname.indexOf('preview.') > -1) {\r\n      return 'latest';\r\n    } else {\r\n      return 'published';\r\n    }\r\n  }\r\n\r\n  if (currentHostname.endsWith('cloud.contensis.com')) {\r\n    if (currentHostname.indexOf('preview-') > -1) {\r\n      return 'latest';\r\n    } else {\r\n      return 'published';\r\n    }\r\n  }\r\n\r\n  return 'published';\r\n};\r\n\r\nexport const GetResponseGuids = object => {\r\n  let Ids = [];\r\n  Object.keys(object).some(function(k) {\r\n    if (k === 'sys') {\r\n      //Should always have an ID, but lets check...\r\n      if (object[k].id && object[k].language) {\r\n        // We can exclude assets here i think... ?\r\n        if (object[k].dataFormat) {\r\n          if (object[k].dataFormat !== 'asset') {\r\n            Ids.push(`${object[k].id}_${object[k].language.toLowerCase()}`);\r\n          }\r\n        } else {\r\n          // If we don't have a dataformat add it anyhow, for safety\r\n          Ids.push(`${object[k].id}_${object[k].language.toLowerCase()}`);\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n    if (object[k] && typeof object[k] === 'object') {\r\n      let subIds = GetResponseGuids(object[k]);\r\n      if (subIds.length > 0) {\r\n        Ids.push(...subIds);\r\n      }\r\n      return false;\r\n    }\r\n  });\r\n  return Ids;\r\n};\r\n\r\nexport const GetAllResponseGuids = object => {\r\n  if (!object) return [];\r\n  let returnItems = GetResponseGuids(object);\r\n  let unique = new Set(returnItems);\r\n  return unique;\r\n};\r\nclass DeliveryApi {\r\n  search(query, linkDepth, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return client.entries.search(\r\n      query,\r\n      typeof linkDepth !== 'undefined' ? linkDepth : 1\r\n    );\r\n  }\r\n\r\n  getClient(deliveryApiStatus = 'published', project, env) {\r\n    const baseConfig = getClientConfig(project, env);\r\n    baseConfig.versionStatus = deliveryApiStatus;\r\n    return Client.create(baseConfig);\r\n  }\r\n  getEntry(id, linkDepth = 0, deliveryApiStatus = 'published', project, env) {\r\n    const baseConfig = getClientConfig(project, env);\r\n    baseConfig.versionStatus = deliveryApiStatus;\r\n    const client = Client.create(baseConfig);\r\n    // return client.entries.get(id, linkDepth);\r\n    return client.entries.get({ id, linkDepth });\r\n  }\r\n}\r\n\r\nexport const deliveryApi = new DeliveryApi();\r\n\r\nclass CacheNode {\r\n  constructor(key, value) {\r\n    this.key = key;\r\n    this.value = value;\r\n    this.next = null;\r\n    this.prev = null;\r\n  }\r\n}\r\n\r\nclass LruCache {\r\n  constructor(limit = 100) {\r\n    this.map = {};\r\n    this.head = null;\r\n    this.tail = null;\r\n    this.limit = limit || 100;\r\n    this.size = 0;\r\n  }\r\n\r\n  get(key) {\r\n    if (this.map[key]) {\r\n      let value = this.map[key].value;\r\n      let node = new CacheNode(key, value);\r\n      this.remove(key);\r\n      this.setHead(node);\r\n      return value;\r\n    }\r\n  }\r\n\r\n  set(key, value) {\r\n    let node = new CacheNode(key, value);\r\n    if (this.map[key]) {\r\n      this.remove(key);\r\n    } else {\r\n      if (this.size >= this.limit) {\r\n        delete this.map[this.tail.key];\r\n        this.size--;\r\n        this.tail = this.tail.prev;\r\n        this.tail.next = null;\r\n      }\r\n    }\r\n    this.setHead(node);\r\n  }\r\n\r\n  setHead(node) {\r\n    node.next = this.head;\r\n    node.prev = null;\r\n    if (this.head) {\r\n      this.head.prev = node;\r\n    }\r\n    this.head = node;\r\n    if (!this.tail) {\r\n      this.tail = node;\r\n    }\r\n    this.size++;\r\n    this.map[node.key] = node;\r\n  }\r\n\r\n  remove(key) {\r\n    let node = this.map[key];\r\n    if (node.prev) {\r\n      node.prev.next = node.next;\r\n    } else {\r\n      this.head = node.next;\r\n    }\r\n    if (node.next) {\r\n      node.next.prev = node.prev;\r\n    } else {\r\n      this.tail = node.prev;\r\n    }\r\n    delete this.map[key];\r\n    this.size--;\r\n  }\r\n}\r\n\r\nclass CachedSearch {\r\n  cache = new LruCache();\r\n  taxonomyLookup = {};\r\n\r\n  search(query, linkDepth, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      project + JSON.stringify(query) + linkDepth.toString(),\r\n      () => client.entries.search(query, linkDepth)\r\n    );\r\n  }\r\n\r\n  get(id, linkDepth, versionStatus, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    client.clientConfig.versionStatus = versionStatus;\r\n    return this.request(id, () => client.entries.get({ id, linkDepth }));\r\n  }\r\n\r\n  getContentType(id, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`[CONTENT TYPE] ${id} ${project}`, () =>\r\n      client.contentTypes.get(id)\r\n    );\r\n  }\r\n\r\n  getTaxonomyNode(key, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`[TAXONOMY NODE] ${key}`, () =>\r\n      client.taxonomy\r\n        .resolveChildren(key)\r\n        .then(node => this.extendTaxonomyNode(node))\r\n    );\r\n  }\r\n\r\n  getRootNode(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`${project} / ${JSON.stringify(options)}`, () =>\r\n      client.nodes.getRoot(options)\r\n    );\r\n  }\r\n\r\n  getNode(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} ${(options && options.path) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.get(options)\r\n    );\r\n  }\r\n\r\n  getAncestors(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} [A] ${(options && options.id) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.getAncestors(options)\r\n    );\r\n  }\r\n\r\n  getChildren(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} [C] ${(options && options.id) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.getChildren(options)\r\n    );\r\n  }\r\n\r\n  getSiblings(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} [S] ${(options && options.id) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.getSiblings(options)\r\n    );\r\n  }\r\n\r\n  request(key, execute) {\r\n    if (!this.cache.get(key) || typeof window == 'undefined') {\r\n      let promise = execute();\r\n      this.cache.set(key, promise);\r\n      promise.catch(() => {\r\n        this.cache.remove(key);\r\n      });\r\n    }\r\n    return this.cache.get(key);\r\n  }\r\n\r\n  extendTaxonomyNode(node) {\r\n    let id = this.getTaxonomyId(node);\r\n    this.taxonomyLookup[id] = node.key;\r\n    return {\r\n      ...node,\r\n      id,\r\n      children: node.children\r\n        ? node.children.map(n => this.extendTaxonomyNode(n))\r\n        : null,\r\n    };\r\n  }\r\n\r\n  getTaxonomyId(node) {\r\n    if (node.key) {\r\n      let parts = node.key.split('/');\r\n      return parts[parts.length - 1];\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getTaxonomyKey(id) {\r\n    return this.taxonomyLookup[id];\r\n  }\r\n}\r\n\r\nexport const cachedSearch = new CachedSearch();\r\n","import { OrderedMap, fromJS, List, Set } from 'immutable';\r\nimport {\r\n  MAP_ENTRY,\r\n  SET_ENTRY,\r\n  SET_NAVIGATION_PATH,\r\n  SET_ANCESTORS,\r\n  SET_TARGET_PROJECT,\r\n  SET_ROUTE,\r\n  SET_SIBLINGS,\r\n} from '~/core/redux/types/routing';\r\nimport { GetAllResponseGuids } from '~/core/util/ContensisDeliveryApi';\r\n\r\nlet initialState = OrderedMap({\r\n  contentTypeId: null,\r\n  currentPath: '/',\r\n  currentNode: [],\r\n  currentNodeAncestors: List(),\r\n  currentProject: 'unknown',\r\n  currentTreeId: null,\r\n  entry: null,\r\n  entryDepends: List(),\r\n  entryID: null,\r\n  isLoading: false,\r\n  location: null,\r\n  mappedEntry: null,\r\n  nodeDepends: List(),\r\n  notFound: false,\r\n  staticRoute: null,\r\n});\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case MAP_ENTRY: {\r\n      return state.set('mappedEntry', fromJS(action.mappedEntry));\r\n    }\r\n    case SET_ANCESTORS: {\r\n      if (action.ancestors) {\r\n        let ancestorIDs = action.ancestors.map(node => {\r\n          return node.id;\r\n        });\r\n\r\n        let currentNodeDepends = state.get('nodeDepends');\r\n        const allNodeDepends = Set.union([\r\n          Set(ancestorIDs),\r\n          currentNodeDepends,\r\n        ]);\r\n        return state\r\n          .set('nodeDepends', allNodeDepends)\r\n          .set('currentNodeAncestors', fromJS(action.ancestors));\r\n      }\r\n      return state.set('currentNodeAncestors', fromJS(action.ancestors));\r\n    }\r\n    case SET_ENTRY: {\r\n      const { entry, node = {}, isLoading = false } = action;\r\n      let nextState;\r\n\r\n      if (!entry) {\r\n        nextState = state\r\n          .set('entryID', null)\r\n          .set('entryDepends', null)\r\n          .set('entry', null)\r\n          .set('mappedEntry', null)\r\n          .set('isLoading', isLoading);\r\n      } else {\r\n        const entryDepends = GetAllResponseGuids(entry);\r\n        nextState = state\r\n          .set('entryID', action.id)\r\n          .set('entryDepends', fromJS(entryDepends))\r\n          .set('entry', fromJS(entry))\r\n          .set('isLoading', isLoading);\r\n      }\r\n\r\n      if (!node) {\r\n        return nextState.set('nodeDepends', null).set('currentNode', null);\r\n      } else {\r\n        // On Set Node, we reset all dependants.\r\n        const nodeDepends = Set([node.id]);\r\n        return nextState\r\n          .set('nodeDepends', nodeDepends)\r\n          .set('currentNode', fromJS(node))\r\n          .removeIn(['currentNode', 'entry']); // We have the entry stored elsewhere, so lets not keep it twice.\r\n      }\r\n    }\r\n    // case SET_ENTRY_ID: {\r\n    //   if (action.id === '') {\r\n    //     return state;\r\n    //   }\r\n    //   return state.set('entryID', action.id);\r\n    // }\r\n    case SET_NAVIGATION_PATH: {\r\n      let staticRoute = false;\r\n      if (action.staticRoute) {\r\n        staticRoute = { ...action.staticRoute };\r\n      }\r\n      if (action.path) {\r\n        return state\r\n          .set('currentPath', fromJS(action.path))\r\n          .set('location', fromJS(action.location))\r\n          .set(\r\n            'staticRoute',\r\n            fromJS({\r\n              ...staticRoute,\r\n              route: { ...staticRoute.route, component: null },\r\n            })\r\n          )\r\n          .set('isLoading', typeof window !== 'undefined');\r\n      }\r\n      return state;\r\n    }\r\n    // case SET_NAVIGATION_NOT_FOUND: {\r\n    //   return state\r\n    //     .set('notFound', fromJS(action.notFound))\r\n    //     .set('isLoading', false);\r\n    // }\r\n    // case SET_NODE: {\r\n    //   const { node } = action;\r\n    //   if (!node) return state;\r\n    //   // On Set Node, we reset all dependants.\r\n    //   const nodeDepends = Set([node.id]);\r\n    //   return state\r\n    //     .set('nodeDepends', nodeDepends)\r\n    //     .set('currentNode', fromJS(action.node))\r\n    //     .removeIn(['currentNode', 'entry']); // We have the entry stored elsewhere, so lets not keep it twice.\r\n    // }\r\n    case SET_ROUTE: {\r\n      return state.set('nextPath', action.path);\r\n    }\r\n    case SET_SIBLINGS: {\r\n      // Can be null in some cases like the homepage.\r\n      let currentNodeSiblingParent = null;\r\n      let siblingIDs = [];\r\n      if (action.siblings && action.siblings.length > 0) {\r\n        currentNodeSiblingParent = action.siblings[0].parentId;\r\n        siblingIDs = action.siblings.map(node => {\r\n          return node.id;\r\n        });\r\n      }\r\n      let currentNodeDepends = state.get('nodeDepends');\r\n      const allNodeDepends = Set.union([Set(siblingIDs), currentNodeDepends]);\r\n      return state\r\n        .set('nodeDepends', allNodeDepends)\r\n        .set('currentNodeSiblings', fromJS(action.siblings))\r\n        .set('currentNodeSiblingsParent', currentNodeSiblingParent);\r\n    }\r\n    case SET_TARGET_PROJECT: {\r\n      return state\r\n        .set('currentProject', action.project)\r\n        .set('currentTreeId', '') //getTreeID(action.project))\r\n        .set('allowedGroups', fromJS(action.allowedGroups));\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Map } from 'immutable';\r\nimport { SET_VERSION, SET_VERSION_STATUS } from '~/core/redux/types/version';\r\n\r\nlet initialState = Map({\r\n  commitRef: null,\r\n  buildNo: null,\r\n  contensisVersionStatus: 'published',\r\n});\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_VERSION_STATUS: {\r\n      return state.set('contensisVersionStatus', action.status);\r\n    }\r\n    case SET_VERSION: {\r\n      return state\r\n        .set('commitRef', action.commitRef)\r\n        .set('buildNo', action.buildNo);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Map, fromJS, List } from 'immutable';\r\n\r\nimport {\r\n  SET_NODE_TREE,\r\n  GET_NODE_TREE_ERROR,\r\n} from '~/core/redux/types/navigation';\r\n\r\nconst initialState = Map({\r\n  root: null,\r\n  treeDepends: new List([]),\r\n  isError: false,\r\n  isReady: false,\r\n});\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_NODE_TREE: {\r\n      return state.set('root', fromJS(action.nodes)).set('isReady', true);\r\n    }\r\n    case GET_NODE_TREE_ERROR: {\r\n      return state.set('isError', true);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { CALL_HISTORY_METHOD } from '~/core/redux/types/routing';\r\n\r\n/**\r\n * This middleware captures CALL_HISTORY_METHOD actions to redirect to the\r\n * provided history object. This will prevent these actions from reaching your\r\n * reducer or any middleware that comes after this one.\r\n */\r\n/* eslint-disable no-unused-vars */\r\nconst routerMiddleware = history => store => next => action => {\r\n  if (action.type !== CALL_HISTORY_METHOD) {\r\n    return next(action);\r\n  }\r\n\r\n  const {\r\n    payload: { method, args },\r\n  } = action;\r\n  history[method](...args);\r\n};\r\n\r\nexport default routerMiddleware;\r\n","import { compose, createStore, applyMiddleware } from 'redux';\r\nimport { combineReducers } from 'redux-immutable';\r\nimport thunk from 'redux-thunk';\r\nimport createSagaMiddleware, { END } from 'redux-saga';\r\n\r\n// Core reducers\r\nimport RoutingReducer from './reducers/routing';\r\nimport { reducer as UserReducer } from '~/features/login';\r\nimport VersionReducer from './reducers/version';\r\nimport NavigationReducer from './reducers/navigation';\r\nimport routerMiddleware from './routerMiddleware';\r\n\r\nexport default (featureReducers, initialState, history) => {\r\n  const thunkMiddleware = [thunk];\r\n\r\n  let reduxDevToolsMiddleware = f => f;\r\n\r\n  if (typeof window != 'undefined') {\r\n    reduxDevToolsMiddleware = window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : f => f;\r\n  }\r\n\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middleware = compose(\r\n    applyMiddleware(\r\n      ...thunkMiddleware,\r\n      sagaMiddleware,\r\n      routerMiddleware(history)\r\n    ),\r\n    reduxDevToolsMiddleware\r\n  );\r\n\r\n  let reducers = {\r\n    navigation: NavigationReducer,\r\n    routing: RoutingReducer,\r\n    user: UserReducer,\r\n    version: VersionReducer,\r\n    ...featureReducers,\r\n  };\r\n\r\n  const combinedReducers = combineReducers(reducers);\r\n\r\n  const store = initialState => {\r\n    const store = createStore(combinedReducers, initialState, middleware);\r\n    store.runSaga = sagaMiddleware.run;\r\n    store.close = () => store.dispatch(END);\r\n    return store;\r\n  };\r\n\r\n  return store(initialState);\r\n};\r\n","export const DataFormats = {\r\n  entry: 'entry',\r\n  webpage: 'webpage',\r\n};\r\n\r\nconst sys = {\r\n  contentTypeId: 'sys.contentTypeId',\r\n  dataFormat: 'sys.dataFormat',\r\n  filename: 'sys.properties.filename',\r\n  id: 'sys.id',\r\n  includeInSearch: 'sys.metadata.includeInSearch',\r\n  slug: 'sys.slug',\r\n  uri: 'sys.uri',\r\n  versionStatus: 'sys.versionStatus',\r\n};\r\n\r\nexport const Fields = {\r\n  entryTitle: 'entryTitle',\r\n  entryDescription: 'entryDescription',\r\n  keywords: 'keywords',\r\n  sys,\r\n  contentTypeId: 'sys.contentTypeId',\r\n  wildcard: '*',\r\n};\r\n\r\nexport const Projects = {\r\n  website: 'website',\r\n};\r\n\r\nexport const VersionStatus = {\r\n  published: 'published',\r\n  latest: 'latest',\r\n};\r\n\r\nexport const ContentTypes = {\r\n  contentPage: 'contentPage',\r\n};\r\n\r\nexport const WebpageFormats = {};\r\n\r\nexport const FilterExpressionTypes = {\r\n  contentType: 'contentType',\r\n  field: 'field',\r\n};\r\n","import { Op, OrderBy } from 'contensis-delivery-api';\r\nimport { Fields, DataFormats } from '~/core/schema';\r\nimport {\r\n  fixFreeTextForElastic,\r\n  extractQuotedPhrases,\r\n} from '~/core/search/util';\r\n\r\nexport const fieldExpression = (\r\n  field,\r\n  value,\r\n  operator = 'equalTo',\r\n  weight = null\r\n) => {\r\n  if (!field || !value) return [];\r\n  if (Array.isArray(value)) return equalToOrIn(field, value, operator);\r\n  else\r\n    return !weight\r\n      ? [Op[operator](field, value)]\r\n      : [Op[operator](field, value).weight(weight)];\r\n};\r\n\r\nexport const contentTypeIdExpression = (contentTypeIds, webpageTemplates) => {\r\n  const expressions = [];\r\n  if (!contentTypeIds && !webpageTemplates) return expressions;\r\n\r\n  if (contentTypeIds && contentTypeIds.length > 0) {\r\n    expressions.push(\r\n      ...dataFormatExpression(contentTypeIds, DataFormats.entry)\r\n    );\r\n  }\r\n\r\n  if (webpageTemplates && webpageTemplates.length > 0) {\r\n    expressions.push(\r\n      ...dataFormatExpression(webpageTemplates, DataFormats.webpage)\r\n    );\r\n  }\r\n\r\n  if (expressions.length > 1) return [Op.or(...expressions)];\r\n\r\n  return expressions;\r\n};\r\n\r\nexport const filterExpressions = filters => {\r\n  if (!filters) return [];\r\n  const expressions = [];\r\n\r\n  filters.map(param => {\r\n    expressions.push(...fieldExpression(param.key, param.value, 'contains'));\r\n  });\r\n\r\n  return expressions;\r\n};\r\n\r\nexport const dataFormatExpression = (\r\n  contentTypeIds,\r\n  dataFormat = DataFormats.entry\r\n) => {\r\n  if (contentTypeIds && contentTypeIds.length > 0) {\r\n    /**\r\n     * We have an array of contentTypeIds some may be prefixed with a \"!\"\r\n     * to indicate this is a \"not\" expression\r\n     */\r\n    const withContentTypeIds = contentTypeIds.filter(c => !c.startsWith('!'));\r\n    const notContentTypeIds = contentTypeIds\r\n      .filter(c => c.startsWith('!'))\r\n      .map(id => id.substring(1));\r\n\r\n    const andExpr = Op.and();\r\n\r\n    const dataFormatExpr = fieldExpression(Fields.sys.dataFormat, dataFormat);\r\n\r\n    const withExpr = fieldExpression(\r\n      Fields.sys.contentTypeId,\r\n      withContentTypeIds\r\n    );\r\n\r\n    const notExpr = [\r\n      Op.not(...fieldExpression(Fields.sys.contentTypeId, notContentTypeIds)),\r\n    ];\r\n\r\n    andExpr.add(...dataFormatExpr);\r\n    if (withContentTypeIds.length > 0) andExpr.add(...withExpr);\r\n    if (notContentTypeIds.length > 0) andExpr.add(...notExpr);\r\n\r\n    return [andExpr];\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const defaultExpressions = versionStatus => {\r\n  return [Op.equalTo(Fields.sys.versionStatus, versionStatus)];\r\n};\r\n\r\nexport const defaultSearchExpressions = versionStatus => {\r\n  return [\r\n    ...defaultExpressions(versionStatus),\r\n    ...includeInSearchExpressions(),\r\n  ];\r\n};\r\nexport const includeInSearchExpressions = () => [\r\n  Op.or(\r\n    Op.and(\r\n      Op.exists(Fields.sys.includeInSearch, true),\r\n      Op.equalTo(Fields.sys.includeInSearch, true)\r\n    ),\r\n    Op.exists(Fields.sys.includeInSearch, false)\r\n  ),\r\n];\r\n\r\nexport const orderByExpression = orderBy => {\r\n  let expression = OrderBy;\r\n  if (orderBy && orderBy.length > 0) {\r\n    orderBy.map(\r\n      ob =>\r\n        (expression = ob.startsWith('-')\r\n          ? expression.desc(ob.substring(1))\r\n          : expression.asc(ob))\r\n    );\r\n  }\r\n  return expression;\r\n};\r\n\r\nconst equalToOrIn = (field, arr, operator = 'equalTo') =>\r\n  arr.length === 0\r\n    ? []\r\n    : arr.length === 1\r\n    ? [Op[operator](field, arr[0])]\r\n    : [Op.in(field, ...arr)];\r\n\r\nexport const customWhereExpressions = where => {\r\n  if (!where || !Array.isArray(where)) return [];\r\n\r\n  // Accept HTTP style objects and map them to\r\n  // their equivalent JS client \"Op\" expressions\r\n  return where.map(clause => {\r\n    let expression;\r\n    Object.keys(clause).map((key, idx) => {\r\n      if (idx === 1) {\r\n        const operator = key;\r\n        const value = clause[key];\r\n        expression = Op[operator](clause.field, value, clause.weight);\r\n      }\r\n    });\r\n    return expression;\r\n  });\r\n};\r\n\r\nexport const termExpressions = (searchTerm, weightedSearchFields) => {\r\n  if (searchTerm && weightedSearchFields && weightedSearchFields.length > 0) {\r\n    // Extract any phrases in quotes to array\r\n    const quotedPhrases = extractQuotedPhrases(searchTerm);\r\n\r\n    // Modify the search term to remove any quoted phrases to leave any remaining terms\r\n    let modifiedSearchTerm = searchTerm;\r\n    quotedPhrases.forEach(\r\n      qp =>\r\n        (modifiedSearchTerm = modifiedSearchTerm\r\n          .replace(qp, '')\r\n          .replace('\"\"', '')\r\n          .trim())\r\n    );\r\n\r\n    // Push to the operators array to include in the query\r\n    const operators = [];\r\n\r\n    // Helper functions to generate Op expressions\r\n    const containsOp = (f, term) =>\r\n      fieldExpression(\r\n        f.fieldId,\r\n        fixFreeTextForElastic(term),\r\n        'contains',\r\n        f.weight\r\n      );\r\n    const freeTextOp = (f, term) =>\r\n      fieldExpression(\r\n        f.fieldId,\r\n        fixFreeTextForElastic(term),\r\n        'freeText',\r\n        f.weight\r\n      );\r\n\r\n    // For each weighted search field\r\n    weightedSearchFields.forEach(f => {\r\n      // Push to field operators\r\n      const fieldOperators = [];\r\n\r\n      // Add operator expressions for modified search term\r\n      if (modifiedSearchTerm) {\r\n        if (\r\n          [Fields.keywords, Fields.sys.filename, Fields.sys.uri].includes(\r\n            f.fieldId\r\n          )\r\n        ) {\r\n          fieldOperators.push(...containsOp(f, modifiedSearchTerm));\r\n        } else {\r\n          if ([Fields.entryTitle].includes(f.fieldId)) {\r\n            fieldOperators.push(\r\n              Op.or(\r\n                ...containsOp(f, modifiedSearchTerm),\r\n                ...freeTextOp(f, modifiedSearchTerm)\r\n              )\r\n            );\r\n          } else {\r\n            fieldOperators.push(...freeTextOp(f, modifiedSearchTerm));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Add operator expressions for any quoted phrases\r\n      quotedPhrases.forEach(qp => fieldOperators.push(...containsOp(f, qp)));\r\n\r\n      // If we are using multiple operators for a field we will\r\n      // wrap each field inside an And operator so we will match\r\n      // all terms/phrases rather than any terms/phrases\r\n      if (fieldOperators.length > 1) {\r\n        operators.push(Op.and(...fieldOperators));\r\n      } else {\r\n        operators.push(...fieldOperators);\r\n      }\r\n    });\r\n\r\n    // Wrap operators in an Or operator\r\n    return [Op.or().addRange(operators)];\r\n  } else if (searchTerm) {\r\n    return [Op.contains(Fields.wildcard, searchTerm)];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n","// eslint-disable-next-line import/named\r\nimport { Query } from '~/core/util/ContensisDeliveryApi';\r\nimport { fieldExpression, defaultExpressions } from '~/core/search/expressions';\r\n\r\nexport const routeEntryByFieldsQuery = (\r\n  id,\r\n  fields = [],\r\n  versionStatus = 'published'\r\n) => {\r\n  const query = new Query(\r\n    ...[...fieldExpression('sys.id', id), ...defaultExpressions(versionStatus)]\r\n  );\r\n  query.fields = fields;\r\n  return query;\r\n};\r\n","// load-entries.js\r\nimport * as log from 'loglevel';\r\nimport { takeEvery, put, select, call, all } from 'redux-saga/effects';\r\nimport {\r\n  // SET_ENTRY_ID,\r\n  // SET_NAVIGATION_NOT_FOUND,\r\n  // SET_NODE,\r\n  SET_ENTRY,\r\n  SET_ANCESTORS,\r\n  SET_NAVIGATION_PATH,\r\n  SET_ROUTE,\r\n  CALL_HISTORY_METHOD,\r\n  SET_SIBLINGS,\r\n  MAP_ENTRY,\r\n} from '~/core/redux/types/routing';\r\nimport { cachedSearch, deliveryApi } from '~/core/util/ContensisDeliveryApi';\r\nimport { selectVersionStatus } from '~/core/redux/selectors/version';\r\nimport {\r\n  selectCurrentNode,\r\n  selectCurrentPath,\r\n  selectCurrentProject,\r\n  selectRouteEntry,\r\n} from '~/core/redux/selectors/routing';\r\nimport { GET_NODE_TREE } from '../types/navigation';\r\nimport { hasNavigationTree } from '../selectors/navigation';\r\nimport { routeEntryByFieldsQuery } from './queries';\r\n\r\nexport const routingSagas = [\r\n  takeEvery(SET_NAVIGATION_PATH, getRouteSaga),\r\n  takeEvery(SET_ROUTE, setRouteSaga),\r\n];\r\n\r\n/**\r\n * To navigate / push a specific route via redux middleware\r\n * @param {path, state} action\r\n */\r\nfunction* setRouteSaga(action) {\r\n  yield put({\r\n    type: CALL_HISTORY_METHOD,\r\n    payload: {\r\n      method: 'push',\r\n      args: [action.path, action.state],\r\n    },\r\n  });\r\n}\r\n\r\nfunction* getRouteSaga(action) {\r\n  let entry = null;\r\n  try {\r\n    const {\r\n      withEvents,\r\n      routes: { ContentTypeMappings = {} } = {},\r\n      staticRoute,\r\n    } = action;\r\n    let appsays;\r\n    if (withEvents && withEvents.onRouteLoad) {\r\n      appsays = yield withEvents.onRouteLoad(action);\r\n    }\r\n    // if appsays customNavigation: true, we will set doNavigation to false\r\n    // if appsays customNavigation: { ... }, we will set doNavigation to the customNavigation object and check for child elements\r\n    // if appsays nothing we will set doNavigation to true and continue to do navigation calls\r\n    const doNavigation =\r\n      !appsays ||\r\n      (appsays && appsays.customNavigation === true\r\n        ? false\r\n        : (appsays && appsays.customNavigation) || true);\r\n\r\n    const entryLinkDepth = (appsays && appsays.entryLinkDepth) || 3;\r\n    const setContentTypeLimits = !!ContentTypeMappings.find(\r\n      ct => ct.fields || ct.linkDepth\r\n    );\r\n\r\n    const state = yield select();\r\n    const routeEntry = selectRouteEntry(state);\r\n    const routeNode = selectCurrentNode(state);\r\n    const currentPath = selectCurrentPath(state);\r\n    const deliveryApiStatus = selectVersionStatus(state);\r\n    const project = selectCurrentProject(state);\r\n    const isHome = currentPath === '/';\r\n    const isPreview = currentPath && currentPath.startsWith('/preview/');\r\n\r\n    if (\r\n      !isPreview &&\r\n      ((appsays && appsays.customRouting) ||\r\n        (staticRoute && !staticRoute.route.fetchNode) ||\r\n        (routeEntry && action.statePath === action.path))\r\n    ) {\r\n      // To prevent erroneous 404s and wasted network calls, this covers\r\n      // - appsays customRouting and does SET_ENTRY etc. via the consuming app\r\n      // - all staticRoutes (where custom 'route.fetchNode' attribute is falsey)\r\n      // - standard Contensis SiteView Routing where we already have that entry in state\r\n      if (\r\n        routeEntry &&\r\n        (!staticRoute || (staticRoute.route && staticRoute.route.fetchNode))\r\n      ) {\r\n        entry = routeEntry.toJS();\r\n        yield put({\r\n          type: SET_ENTRY,\r\n          entry,\r\n          node: routeNode,\r\n          isLoading: false,\r\n        });\r\n      } else yield call(setRouteEntry);\r\n    } else {\r\n      let pathNode = null,\r\n        ancestors = null,\r\n        siblings = null;\r\n\r\n      // Handle homepage\r\n      if (isHome) {\r\n        pathNode = yield cachedSearch.getRootNode(\r\n          {\r\n            depth: 0,\r\n            entryFields: '*',\r\n            entryLinkDepth,\r\n            language: 'en-GB',\r\n            versionStatus: deliveryApiStatus,\r\n          },\r\n          project\r\n        );\r\n      } else {\r\n        // Handle preview routes\r\n        if (isPreview) {\r\n          let splitPath = currentPath.split('/');\r\n          let entryGuid = splitPath[2];\r\n          if (splitPath.length == 3) {\r\n            // According to product dev we cannot use Node API\r\n            // for previewing entries as it gives a response of []\r\n            // -- apparently it is not correct to request latest content\r\n            // with Node API\r\n            let previewEntry = yield deliveryApi\r\n              .getClient(deliveryApiStatus, project)\r\n              .entries.get({ id: entryGuid, linkDepth: 3 });\r\n            if (previewEntry) {\r\n              pathNode = { entry: previewEntry };\r\n              // yield call(setRouteEntry, previewEntry);\r\n              // } else {\r\n              // yield call(do404);\r\n            }\r\n          }\r\n        } else {\r\n          // Handle all other routes\r\n          pathNode = yield cachedSearch.getNode(\r\n            {\r\n              depth:\r\n                doNavigation === true || doNavigation.children === true\r\n                  ? 3\r\n                  : (doNavigation && doNavigation.children) || 0,\r\n              path: currentPath,\r\n              entryFields: setContentTypeLimits\r\n                ? ['sys.contentTypeId', 'sys.id']\r\n                : '*',\r\n              entryLinkDepth: setContentTypeLimits ? 0 : entryLinkDepth,\r\n              versionStatus: deliveryApiStatus,\r\n            },\r\n            project\r\n          );\r\n          if (\r\n            setContentTypeLimits &&\r\n            pathNode &&\r\n            pathNode.entry &&\r\n            pathNode.entry.sys &&\r\n            pathNode.entry.sys.id\r\n          ) {\r\n            const contentType = ContentTypeMappings.find(\r\n              ct => ct.contentTypeID === pathNode.entry.sys.contentTypeId\r\n            );\r\n            const query = routeEntryByFieldsQuery(\r\n              pathNode.entry.sys.id,\r\n              contentType && contentType.fields,\r\n              deliveryApiStatus\r\n            );\r\n            const payload = yield cachedSearch.search(\r\n              query,\r\n              contentType && typeof contentType.linkDepth !== 'undefined'\r\n                ? contentType.linkDepth\r\n                : 3,\r\n              project\r\n            );\r\n            if (payload && payload.items && payload.items.length > 0) {\r\n              pathNode.entry = payload.items[0];\r\n            }\r\n          }\r\n        }\r\n\r\n        if (\r\n          pathNode &&\r\n          pathNode.id &&\r\n          (doNavigation === true || doNavigation.ancestors)\r\n        ) {\r\n          ancestors = yield cachedSearch.getAncestors(pathNode.id, project);\r\n\r\n          if (doNavigation === true || doNavigation.siblings) {\r\n            siblings = yield cachedSearch.getSiblings(\r\n              {\r\n                id: pathNode.id,\r\n                entryFields: ['sys.contentTypeId', 'url'],\r\n              },\r\n              project\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      if (\r\n        pathNode &&\r\n        pathNode.entry &&\r\n        pathNode.entry.sys &&\r\n        pathNode.entry.sys.id\r\n      ) {\r\n        entry = pathNode.entry;\r\n        const entryMapper = (\r\n          ContentTypeMappings.find(\r\n            ct => ct.contentTypeID === pathNode.entry.sys.contentTypeId\r\n          ) || {}\r\n        ).entryMapper;\r\n\r\n        yield all([\r\n          call(\r\n            mapRouteEntry,\r\n            entryMapper,\r\n            { ...pathNode, ancestors, siblings },\r\n            state\r\n          ),\r\n          call(setRouteEntry, entry, pathNode, ancestors, siblings),\r\n        ]);\r\n      } else {\r\n        if (pathNode)\r\n          yield call(setRouteEntry, null, pathNode, ancestors, siblings);\r\n        else yield call(do404);\r\n      }\r\n      if (!appsays || !appsays.preventScrollTop) {\r\n        // Scroll into View\r\n        if (typeof window !== 'undefined') {\r\n          window.scroll({\r\n            top: 0,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    if (withEvents && withEvents.onRouteLoaded) {\r\n      yield withEvents.onRouteLoaded({ ...action, entry });\r\n    }\r\n\r\n    if (\r\n      !hasNavigationTree(state) &&\r\n      (doNavigation === true || doNavigation.tree)\r\n    )\r\n      // Load navigation clientside only, a put() should help that work\r\n      yield put({\r\n        type: GET_NODE_TREE,\r\n        treeDepth:\r\n          doNavigation === true ||\r\n          !doNavigation.tree ||\r\n          doNavigation.tree === true\r\n            ? 2\r\n            : doNavigation.tree,\r\n      });\r\n  } catch (e) {\r\n    log.error(...['Error running route saga:', e, e.stack]);\r\n    yield call(do404);\r\n  }\r\n}\r\n\r\nfunction* setRouteEntry(entry, node, ancestors, siblings) {\r\n  yield all([\r\n    put({\r\n      type: SET_ENTRY,\r\n      id: (entry && entry.sys.id) || null,\r\n      entry,\r\n      node,\r\n    }),\r\n    ancestors &&\r\n      put({\r\n        type: SET_ANCESTORS,\r\n        ancestors,\r\n      }),\r\n    siblings &&\r\n      put({\r\n        type: SET_SIBLINGS,\r\n        siblings,\r\n      }),\r\n  ]);\r\n}\r\n\r\nfunction* mapRouteEntry(entryMapper, node, state) {\r\n  if (typeof entryMapper === 'function') {\r\n    const mappedEntry = yield call(entryMapper, node, state);\r\n    yield put({ type: MAP_ENTRY, mappedEntry, node, entryMapper });\r\n  }\r\n}\r\nfunction* do404() {\r\n  yield put({\r\n    type: SET_ENTRY,\r\n    id: null,\r\n    entry: null,\r\n    notFound: true,\r\n  });\r\n}\r\n","import { takeEvery, put, select } from 'redux-saga/effects';\r\n\r\nimport { deliveryApi } from '~/core/util/ContensisDeliveryApi';\r\nimport {\r\n  GET_NODE_TREE,\r\n  SET_NODE_TREE,\r\n  GET_NODE_TREE_ERROR,\r\n} from '~/core/redux/types/navigation';\r\nimport { hasNavigationTree } from '~/core/redux/selectors/navigation';\r\nimport { selectVersionStatus } from '../selectors/version';\r\nimport { selectCurrentProject } from '../selectors/routing';\r\n\r\nexport const navigationSagas = [takeEvery(GET_NODE_TREE, ensureNodeTreeSaga)];\r\n\r\nexport function* ensureNodeTreeSaga(action) {\r\n  const state = yield select();\r\n  try {\r\n    if (!hasNavigationTree(state)) {\r\n      const deliveryApiVersionStatus = yield select(selectVersionStatus);\r\n      const project = yield select(selectCurrentProject);\r\n      const nodes = yield deliveryApi\r\n        .getClient(deliveryApiVersionStatus, project)\r\n        .nodes.getRoot({\r\n          depth: action.treeDepth || 2,\r\n          entryFields: 'entryTitle, metaInformation, sys.contentTypeId',\r\n        });\r\n      if (nodes) {\r\n        yield put({ type: SET_NODE_TREE, nodes });\r\n      } else {\r\n        yield put({ type: GET_NODE_TREE_ERROR });\r\n      }\r\n    }\r\n  } catch (ex) {\r\n    yield put({ type: GET_NODE_TREE_ERROR, error: ex.toString() });\r\n  }\r\n}\r\n","// index.js\r\nimport { all } from 'redux-saga/effects';\r\nimport { routingSagas } from './routing';\r\nimport { sagas as userSagas } from '~/features/login';\r\nimport { navigationSagas } from './navigation';\r\nimport { validateUserSaga } from '~/features/login/redux/sagas';\r\n\r\nexport default function(featureSagas = []) {\r\n  return function* rootSaga() {\r\n    const subSagas = [...routingSagas, ...navigationSagas, ...userSagas];\r\n    yield all([validateUserSaga({}), ...subSagas, ...featureSagas]);\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { hot } from 'react-hot-loader';\r\nimport RouteLoader from '~/core/routes/RouteLoader';\r\n\r\nconst AppRoot = props => {\r\n  return <RouteLoader {...props} />;\r\n};\r\n\r\nexport default hot(module)(AppRoot);\r\n"],"names":["selectedHistory","window","createBrowserHistory","createMemoryHistory","history","options","browserHistory","servers","SERVERS","alias","toLowerCase","publicUri","PUBLIC_URI","projects","PROJECTS","pickProject","hostname","query","p","id","project","includes","startsWith","getClientConfig","config","DELIVERY_API_CONFIG","projectId","PROXY_DELIVERY_API","rootUrl","responseHandler","GetClientSideDeliveryApiStatus","currentHostname","location","GetDeliveryApiStatusFromHostname","indexOf","endsWith","GetResponseGuids","object","Ids","Object","keys","some","k","language","dataFormat","push","subIds","length","GetAllResponseGuids","returnItems","unique","Set","DeliveryApi","search","linkDepth","env","client","Client","create","entries","getClient","deliveryApiStatus","baseConfig","versionStatus","getEntry","get","deliveryApi","CacheNode","constructor","key","value","next","prev","LruCache","limit","map","head","tail","size","node","remove","setHead","set","CachedSearch","cache","taxonomyLookup","request","JSON","stringify","toString","clientConfig","getContentType","contentTypes","getTaxonomyNode","taxonomy","resolveChildren","then","extendTaxonomyNode","getRootNode","nodes","getRoot","getNode","path","getAncestors","getChildren","getSiblings","execute","promise","catch","getTaxonomyId","children","n","parts","split","getTaxonomyKey","cachedSearch","initialState","OrderedMap","contentTypeId","currentPath","currentNode","currentNodeAncestors","List","currentProject","currentTreeId","entry","entryDepends","entryID","isLoading","mappedEntry","nodeDepends","notFound","staticRoute","state","action","type","MAP_ENTRY","fromJS","SET_ANCESTORS","ancestors","ancestorIDs","currentNodeDepends","allNodeDepends","union","SET_ENTRY","nextState","removeIn","SET_NAVIGATION_PATH","route","component","SET_ROUTE","SET_SIBLINGS","currentNodeSiblingParent","siblingIDs","siblings","parentId","SET_TARGET_PROJECT","allowedGroups","Map","commitRef","buildNo","contensisVersionStatus","SET_VERSION_STATUS","status","SET_VERSION","root","treeDepends","isError","isReady","SET_NODE_TREE","GET_NODE_TREE_ERROR","routerMiddleware","store","CALL_HISTORY_METHOD","payload","method","args","featureReducers","thunkMiddleware","thunk","reduxDevToolsMiddleware","f","__REDUX_DEVTOOLS_EXTENSION__","sagaMiddleware","createSagaMiddleware","middleware","compose","applyMiddleware","reducers","navigation","NavigationReducer","routing","RoutingReducer","user","UserReducer","version","VersionReducer","combinedReducers","combineReducers","createStore","runSaga","run","close","dispatch","END","sys","filename","includeInSearch","slug","uri","Fields","entryTitle","entryDescription","keywords","wildcard","fieldExpression","field","operator","weight","Array","isArray","equalToOrIn","Op","defaultExpressions","equalTo","arr","in","routeEntryByFieldsQuery","fields","Query","routingSagas","takeEvery","getRouteSaga","setRouteSaga","put","withEvents","routes","ContentTypeMappings","appsays","onRouteLoad","doNavigation","customNavigation","entryLinkDepth","setContentTypeLimits","find","ct","select","routeEntry","selectRouteEntry","routeNode","selectCurrentNode","selectCurrentPath","selectVersionStatus","selectCurrentProject","isHome","isPreview","customRouting","fetchNode","statePath","toJS","call","setRouteEntry","pathNode","depth","entryFields","splitPath","entryGuid","previewEntry","contentType","contentTypeID","items","entryMapper","all","mapRouteEntry","do404","preventScrollTop","scroll","top","onRouteLoaded","hasNavigationTree","tree","GET_NODE_TREE","treeDepth","e","log","stack","navigationSagas","ensureNodeTreeSaga","deliveryApiVersionStatus","ex","error","featureSagas","rootSaga","subSagas","userSagas","validateUserSaga","AppRoot","props","React","RouteLoader"],"mappings":"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"}