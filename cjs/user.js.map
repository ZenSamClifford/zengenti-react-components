<<<<<<< HEAD
{"version":3,"file":"user.js","sources":["../src/app/features/login/redux/actions.js","../src/app/features/login/containers/useLogin.js","../src/app/features/login/containers/Login.container.js","../src/app/features/login/containers/useRegistration.js","../src/app/features/login/containers/Registration.container.js","../src/app/features/login/containers/withLogin.js","../src/app/features/login/containers/withRegistration.js"],"sourcesContent":["import { action } from '~/core/util/helpers';\r\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER } from './types';\r\n\r\nexport const loginUser = (username, password) =>\r\n  action(LOGIN_USER, { username, password });\r\n\r\nexport const logoutUser = redirectPath => action(LOGOUT_USER, { redirectPath });\r\n\r\nexport const registerUser = (user, mappers) =>\r\n  action(REGISTER_USER, {\r\n    user,\r\n    mappers,\r\n  });\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser, logoutUser } from '../redux/actions';\r\nimport {\r\n  selectUser,\r\n  selectUserAuthenticationError,\r\n  selectUserError,\r\n  selectUserIsAuthenticated,\r\n  selectUserIsLoading,\r\n} from '../redux/selectors';\r\n\r\nconst useLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    loginUser: (username, password) => dispatch(loginUser(username, password)),\r\n    logoutUser: redirectPath => dispatch(logoutUser(redirectPath)),\r\n    authenticationError: select(selectUserAuthenticationError),\r\n    error: select(selectUserError),\r\n    isAuthenticated: select(selectUserIsAuthenticated),\r\n    isLoading: select(selectUserIsLoading),\r\n    user: select(selectUser).toJS(),\r\n  };\r\n};\r\n\r\nexport default useLogin;\r\n","import useLogin from './useLogin';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst LoginContainer = ({ children, ...props }) => {\r\n  const userProps = useLogin(props);\r\n  return children(userProps);\r\n};\r\n\r\nLoginContainer.propTypes = {};\r\n\r\nexport default toJS(LoginContainer);\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { registerUser } from '../redux/actions';\r\nimport {\r\n  selectUserRegistration,\r\n  selectUserRegistrationError,\r\n  selectUserRegistrationIsLoading,\r\n  selectUserRegistrationIsSuccess,\r\n} from '../redux/selectors';\r\n\r\nconst useLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const select = useSelector;\r\n\r\n  return {\r\n    registerUser: (user, mappers) => dispatch(registerUser(user, mappers)),\r\n    error: select(selectUserRegistrationError),\r\n    isLoading: select(selectUserRegistrationIsLoading),\r\n    isSuccess: select(selectUserRegistrationIsSuccess),\r\n    user: select(selectUserRegistration).toJS(),\r\n  };\r\n};\r\n\r\nexport default useLogin;\r\n","import useRegistration from './useRegistration';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst RegistrationContainer = ({ children, ...props }) => {\r\n  const userProps = useRegistration(props);\r\n  return children(userProps);\r\n};\r\n\r\nRegistrationContainer.propTypes = {};\r\n\r\nexport default toJS(RegistrationContainer);\r\n","import { connect } from 'react-redux';\r\nimport { loginUser, logoutUser } from '../redux/actions';\r\nimport {\r\n  selectUser,\r\n  selectUserAuthenticationError,\r\n  selectUserError,\r\n  selectUserIsAuthenticated,\r\n  selectUserIsLoading,\r\n} from '../redux/selectors';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst getDisplayName = WrappedComponent => {\r\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\r\n};\r\n\r\nconst withLogin = WrappedComponent => {\r\n  // Returns a redux-connected component with the following props:\r\n  // this.propTypes = {\r\n  //   loading: PropTypes.bool,\r\n  //   authenticated: PropTypes.bool,\r\n  //   authenticationError: PropTypes.bool,\r\n  //   error: PropTypes.bool,\r\n  //   user: PropTypes.object,\r\n  //   logoutUser: PropTypes.func,\r\n  //   isHeaderLogin: PropTypes.bool,\r\n  // };\r\n\r\n  const mapStateToProps = state => {\r\n    return {\r\n      authenticationError: selectUserAuthenticationError(state),\r\n      error: selectUserError(state),\r\n      isAuthenticated: selectUserIsAuthenticated(state),\r\n      isLoading: selectUserIsLoading(state),\r\n      user: selectUser(state),\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps = {\r\n    loginUser,\r\n    logoutUser,\r\n  };\r\n\r\n  const ConnectedComponent = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(toJS(WrappedComponent));\r\n\r\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\r\n\r\n  return ConnectedComponent;\r\n};\r\n\r\nexport default withLogin;\r\n","import { connect } from 'react-redux';\r\nimport { registerUser } from '../redux/actions';\r\nimport {\r\n  selectUserRegistration,\r\n  selectUserRegistrationError,\r\n  selectUserRegistrationIsLoading,\r\n  selectUserRegistrationIsSuccess,\r\n} from '../redux/selectors';\r\nimport { toJS } from '~/core/util/ToJs';\r\n\r\nconst getDisplayName = WrappedComponent => {\r\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\r\n};\r\n\r\nconst withRegistration = WrappedComponent => {\r\n  // Returns a redux-connected component with the following props:\r\n  // this.propTypes = {\r\n  //   registerUser: PropTypes.func,\r\n  //   isLoading: PropTypes.bool,\r\n  //   isSuccess: PropTypes.bool,\r\n  //   error: PropTypes.bool | PropTypes.object,\r\n  //   user: PropTypes.object,\r\n  // };\r\n\r\n  const mapStateToProps = state => {\r\n    return {\r\n      error: selectUserRegistrationError(state),\r\n      isLoading: selectUserRegistrationIsLoading(state),\r\n      isSuccess: selectUserRegistrationIsSuccess(state),\r\n      user: selectUserRegistration(state),\r\n    };\r\n  };\r\n\r\n  const mapDispatchToProps = {\r\n    registerUser,\r\n  };\r\n\r\n  const ConnectedComponent = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(toJS(WrappedComponent));\r\n\r\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\r\n\r\n  return ConnectedComponent;\r\n};\r\n\r\nexport default withRegistration;\r\n"],"names":["loginUser","username","password","action","LOGIN_USER","logoutUser","redirectPath","LOGOUT_USER","registerUser","user","mappers","REGISTER_USER","useLogin","dispatch","useDispatch","select","useSelector","authenticationError","selectUserAuthenticationError","error","selectUserError","isAuthenticated","selectUserIsAuthenticated","isLoading","selectUserIsLoading","selectUser","toJS","LoginContainer","children","props","userProps","propTypes","selectUserRegistrationError","selectUserRegistrationIsLoading","isSuccess","selectUserRegistrationIsSuccess","selectUserRegistration","RegistrationContainer","useRegistration","getDisplayName","WrappedComponent","displayName","name","withLogin","mapStateToProps","state","mapDispatchToProps","ConnectedComponent","connect","withRegistration"],"mappings":"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"}
=======
{"version":3,"file":"user.js","sources":["../src/app/features/login/components/withLogin.js"],"sourcesContent":["import { connect } from 'react-redux';\nimport {\n  loginUser,\n  logoutUser,\n  toggleLoginMode,\n  forgotPassword,\n  changePassword,\n  changePasswordWithToken,\n  setRecaptchaResponse,\n} from '../redux/actions';\nimport {\n  selectUser,\n  selectUserMessage,\n  selectLoginScreenMode,\n  selectPasswordMessage,\n  selectChangePasswordMessage,\n  selectCaptchaSiteKey,\n  selectCaptchaResponse,\n  selectUserLoggedIn,\n} from '../redux/selectors';\nimport { toJS } from '~/core/util/ToJs';\nimport {\n  selectCurrentPath,\n  selectQueryStringAsObject,\n} from '~/core/redux/selectors/routing';\n\nconst getDisplayName = WrappedComponent => {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n};\n\nconst withLogin = WrappedComponent => {\n  // Returns a redux-connected component with the following props:\n  // this.propTypes = {\n  //   loginUser: PropTypes.func,\n  //   logoutUser: PropTypes.func,\n  //   user: PropTypes.object,\n  // };\n\n  const mapStateToProps = state => {\n    return {\n      user: selectUser(state),\n      userMessage: selectUserMessage(state),\n      screenMode: selectLoginScreenMode(state),\n      passwordMessage: selectPasswordMessage(state),\n      changePasswordMessage: selectChangePasswordMessage(state),\n      captchaSiteKey: selectCaptchaSiteKey(state),\n      isHuman: selectCaptchaResponse(state),\n      isLoggedIn: selectUserLoggedIn(state),\n      currentPath: selectCurrentPath(state),\n      queryString: selectQueryStringAsObject(state),\n    };\n  };\n\n  const mapDispatchToProps = {\n    loginUser,\n    logoutUser,\n    toggleLoginMode,\n    forgotPassword,\n    changePassword,\n    changePasswordWithToken,\n    captchaResponse: setRecaptchaResponse,\n  };\n\n  const ConnectedComponent = connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(toJS(WrappedComponent));\n\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\n\n  return ConnectedComponent;\n};\n\nexport default withLogin;\n"],"names":["getDisplayName","WrappedComponent","displayName","name","withLogin","mapStateToProps","state","user","selectUser","userMessage","selectUserMessage","screenMode","selectLoginScreenMode","passwordMessage","selectPasswordMessage","changePasswordMessage","selectChangePasswordMessage","captchaSiteKey","selectCaptchaSiteKey","isHuman","selectCaptchaResponse","isLoggedIn","selectUserLoggedIn","currentPath","selectCurrentPath","queryString","selectQueryStringAsObject","mapDispatchToProps","loginUser","logoutUser","toggleLoginMode","forgotPassword","changePassword","changePasswordWithToken","captchaResponse","setRecaptchaResponse","ConnectedComponent","connect","toJS"],"mappings":";;;;;;;;;;;;;;;AA0BA,MAAMA,cAAc,GAAGC,gBAAgB,IAAI;AACzC,SAAOA,gBAAgB,CAACC,WAAjB,IAAgCD,gBAAgB,CAACE,IAAjD,IAAyD,WAAhE;AACD,CAFD;;MAIMC,SAAS,GAAGH,gBAAgB,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMI,eAAe,GAAGC,KAAK,IAAI;AAC/B,WAAO;AACLC,MAAAA,IAAI,EAAEC,oBAAU,CAACF,KAAD,CADX;AAELG,MAAAA,WAAW,EAAEC,2BAAiB,CAACJ,KAAD,CAFzB;AAGLK,MAAAA,UAAU,EAAEC,+BAAqB,CAACN,KAAD,CAH5B;AAILO,MAAAA,eAAe,EAAEC,+BAAqB,CAACR,KAAD,CAJjC;AAKLS,MAAAA,qBAAqB,EAAEC,qCAA2B,CAACV,KAAD,CAL7C;AAMLW,MAAAA,cAAc,EAAEC,8BAAoB,CAACZ,KAAD,CAN/B;AAOLa,MAAAA,OAAO,EAAEC,+BAAqB,CAACd,KAAD,CAPzB;AAQLe,MAAAA,UAAU,EAAEC,4BAAkB,CAAChB,KAAD,CARzB;AASLiB,MAAAA,WAAW,EAAEC,2BAAiB,CAAClB,KAAD,CATzB;AAULmB,MAAAA,WAAW,EAAEC,mCAAyB,CAACpB,KAAD;AAVjC,KAAP;AAYD,GAbD;;AAeA,QAAMqB,kBAAkB,GAAG;AACzBC,eAAAA,iBADyB;AAEzBC,gBAAAA,kBAFyB;AAGzBC,qBAAAA,uBAHyB;AAIzBC,oBAAAA,sBAJyB;AAKzBC,oBAAAA,sBALyB;AAMzBC,6BAAAA,+BANyB;AAOzBC,IAAAA,eAAe,EAAEC;AAPQ,GAA3B;AAUA,QAAMC,kBAAkB,GAAGC,kBAAO,CAChChC,eADgC,EAEhCsB,kBAFgC,CAAP,CAGzBW,SAAI,CAACrC,gBAAD,CAHqB,CAA3B;AAKAmC,EAAAA,kBAAkB,CAAClC,WAAnB,GAAkC,GAAEF,cAAc,CAACC,gBAAD,CAAmB,EAArE;AAEA,SAAOmC,kBAAP;AACD;;;;;;;;"}
>>>>>>> isomorphic-base
